{"/home/travis/build/npmtest/node-npmtest-steam-user/test.js":"/* istanbul instrument in package npmtest_steam_user */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-steam-user/lib.npmtest_steam_user.js":"/* istanbul instrument in package npmtest_steam_user */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_steam_user = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_steam_user = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-steam-user/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-steam-user && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_steam_user */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_steam_user\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_steam_user.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_steam_user.rollup.js'] =\n            local.assetsDict['/assets.npmtest_steam_user.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_steam_user.__dirname + '/lib.npmtest_steam_user.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/index.js":"var Steam = require('steam-client');\r\nvar AppDirectory = require('appdirectory');\r\nvar FileStorage = require('file-manager');\r\n\r\nrequire('util').inherits(SteamUser, require('events').EventEmitter);\r\n\r\nmodule.exports = SteamUser;\r\n\r\nSteamUser.Steam = Steam;\r\nSteamUser.CurrencyData = require('./resources/CurrencyData.js');\r\nSteamUser.EMachineIDType = require('./resources/EMachineIDType.js');\r\nSteamUser.EPurchaseResult = require('./resources/EPurchaseResult.js');\r\nSteamUser.EClientUIMode = require('./resources/EClientUIMode.js');\r\n\r\nrequire('./resources/enums.js');\r\n\r\ntry {\r\n\tSteamUser.Steam.servers = require('./resources/servers.json');\r\n} catch (e) {\r\n\t// It's okay if it isn't there\r\n}\r\n\r\nfunction SteamUser(client, options) {\r\n\tif (client && client.constructor.name !== 'SteamClient' && client.constructor.name !== 'CMClient') {\r\n\t\toptions = client;\r\n\t\tclient = null;\r\n\t}\r\n\r\n\tthis.client = client ? client : new Steam.CMClient();\r\n\tthis.steamID = null;\r\n\r\n\t// Account info\r\n\tthis.limitations = null;\r\n\tthis.vac = null;\r\n\tthis.wallet = null;\r\n\tthis.emailInfo = null;\r\n\tthis.licenses = null;\r\n\tthis.gifts = null;\r\n\r\n\t// Friends and users info\r\n\tthis.users = {};\r\n\tthis.groups = {};\r\n\tthis.chats = {};\r\n\tthis.myFriends = {};\r\n\tthis.myGroups = {};\r\n\tthis.myFriendGroups = {};\r\n\tthis.myNicknames = {};\r\n\tthis.steamServers = {};\r\n\tthis.contentServersReady = false;\r\n\r\n\tthis._gcTokens = []; // game connect tokens\r\n\tthis._connectTime = 0;\r\n\tthis._connectionCount = 0;\r\n\tthis._authSeqMe = 0;\r\n\tthis._authSeqThem = 0;\r\n\tthis._hSteamPipe = Math.floor(Math.random() * 1000000) + 1;\r\n\tthis._contentServers = [];\r\n\tthis._contentServerTokens = {};\r\n\r\n\t// App and package cache\r\n\tthis._changelistUpdateTimer = null;\r\n\tthis.picsCache = {\r\n\t\t\"changenumber\": 0,\r\n\t\t\"apps\": {},\r\n\t\t\"packages\": {}\r\n\t};\r\n\r\n\tthis._sentry = null;\r\n\r\n\tthis.options = options || {};\r\n\r\n\tvar defaultOptions = {\r\n\t\t\"autoRelogin\": true,\r\n\t\t\"singleSentryfile\": false,\r\n\t\t\"promptSteamGuardCode\": true,\r\n\t\t\"machineIdType\": SteamUser.EMachineIDType.AccountNameGenerated,\r\n\t\t\"machineIdFormat\": [\"SteamUser Hash BB3 {account_name}\", \"SteamUser Hash FF2 {account_name}\", \"SteamUser Hash 3B3 {account_name}\"],\r\n\t\t\"enablePicsCache\": false,\r\n\t\t\"picsCacheAll\": false,\r\n\t\t\"changelistUpdateInterval\": 60000,\r\n\t\t\"saveAppTickets\": true,\r\n\t\t\"debug\": false\r\n\t};\r\n\r\n\tfor (var i in defaultOptions) {\r\n\t\tif (!defaultOptions.hasOwnProperty(i)) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tif (typeof this.options[i] === 'undefined') {\r\n\t\t\tthis.options[i] = defaultOptions[i];\r\n\t\t}\r\n\t}\r\n\r\n\tif (!this.options.dataDirectory && this.options.dataDirectory !== null) {\r\n\t\tif (process.env.OPENSHIFT_DATA_DIR) {\r\n\t\t\tthis.options.dataDirectory = process.env.OPENSHIFT_DATA_DIR + \"/node-steamuser\";\r\n\t\t} else {\r\n\t\t\tthis.options.dataDirectory = (new AppDirectory({\r\n\t\t\t\t\"appName\": \"node-steamuser\",\r\n\t\t\t\t\"appAuthor\": \"doctormckay\"\r\n\t\t\t})).userData();\r\n\t\t}\r\n\t}\r\n\r\n\tif (this.options.dataDirectory) {\r\n\t\tthis.storage = new FileStorage(this.options.dataDirectory);\r\n\t}\r\n\r\n\tthis.client.on('message', this._handleMessage.bind(this));\r\n\r\n\tvar self = this;\r\n\tthis.client.on('error', function(e) {\r\n\t\tif (!self.steamID && e.result != SteamUser.EResult.ConnectFailed) {\r\n\t\t\treturn; // We've already handled this\r\n\t\t}\r\n\r\n\t\tself._handleLogOff(e.eresult || SteamUser.EResult.NoConnection, e.message || \"NoConnection\");\r\n\t});\r\n\r\n\tthis.client.on('servers', function(servers) {\r\n\t\tif (self.storage) {\r\n\t\t\tself.storage.writeFile('servers.json', JSON.stringify(servers, null, \"\\t\"));\r\n\t\t}\r\n\r\n\t\tif (!client) {\r\n\t\t\t// It's an internal client, so we know that our Steam has an up-to-date server list\r\n\t\t\tSteam['__SteamUserServersSet__'] = true;\r\n\t\t}\r\n\t});\r\n}\r\n\r\nSteamUser.prototype.setOption = function(option, value) {\r\n\tthis.options[option] = value;\r\n\r\n\t// Handle anything that needs to happen when particular options update\r\n\tswitch (option) {\r\n\t\tcase 'dataDirectory':\r\n\t\t\tif (!this.storage) {\r\n\t\t\t\tthis.storage = new FileStorage(value);\r\n\t\t\t} else {\r\n\t\t\t\tthis.storage.directory = value;\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'enablePicsCache':\r\n\t\t\tthis._resetChangelistUpdateTimer();\r\n\t\t\tthis._getLicenseInfo();\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'changelistUpdateInterval':\r\n\t\t\tthis._resetChangelistUpdateTimer();\r\n\t\t\tbreak;\r\n\t}\r\n};\r\n\r\nSteamUser.prototype.setOptions = function(options) {\r\n\tfor (var i in options) {\r\n\t\tif (!options.hasOwnProperty(i)) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tthis.setOption(i, options[i]);\r\n\t}\r\n};\r\n\r\nrequire('./components/messages.js');\r\nrequire('./components/webapi.js');\r\nrequire('./components/logon.js');\r\nrequire('./components/sentry.js');\r\nrequire('./components/web.js');\r\nrequire('./components/notifications.js');\r\nrequire('./components/apps.js');\r\nrequire('./components/appauth.js');\r\nrequire('./components/account.js');\r\nrequire('./components/gameservers.js');\r\nrequire('./components/utility.js');\r\nrequire('./components/trading.js');\r\nrequire('./components/friends.js');\r\nrequire('./components/chat.js');\r\nrequire('./components/twofactor.js');\r\nrequire('./components/pubfiles.js');\r\nrequire('./components/cdn.js');\r\n\r\n/**\r\n * Called when the request completes.\r\n * @callback SteamUser~genericEResultCallback\r\n * @param {EResult} eresult - The result of the operation\r\n */\r\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/components/account.js":"var SteamUser = require('../index.js');\r\nvar Helpers = require('./helpers.js');\r\nvar SteamID = require('steamid');\r\nvar ByteBuffer = require('bytebuffer');\r\nvar BinaryKVParser = require('binarykvparser');\r\n\r\nSteamUser.prototype.createAccount = function(accountName, password, email, callback) {\r\n\tif (typeof callback === 'string' && typeof arguments[5] === 'function') {\r\n\t\t// Support people providing questions/answers from back when that was a thing\r\n\t\tcallback = arguments[5];\r\n\t}\r\n\r\n\tthis._send(SteamUser.EMsg.ClientCreateAccountProto, {\r\n\t\t\"account_name\": accountName,\r\n\t\t\"password\": password,\r\n\t\t\"email\": email,\r\n\t\t\"launcher\": 0\r\n\t}, function(body) {\r\n\t\tcallback(body.eresult, body.steamid ? new SteamID(body.steamid.toString()) : null);\r\n\t});\r\n};\r\n\r\nSteamUser.prototype.requestValidationEmail = function(callback) {\r\n\tvar body = new ByteBuffer(1, ByteBuffer.LITTLE_ENDIAN);\r\n\tbody.writeUint8(0);\r\n\tthis._send(SteamUser.EMsg.ClientRequestValidationMail, body, function(response) {\r\n\t\tif (!callback) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tcallback(response.readUint32());\r\n\t});\r\n};\r\n\r\nSteamUser.prototype.getSteamGuardDetails = function(callback) {\r\n\tthis._sendUnified(\"Credentials.GetSteamGuardDetails#1\", {}, false, function(body) {\r\n\t\tvar canTrade = true;\r\n\t\tvar hasHadTwoFactorForWeek = (body.is_twofactor_enabled && body.timestamp_twofactor_enabled && Math.floor(Date.now() / 1000) - body.timestamp_twofactor_enabled >= (60 * 60 * 24 * 7));\r\n\r\n\t\tif (!body.is_steamguard_enabled) {\r\n\t\t\tcanTrade = false; // SG is not enabled\r\n\t\t} else if (!body.timestamp_steamguard_enabled || Math.floor(Date.now() / 1000) - body.timestamp_steamguard_enabled < (60 * 60 * 24 * 15)) {\r\n\t\t\tcanTrade = false; // SG has not been enabled for 15 days\r\n\t\t} else if (\r\n\t\t\t!hasHadTwoFactorForWeek &&\r\n\t\t\t(\r\n\t\t\t\t!body.session_data || !body.session_data[0] || !body.session_data[0].timestamp_machine_steamguard_enabled ||\r\n\t\t\t\tMath.floor(Date.now() / 1000) - body.session_data[0].timestamp_machine_steamguard_enabled < (60 * 60 * 24 * 7)\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tcanTrade = false; // Haven't had 2FA for 7 days, and this machine's auth is less than 7 days old\r\n\t\t}\r\n\r\n\t\tcallback(\r\n\t\t\t!!body.is_steamguard_enabled,\r\n\t\t\tbody.timestamp_steamguard_enabled ? new Date(body.timestamp_steamguard_enabled * 1000) : null,\r\n\t\t\tbody.session_data && body.session_data[0] && body.session_data[0].timestamp_machine_steamguard_enabled ? new Date(body.session_data[0].timestamp_machine_steamguard_enabled * 1000) : null,\r\n\t\t\tcanTrade,\r\n\t\t\tbody.is_twofactor_enabled && body.timestamp_twofactor_enabled ? new Date(body.timestamp_twofactor_enabled * 1000) : null,\r\n\t\t\tbody.is_phone_verified || false\r\n\t\t);\r\n\t});\r\n};\r\n\r\nSteamUser.prototype.getCredentialChangeTimes = function(callback) {\r\n\tthis._sendUnified(\"Credentials.GetCredentialChangeTimeDetails#1\", {}, false, function(body) {\r\n\t\tcallback(body.timestamp_last_password_change ? new Date(body.timestamp_last_password_change * 1000) : null,\r\n\t\t\tbody.timestamp_last_password_reset ? new Date(body.timestamp_last_password_reset * 1000) : null,\r\n\t\t\tbody.timestamp_last_email_change ? new Date(body.timestamp_last_email_change * 1000) : null);\r\n\t});\r\n};\r\n\r\nSteamUser.prototype.getAuthSecret = function(callback) {\r\n\tthis._sendUnified(\"Credentials.GetAccountAuthSecret#1\", {}, false, function(body) {\r\n\t\tcallback(body.secret_id, body.secret.toBuffer());\r\n\t});\r\n};\r\n\r\n// Honestly not sure what this is for, but it works.\r\n/*SteamUser.prototype.getStreamingEncryptionKey = function(callback) {\r\n\tthis._send(SteamUser.EMsg.ClientUnlockStreaming, {}, function(body) {\r\n\t\tif (body.eresult != SteamUser.EResult.OK) {\r\n\t\t\tcallback(Helpers.eresultError(body.eresult));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tcallback(null, body.encryption_key);\r\n\t});\r\n};*/\r\n\r\nSteamUser.prototype.requestPasswordChangeEmail = function(currentPassword, callback) {\r\n\tvar buf = new ByteBuffer(81 + 4); // a static 81 bytes for the password, and 4 for the int at the end\r\n\tbuf.writeCString(currentPassword);\r\n\r\n\tfor (var i = currentPassword.length + 1; i <= 81; i++) {\r\n\t\tbuf.writeByte(0);\r\n\t}\r\n\r\n\tbuf.writeUint32(1); // dunno, maybe what type of change we want?\r\n\tthis._send(SteamUser.EMsg.ClientRequestChangeMail, buf.flip(), function(body) {\r\n\t\tif (!callback) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tcallback(Helpers.eresultError(body.readUint32()));\r\n\t});\r\n};\r\n\r\nSteamUser.prototype.changePassword = function(oldPassword, newPassword, code, callback) {\r\n\tvar buf = new ByteBuffer(1 + oldPassword.length + 1 + newPassword.length + 1 + code.length + 1, ByteBuffer.LITTLE_ENDIAN);\r\n\tbuf.writeCString(\"\"); // unknown\r\n\tbuf.writeCString(oldPassword);\r\n\tbuf.writeCString(newPassword);\r\n\tbuf.writeCString(code);\r\n\r\n\tthis._send(SteamUser.EMsg.ClientPasswordChange3, buf.flip(), function(body) {\r\n\t\tif (!callback) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tcallback(Helpers.eresultError(body.readUint32()));\r\n\t});\r\n};\r\n\r\nSteamUser.prototype.changeEmail = function(options, callback) {\r\n\tthis._send(SteamUser.EMsg.ClientEmailChange4, {\r\n\t\t\"password\": options.password,\r\n\t\t\"email\": options.newEmail || options.email,\r\n\t\t\"code\": options.code,\r\n\t\t\"final\": !!options.code,\r\n\t\t\"newmethod\": true,\r\n\t\t\"twofactor_code\": options.twoFactorCode,\r\n\t\t\"sms_code\": options.smsCode,\r\n\t\t\"client_supports_sms\": true // this appears to be ignored; it asks for an SMS code regardless of value\r\n\t}, function(body) {\r\n\t\tif (!callback) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (body.eresult != SteamUser.EResult.OK) {\r\n\t\t\tcallback(Helpers.eresultError(body.eresult));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tcallback(null, !!body.requires_sms_code);\r\n\t});\r\n};\r\n\r\n// Handlers\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientAccountInfo] = function(body) {\r\n\t// Steam appears to send this twice on logon. Let's collapse it down to one event.\r\n\tvar info = {\r\n\t\t\"name\": body.persona_name,\r\n\t\t\"country\": body.ip_country,\r\n\t\t\"authedMachines\": body.count_authed_computers,\r\n\t\t\"flags\": body.account_flags,\r\n\t\t\"facebookID\": body.facebook_id ? body.facebook_id.toString() : null,\r\n\t\t\"facebookName\": body.facebook_name\r\n\t};\r\n\r\n\tif (this.accountInfo) {\r\n\t\t// Check if everything is identical\r\n\t\tvar anythingDifferent = false;\r\n\t\tfor (var i in this.accountInfo) {\r\n\t\t\tif (this.accountInfo.hasOwnProperty(i) && info.hasOwnProperty(i) && this.accountInfo[i] != info[i]) {\r\n\t\t\t\tanythingDifferent = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!anythingDifferent) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\tthis.emit('accountInfo', info.name, info.country, info.authedMachines, info.flags, info.facebookID, info.facebookName);\r\n\tthis.accountInfo = info;\r\n};\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientEmailAddrInfo] = function(body) {\r\n\tthis.emit('emailInfo', body.email_address, body.email_is_validated);\r\n\tthis.emailInfo = {\r\n\t\t\"address\": body.email_address,\r\n\t\t\"validated\": body.email_is_validated\r\n\t};\r\n};\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientIsLimitedAccount] = function(body) {\r\n\tthis.emit('accountLimitations', body.bis_limited_account, body.bis_community_banned, body.bis_locked_account, body.bis_limited_account_allowed_to_invite_friends);\r\n\tthis.limitations = {\r\n\t\t\"limited\": body.bis_limited_account,\r\n\t\t\"communityBanned\": body.bis_community_banned,\r\n\t\t\"locked\": body.bis_locked_account,\r\n\t\t\"canInviteFriends\": body.bis_limited_account_allowed_to_invite_friends\r\n\t};\r\n};\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientVACBanStatus] = function(body) {\r\n\tvar appids = [], ranges = [];\r\n\r\n\tvar numBans = body.readUint32();\r\n\r\n\tvar rangeStart, rangeEnd, j;\r\n\tfor (var i = 0; i < numBans; i++) {\r\n\t\trangeStart = body.readUint32();\r\n\t\trangeEnd = body.readUint32();\r\n\t\tbody.skip(4); // 4-byte unknown \"0\" value\r\n\r\n\t\tif (rangeEnd < rangeStart) {\r\n\t\t\tj = rangeEnd;\r\n\t\t\trangeEnd = rangeStart;\r\n\t\t\trangeStart = j;\r\n\t\t}\r\n\r\n\t\tranges.push([rangeStart, rangeEnd]);\r\n\r\n\t\tfor (j = rangeStart; j <= rangeEnd; j++) {\r\n\t\t\tappids.push(j);\r\n\t\t}\r\n\t}\r\n\r\n\tthis.emit('vacBans', numBans, appids, ranges);\r\n\r\n\tthis.vac = {\r\n\t\t\"numBans\": numBans,\r\n\t\t\"appids\": appids,\r\n\t\t\"ranges\": ranges\r\n\t};\r\n};\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientWalletInfoUpdate] = function(body) {\r\n\tif (this.wallet && body.has_wallet == this.wallet.hasWallet && body.currency == this.wallet.currency && body.balance / 100 == this.wallet.balance) {\r\n\t\treturn; // nothing changed\r\n\t}\r\n\r\n\tthis.emit('wallet', body.has_wallet, body.currency, body.balance / 100);\r\n\tthis.wallet = {\r\n\t\t\"hasWallet\": body.has_wallet,\r\n\t\t\"currency\": body.currency,\r\n\t\t\"balance\": body.balance / 100\r\n\t};\r\n};\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientVanityURLChangedNotification] = function(body) {\r\n\tthis.emit('vanityURL', body.vanity_url);\r\n\tthis.vanityURL = body.vanity_url;\r\n};\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientUpdateGuestPassesList] = function(body) {\r\n\tvar eresult = body.readUint32();\r\n\tif (eresult != SteamUser.EResult.OK) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar countToGive = body.readUint32();\r\n\tvar countToRedeem = body.readUint32();\r\n\r\n\tfor (var i = 0; i < countToGive; i++) {\r\n\t\tBinaryKVParser.parse(body); // throw it away, I don't think this should be possible\r\n\t}\r\n\r\n\tvar gifts = [], gift, key;\r\n\tfor (i = 0; i < countToRedeem; i++) {\r\n\t\tgift = BinaryKVParser.parse(body).MessageObject;\r\n\r\n\t\tfor (key in gift) {\r\n\t\t\tif (!gift.hasOwnProperty(key)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (key == 'gid') {\r\n\t\t\t\tgift[key] = gift[key].toString();\r\n\t\t\t}\r\n\r\n\t\t\tif (key.match(/^Time/)) {\r\n\t\t\t\tgift[key] = gift[key] ? new Date(gift[key] * 1000) : null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tgifts.push(gift);\r\n\t}\r\n\r\n\tif (this.gifts && this.gifts.length == gifts.length) {\r\n\t\treturn; // nothing changed\r\n\t}\r\n\r\n\tthis.emit('gifts', gifts);\r\n\tthis.gifts = gifts;\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/components/appauth.js":"var SteamUser = require('../index.js');\r\nvar Helpers = require('./helpers.js');\r\nvar Schema = require('./protobufs.js');\r\n\r\n/**\r\n * Request an encrypted appticket for a particular app. The app must be set up on the Steam backend for encrypted apptickets.\r\n * @param {int} appid - The Steam AppID of the app you want a ticket for\r\n * @param {Buffer} [userData] - If the app expects some \"user data\", provide it here\r\n * @param {function} callback - First argument is \"err\", second is the ticket as a Buffer (on success)\r\n */\r\nSteamUser.prototype.getEncryptedAppTicket = function(appid, userData, callback) {\r\n\tif (typeof userData === 'function') {\r\n\t\tcallback = userData;\r\n\t\tuserData = new Buffer(0);\r\n\t}\r\n\r\n\tvar self = this;\r\n\tthis._send(SteamUser.EMsg.ClientRequestEncryptedAppTicket, {\"app_id\": appid, \"userdata\": userData}, function(body) {\r\n\t\tif (body.eresult != SteamUser.EResult.OK) {\r\n\t\t\tcallback(Helpers.eresultError(body.eresult));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (body.app_id != appid) {\r\n\t\t\t// Don't know if this can even happen\r\n\t\t\tcallback(new Error(\"Steam did not send an appticket for the requested appid\"));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!body.encrypted_app_ticket) {\r\n\t\t\tcallback(new Error(\"No appticket in response\"));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tcallback(null, (new Schema.EncryptedAppTicket(body.encrypted_app_ticket)).toBuffer());\r\n\t});\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/components/apps.js":"var SteamUser = require('../index.js');\r\nvar SteamID = require('steamid');\r\nvar VDF = require('vdf');\r\nvar BinaryKVParser = require('binarykvparser');\r\n\r\nvar Helpers = require('./helpers.js');\r\n\r\nvar PICSRequestType = {\r\n\t\"User\": 0,\r\n\t\"Changelist\": 1,\r\n\t\"Licenses\": 2,\r\n\t\"PackageContents\": 3,\r\n\t\"AddToCache\": 4\r\n};\r\n\r\nSteamUser.prototype.gamesPlayed = function(apps) {\r\n\tif (!(apps instanceof Array)) {\r\n\t\tapps = [apps];\r\n\t}\r\n\r\n\tthis._send(SteamUser.EMsg.ClientGamesPlayed, apps.map(function(app) {\r\n\t\tif (typeof app === 'string') {\r\n\t\t\treturn {\r\n\t\t\t\t\"game_id\": \"15190414816125648896\",\r\n\t\t\t\t\"game_extra_info\": app\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif (typeof app === 'object') {\r\n\t\t\treturn app;\r\n\t\t}\r\n\r\n\t\treturn {\"game_id\": app};\r\n\t}));\r\n};\r\n\r\nSteamUser.prototype.getPlayerCount = function(appid, callback) {\r\n\tthis._send(SteamUser.EMsg.ClientGetNumberOfCurrentPlayersDP, {\"appid\": appid}, function(body) {\r\n\t\tcallback(body.eresult, body.player_count);\r\n\t});\r\n};\r\n\r\nSteamUser.prototype.getProductChanges = function(sinceChangenumber, callback) {\r\n\tthis._send(SteamUser.EMsg.ClientPICSChangesSinceRequest, {\r\n\t\t\"since_change_number\": sinceChangenumber,\r\n\t\t\"send_app_info_changes\": true,\r\n\t\t\"send_package_info_changes\": true\r\n\t}, function(body) {\r\n\t\tcallback(body.current_change_number, body.app_changes, body.package_changes);\r\n\t});\r\n};\r\n\r\nSteamUser.prototype.getProductInfo = function(apps, packages, callback, requestType) {\r\n\trequestType = requestType || PICSRequestType.User;\r\n\r\n\t// Steam can send us the full response in multiple responses, so we need to buffer them into one callback\r\n\tvar appids = [];\r\n\tvar packageids = [];\r\n\tvar response = {\r\n\t\t\"apps\": {},\r\n\t\t\"packages\": {},\r\n\t\t\"unknownApps\": [],\r\n\t\t\"unknownPackages\": []\r\n\t};\r\n\r\n\tapps = apps.map(function(app) {\r\n\t\tif (typeof app === 'object') {\r\n\t\t\tappids.push(app.appid);\r\n\t\t\treturn app;\r\n\t\t} else {\r\n\t\t\tappids.push(app);\r\n\t\t\treturn {\"appid\": app};\r\n\t\t}\r\n\t});\r\n\r\n\tpackages = packages.map(function(pkg) {\r\n\t\tif (typeof pkg === 'object') {\r\n\t\t\tpackageids.push(pkg.packageid);\r\n\t\t\treturn pkg;\r\n\t\t} else {\r\n\t\t\tpackageids.push(pkg);\r\n\t\t\treturn {\"packageid\": pkg};\r\n\t\t}\r\n\t});\r\n\r\n\tvar self = this;\r\n\tthis._send(SteamUser.EMsg.ClientPICSProductInfoRequest, {\r\n\t\t\"apps\": apps,\r\n\t\t\"packages\": packages\r\n\t}, function(body) {\r\n\t\t// If we're using the PICS cache, then add the items in this response to it\r\n\t\tif (self.options.enablePicsCache) {\r\n\t\t\tvar cache = self.picsCache;\r\n\t\t\tcache.apps = cache.apps || {};\r\n\t\t\tcache.packages = cache.packages || {};\r\n\r\n\t\t\t(body.apps || []).forEach(function(app) {\r\n\t\t\t\tvar data = {\r\n\t\t\t\t\t\"changenumber\": app.change_number,\r\n\t\t\t\t\t\"missingToken\": !!app.missing_token,\r\n\t\t\t\t\t\"appinfo\": VDF.parse(app.buffer.toString('utf8')).appinfo\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif ((!cache.apps[app.appid] && requestType == PICSRequestType.Changelist) || (cache.apps[app.appid] && cache.apps[app.appid].changenumber != data.changenumber)) {\r\n\t\t\t\t\t// Only emit the event if we previously didn't have the appinfo, or if the changenumber changed\r\n\t\t\t\t\tself.emit('appUpdate', app.appid, data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcache.apps[app.appid] = data;\r\n\r\n\t\t\t\tapp._parsedData = data;\r\n\t\t\t});\r\n\r\n\t\t\t(body.packages || []).forEach(function(pkg) {\r\n\t\t\t\tvar data = {\r\n\t\t\t\t\t\"changenumber\": pkg.change_number,\r\n\t\t\t\t\t\"missingToken\": !!pkg.missing_token,\r\n\t\t\t\t\t\"packageinfo\": BinaryKVParser.parse(pkg.buffer)[pkg.packageid]\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif ((!cache.packages[pkg.packageid] && requestType == PICSRequestType.Changelist) || (cache.packages[pkg.packageid] && cache.packages[pkg.packageid].changenumber != data.changenumber)) {\r\n\t\t\t\t\tself.emit('packageUpdate', pkg.packageid, data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcache.packages[pkg.packageid] = data;\r\n\r\n\t\t\t\tpkg._parsedData = data;\r\n\r\n\t\t\t\t// Request info for all the apps in this package, if this request didn't originate from the license list\r\n\t\t\t\tif (requestType != PICSRequestType.Licenses) {\r\n\t\t\t\t\tvar appids = (pkg.packageinfo || {}).appids || [];\r\n\t\t\t\t\tself.getProductInfo(appids, [], null, PICSRequestType.PackageContents);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (!callback) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t(body.unknown_appids || []).forEach(function(appid) {\r\n\t\t\tresponse.unknownApps.push(appid);\r\n\t\t\tvar index = appids.indexOf(appid);\r\n\t\t\tif (index != -1) {\r\n\t\t\t\tappids.splice(index, 1);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t(body.unknown_packageids || []).forEach(function(packageid) {\r\n\t\t\tresponse.unknownPackages.push(packageid);\r\n\t\t\tvar index = packageids.indexOf(packageid);\r\n\t\t\tif (index != -1) {\r\n\t\t\t\tpackageids.splice(index, 1);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t(body.apps || []).forEach(function(app) {\r\n\t\t\tresponse.apps[app.appid] = app._parsedData || {\r\n\t\t\t\t\t\"changenumber\": app.change_number,\r\n\t\t\t\t\t\"missingToken\": !!app.missing_token,\r\n\t\t\t\t\t\"appinfo\": VDF.parse(app.buffer.toString('utf8')).appinfo\r\n\t\t\t\t};\r\n\r\n\t\t\tvar index = appids.indexOf(app.appid);\r\n\t\t\tif (index != -1) {\r\n\t\t\t\tappids.splice(index, 1);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t(body.packages || []).forEach(function(pkg) {\r\n\t\t\tresponse.packages[pkg.packageid] = pkg._parsedData || {\r\n\t\t\t\t\t\"changenumber\": pkg.change_number,\r\n\t\t\t\t\t\"missingToken\": !!pkg.missing_token,\r\n\t\t\t\t\t\"packageinfo\": BinaryKVParser.parse(pkg.buffer)[pkg.packageid]\r\n\t\t\t\t};\r\n\r\n\t\t\tvar index = packageids.indexOf(pkg.packageid);\r\n\t\t\tif (index != -1) {\r\n\t\t\t\tpackageids.splice(index, 1);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (appids.length === 0 && packageids.length === 0) {\r\n\t\t\tcallback(response.apps, response.packages, response.unknownApps, response.unknownPackages);\r\n\t\t}\r\n\t});\r\n};\r\n\r\nSteamUser.prototype.getProductAccessToken = function(apps, packages, callback) {\r\n\tthis._send(SteamUser.EMsg.ClientPICSAccessTokenRequest, {\r\n\t\t\"packageids\": packages,\r\n\t\t\"appids\": apps\r\n\t}, function(body) {\r\n\t\tvar appTokens = {};\r\n\t\tvar packageTokens = {};\r\n\r\n\t\t(body.app_access_tokens || []).forEach(function(app) {\r\n\t\t\tappTokens[app.appid] = app.access_token;\r\n\t\t});\r\n\r\n\t\t(body.package_access_tokens || []).forEach(function(pkg) {\r\n\t\t\tpackageTokens[pkg.packageid] = pkg.access_token;\r\n\t\t});\r\n\r\n\t\tcallback(appTokens, packageTokens, body.app_denied_tokens || [], body.package_denied_tokens || []);\r\n\t});\r\n};\r\n\r\nSteamUser.prototype._resetChangelistUpdateTimer = function() {\r\n\tthis._clearChangelistUpdateTimer();\r\n\r\n\tif (this.options.enablePicsCache && this.options.changelistUpdateInterval) {\r\n\t\tthis._changelistUpdateTimer = setTimeout(this._getChangelistUpdate.bind(this), this.options.changelistUpdateInterval);\r\n\t}\r\n};\r\n\r\nSteamUser.prototype._clearChangelistUpdateTimer = function() {\r\n\tif (this._changelistUpdateTimer) {\r\n\t\tclearTimeout(this._changelistUpdateTimer);\r\n\t\tthis._changelistUpdateTimer = null;\r\n\t}\r\n};\r\n\r\nSteamUser.prototype._getChangelistUpdate = function() {\r\n\tthis._clearChangelistUpdateTimer();\r\n\r\n\tif (!this.options.enablePicsCache || !this.options.changelistUpdateInterval) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar self = this;\r\n\r\n\t// Set a local timeout if Steam doesn't respond\r\n\tvar timedOut = false;\r\n\tvar timeout = setTimeout(function() {\r\n\t\ttimedOut = true;\r\n\t\tself._resetChangelistUpdateTimer();\r\n\t}, Math.max(Math.round(this.options.changelistUpdateInterval / 2), 30000));\r\n\r\n\tthis.getProductChanges(this.picsCache.changenumber, function(currentChangenumber, apps, packages) {\r\n\t\tif (timedOut) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar cache = self.picsCache;\r\n\r\n\t\tcache.apps = cache.apps || {};\r\n\t\tcache.packages = cache.packages || {};\r\n\r\n\t\tapps = apps.map(function(app) {\r\n\t\t\treturn app.appid;\r\n\t\t});\r\n\r\n\t\tpackages = packages.map(function(pkg) {\r\n\t\t\treturn pkg.packageid;\r\n\t\t});\r\n\r\n\t\tvar ourApps = apps.filter(function(appid) {\r\n\t\t\treturn (self.options.picsCacheAll || !!cache.apps[appid]);\r\n\t\t});\r\n\r\n\t\tvar ourPackages = packages.filter(function(pkgid) {\r\n\t\t\treturn (self.options.picsCacheAll || !!cache.packages[pkgid]);\r\n\t\t});\r\n\r\n\t\tif (ourApps.length + ourPackages.length === 0) {\r\n\t\t\t// We're done here\r\n\r\n\t\t\tif (currentChangenumber != cache.changenumber && cache.changenumber != 0) {\r\n\t\t\t\tself.emit('changelist', currentChangenumber, apps, packages);\r\n\t\t\t}\r\n\r\n\t\t\tcache.changenumber = currentChangenumber;\r\n\t\t\tself._resetChangelistUpdateTimer();\r\n\t\t\tclearTimeout(timeout);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Get any access tokens we may need\r\n\t\tself.getProductAccessToken(ourApps, ourPackages, function(appTokens, packageTokens, appDeniedTokens, packageDeniedTokens) {\r\n\t\t\tif (timedOut) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tself.emit('changelist', currentChangenumber, apps, packages);\r\n\r\n\t\t\tcache.changenumber = currentChangenumber;\r\n\t\t\tself._resetChangelistUpdateTimer();\r\n\t\t\tclearTimeout(timeout);\r\n\r\n\t\t\tvar index = -1;\r\n\t\t\tfor (var appid in appTokens) {\r\n\t\t\t\tif (appTokens.hasOwnProperty(appid) && (index = ourApps.indexOf(parseInt(appid, 10))) != -1) {\r\n\t\t\t\t\tourApps[index] = {\"appid\": parseInt(appid, 10), \"access_token\": appTokens[appid]};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (var packageid in packageTokens) {\r\n\t\t\t\tif (packageTokens.hasOwnProperty(packageid) && (index = ourPackages.indexOf(parseInt(packageid, 10))) != -1) {\r\n\t\t\t\t\tourPackages[index] = {\"packageid\": parseInt(packageid, 10), \"access_token\": packageTokens[packageid]};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tself.getProductInfo(ourApps, ourPackages, null, PICSRequestType.Changelist);\r\n\t\t});\r\n\t});\r\n};\r\n\r\nSteamUser.prototype._addAppToCache = function(appid) {\r\n\tif (!this.options.enablePicsCache) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar apps = this.picsCache.apps || {};\r\n\tif (apps[appid]) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tthis.getProductInfo([appid], [], null, PICSRequestType.AddToCache);\r\n};\r\n\r\nSteamUser.prototype._getLicenseInfo = function() {\r\n\tif (!this.options.enablePicsCache) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar packageids = this.getOwnedPackages();\r\n\r\n\tvar self = this;\r\n\tthis.getProductInfo([], packageids, function(apps, packages) {\r\n\t\t// Request info for all the apps in these packages\r\n\t\tvar appids = [];\r\n\r\n\t\tfor (var pkgid in packages) {\r\n\t\t\tif (!packages.hasOwnProperty(pkgid)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t((packages[pkgid].packageinfo || {}).appids || []).forEach(function(appid) {\r\n\t\t\t\tif (appids.indexOf(appid) == -1) {\r\n\t\t\t\t\tappids.push(appid);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tself.getProductInfo(appids, [], function(apps, packages) {\r\n\t\t\tself.emit('appOwnershipCached');\r\n\t\t}, PICSRequestType.PackageContents);\r\n\t}, PICSRequestType.Licenses);\r\n};\r\n\r\nSteamUser.prototype.getOwnedApps = function() {\r\n\tif (!this.options.enablePicsCache) {\r\n\t\tthrow new Error(\"PICS cache is not enabled.\");\r\n\t}\r\n\r\n\tif (!this.picsCache.packages) {\r\n\t\tthrow new Error(\"No data in PICS package cache yet.\");\r\n\t}\r\n\r\n\tvar ownedPackages = this.getOwnedPackages();\r\n\tvar appids = [];\r\n\r\n\tvar self = this;\r\n\townedPackages.forEach(function(pkg) {\r\n\t\tif (!self.picsCache.packages[pkg]) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tpkg = self.picsCache.packages[pkg];\r\n\t\tif (!pkg.packageinfo) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tpkg = pkg.packageinfo;\r\n\t\t(pkg.appids || []).forEach(function(appid) {\r\n\t\t\tif (appids.indexOf(appid) == -1) {\r\n\t\t\t\tappids.push(appid);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\tappids.sort(sortNumeric);\r\n\treturn appids;\r\n};\r\n\r\nSteamUser.prototype.ownsApp = function(appid) {\r\n\treturn this.getOwnedApps().indexOf(parseInt(appid, 10)) != -1;\r\n};\r\n\r\nSteamUser.prototype.getOwnedDepots = function() {\r\n\tif (!this.options.enablePicsCache) {\r\n\t\tthrow new Error(\"PICS cache is not enabled.\");\r\n\t}\r\n\r\n\tif (!this.picsCache.packages) {\r\n\t\tthrow new Error(\"No data in PICS package cache yet.\");\r\n\t}\r\n\r\n\tvar ownedPackages = this.getOwnedPackages();\r\n\tvar depotids = [];\r\n\r\n\tvar self = this;\r\n\townedPackages.forEach(function(pkg) {\r\n\t\tif (!self.picsCache.packages[pkg]) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tpkg = self.picsCache.packages[pkg];\r\n\t\tif (!pkg.packageinfo) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tpkg = pkg.packageinfo;\r\n\t\t(pkg.depotids || []).forEach(function(depotid) {\r\n\t\t\tif (depotids.indexOf(depotid) == -1) {\r\n\t\t\t\tdepotids.push(depotid);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\tdepotids.sort(sortNumeric);\r\n\treturn depotids;\r\n};\r\n\r\nSteamUser.prototype.ownsDepot = function(depotid) {\r\n\treturn this.getOwnedDepots().indexOf(parseInt(depotid, 10)) != -1;\r\n};\r\n\r\nSteamUser.prototype.getOwnedPackages = function() {\r\n\tif (this.steamID.type != SteamID.Type.ANON_USER && !this.licenses) {\r\n\t\tthrow new Error(\"We don't have our license list yet.\");\r\n\t}\r\n\r\n\tvar packages = this.steamID.type == SteamID.Type.ANON_USER ? [17906] : this.licenses.map(function(license) {\r\n\t\t\treturn license.package_id;\r\n\t\t});\r\n\r\n\tpackages.sort(sortNumeric);\r\n\treturn packages;\r\n};\r\n\r\nSteamUser.prototype.ownsPackage = function(packageid) {\r\n\treturn this.getOwnedPackages().indexOf(parseInt(packageid, 10)) != -1;\r\n};\r\n\r\nfunction sortNumeric(a, b) {\r\n\tif (a < b) {\r\n\t\treturn -1;\r\n\t} else if (a > b) {\r\n\t\treturn 1;\r\n\t}\r\n\r\n\treturn 0;\r\n}\r\n\r\nSteamUser.prototype.redeemKey = function(key, callback) {\r\n\tthis._send(SteamUser.EMsg.ClientRegisterKey, {\"key\": key}, function(body) {\r\n\t\tif (typeof callback !== 'function') {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar packageList = {};\r\n\r\n\t\tvar recipeDetails = BinaryKVParser.parse(body.purchase_receipt_info).MessageObject;\r\n\t\tif (recipeDetails.LineItemCount > 0) {\r\n\t\t\trecipeDetails.lineitems.forEach(function(pkg) {\r\n\t\t\t\tpackageList[pkg.PackageID] = pkg.ItemDescription;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tcallback(body.eresult, body.purchase_result_details, packageList);\r\n\t});\r\n};\r\n\r\nSteamUser.prototype.requestFreeLicense = function(appIDs, callback) {\r\n\tif (!Array.isArray(appIDs)) {\r\n\t\tappIDs = [appIDs];\r\n\t}\r\n\r\n\tthis._send(SteamUser.EMsg.ClientRequestFreeLicense, {\"appids\": appIDs}, function(body) {\r\n\t\tif (!callback) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (body.eresult != SteamUser.EResult.OK) {\r\n\t\t\tcallback(Helpers.eresultError(body.eresult));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tcallback(null, body.granted_packageids, body.granted_appids);\r\n\t});\r\n};\r\n\r\n// Handlers\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientLicenseList] = function(body) {\r\n\tthis.emit('licenses', body.licenses);\r\n\tthis.licenses = body.licenses;\r\n\r\n\t// Request info for our licenses\r\n\tif (this.options.enablePicsCache) {\r\n\t\tthis._getLicenseInfo();\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/components/cdn.js":"var AdmZip = require('adm-zip');\r\nvar ByteBuffer = require('bytebuffer');\r\nvar crc32 = require('buffer-crc32');\r\nvar EventEmitter = require('events').EventEmitter;\r\nvar fs = require('fs');\r\nvar LZMA = require('lzma');\r\nvar SteamCrypto = require('@doctormckay/steam-crypto');\r\nvar SteamUser = require('../index.js');\r\nvar Helpers = require('./helpers.js');\r\nvar ContentManifest = require('./content_manifest.js');\r\n\r\nconst VZIP_HEADER = 0x5A56;\r\nconst VZIP_FOOTER = 0x767A;\r\n\r\n/**\r\n * Get the list of currently-available content servers.\r\n * @param {function} callback\r\n */\r\nSteamUser.prototype.getContentServers = function(callback) {\r\n\tif (this._contentServers.length > 0 && Date.now() - this._contentServers.timestamp < (1000 * 60 * 60)) {\r\n\t\tcallback(null, JSON.parse(JSON.stringify(this._contentServers)));\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar list = this.steamServers[SteamUser.EServerType.CS];\r\n\r\n\tif (!list || list.length == 0) {\r\n\t\tcallback(new Error(\"Server list not yet available\"));\r\n\t\treturn;\r\n\t}\r\n\r\n\t// pick a random one\r\n\tvar server = list[Math.floor(Math.random() * list.length)];\r\n\tvar self = this;\r\n\tdownload(\"http://\" + Helpers.ipIntToString(server.server_ip) + \":\" + server.server_port + \"/serverlist/\" + this.cellID + \"/20/\", \"cs.steamcontent.com\", function(err, res) {\r\n\t\tif (err) {\r\n\t\t\tcallback(err);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (res.type != 'complete') {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tvar parsed = require('vdf').parse(res.data.toString('utf8'));\r\n\t\t} catch (ex) {\r\n\t\t\tcallback(new Error(\"Malformed response\"));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!parsed || !parsed.serverlist || !parsed.serverlist[0]) {\r\n\t\t\tcallback(new Error(\"Malformed response\"));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tparsed.serverlist.length = 0;\r\n\t\tfor (var i in parsed.serverlist) {\r\n\t\t\tif (parsed.serverlist.hasOwnProperty(i) && i != 'length') {\r\n\t\t\t\tparsed.serverlist.length = parseInt(i, 10) + 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tself._contentServers = Array.prototype.slice.call(parsed.serverlist);\r\n\t\tcallback(null, JSON.parse(JSON.stringify(self._contentServers)));\r\n\t});\r\n};\r\n\r\n/**\r\n * Request the decryption key for a particular depot.\r\n * @param {int} appID\r\n * @param {int} depotID\r\n * @param {function} callback\r\n */\r\nSteamUser.prototype.getDepotDecryptionKey = function(appID, depotID, callback) {\r\n\t// Cached locally?\r\n\tvar self = this;\r\n\r\n\tthis.storage.readFile(\"depot_key_\" + appID + \"_\" + depotID + \".bin\", function(err, file) {\r\n\t\tif (file && Math.floor(Date.now() / 1000) - file.readUInt32LE(0) < (60 * 60 * 24 * 14)) {\r\n\t\t\tcallback(null, file.slice(4));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tself._send(SteamUser.EMsg.ClientGetDepotDecryptionKey, {\"depot_id\": depotID, \"app_id\": appID}, function(body) {\r\n\t\t\tif (body.eresult != SteamUser.EResult.OK) {\r\n\t\t\t\tcallback(Helpers.eresultError(body.eresult));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (body.depot_id != depotID) {\r\n\t\t\t\tcallback(new Error(\"Did not receive decryption key for correct depot\"));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar key = body.depot_encryption_key.toBuffer();\r\n\t\t\tvar file = Buffer.concat([new Buffer(4), key]);\r\n\t\t\tfile.writeUInt32LE(Math.floor(Date.now() / 1000), 0);\r\n\t\t\tself.storage.writeFile(\"depot_key_\" + appID + \"_\" + depotID + \".bin\", file, function() {\r\n\t\t\t\tcallback(null, body.depot_encryption_key.toBuffer());\r\n\t\t\t});\r\n\t\t});\r\n\t});\r\n};\r\n\r\n/**\r\n * Get an auth token for a particular CDN server.\r\n * @param {int} depotID\r\n * @param {string} hostname - The hostname of the CDN server for which we want a token\r\n * @param {function} callback\r\n */\r\nSteamUser.prototype.getCDNAuthToken = function(depotID, hostname, callback) {\r\n\tif (this._contentServerTokens[depotID + '_' + hostname] && this._contentServerTokens[depotID + '_' + hostname].expires - Date.now() > (1000 * 60 * 60)) {\r\n\t\tcallback(null, this._contentServerTokens[depotID + '_' + hostname].token, this._contentServerTokens[depotID + '_' + hostname].expires);\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar self = this;\r\n\tthis._send(SteamUser.EMsg.ClientGetCDNAuthToken, {\"app_id\": depotID, \"host_name\": hostname}, function(body) {\r\n\t\tif (body.eresult != SteamUser.EResult.OK) {\r\n\t\t\tcallback(Helpers.eresultError(body.eresult));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tself._contentServerTokens[depotID + '_' + hostname] = {\r\n\t\t\t\"token\": body.token,\r\n\t\t\t\"expires\": new Date(body.expiration_time * 1000)\r\n\t\t};\r\n\t\tcallback(null, body.token, new Date(body.expiration_time * 1000));\r\n\t});\r\n};\r\n\r\n/**\r\n * Download a depot content manifest.\r\n * @param {int} appID\r\n * @param {int} depotID\r\n * @param {string} manifestID\r\n * @param {function} callback\r\n */\r\nSteamUser.prototype.getManifest = function(appID, depotID, manifestID, callback) {\r\n\tvar self = this;\r\n\tthis.getRawManifest(appID, depotID, manifestID, function(err, manifest) {\r\n\t\tif (err) {\r\n\t\t\tcallback(err);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tmanifest = ContentManifest.parse(manifest);\r\n\t\t} catch (ex) {\r\n\t\t\tcallback(ex);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\r\n\t\tif (!manifest.filenames_encrypted) {\r\n\t\t\tcallback(null, manifest);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tself.getDepotDecryptionKey(appID, depotID, function(err, key) {\r\n\t\t\tif (err) {\r\n\t\t\t\tcallback(err);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tContentManifest.decryptFilenames(manifest, key);\r\n\t\t\tcallback(null, manifest);\r\n\t\t});\r\n\t});\r\n};\r\n\r\n/**\r\n * Download and decompress a manifest, but don't parse it into a JavaScript object.\r\n * @param {int} appID\r\n * @param {int} depotID\r\n * @param {string} manifestID\r\n * @param {function} callback\r\n */\r\nSteamUser.prototype.getRawManifest = function(appID, depotID, manifestID, callback) {\r\n\tvar self = this;\r\n\tthis.getContentServers(function(err, servers) {\r\n\t\tif (err) {\r\n\t\t\tcallback(err);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar server = servers[Math.floor(Math.random() * servers.length)];\r\n\t\tvar urlBase = \"http://\" + server.Host;\r\n\t\tvar vhost = server.vhost || server.Host;\r\n\r\n\t\tself.getCDNAuthToken(depotID, vhost, function(err, token, expires) {\r\n\t\t\tif (err) {\r\n\t\t\t\tcallback(err);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tdownload(urlBase + \"/depot/\" + depotID + \"/manifest/\" + manifestID + \"/5\" + token, vhost, function(err, res) {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\tcallback(err);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (res.type != 'complete') {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tunzip(res.data, callback);\r\n\t\t\t});\r\n\t\t});\r\n\t});\r\n};\r\n\r\n/**\r\n * Download a chunk from a content server.\r\n * @param {int} appID - The AppID to which this chunk belongs\r\n * @param {int} depotID - The depot ID to which this chunk belongs\r\n * @param {string} chunkSha1 - This chunk's SHA1 hash (aka its ID)\r\n * @param {object} [contentServer] - If not provided, one will be chosen randomly. Should be an object identical to those output by getContentServers\r\n * @param {function} callback - First argument is Error/null, second is a Buffer containing the chunk's data\r\n */\r\nSteamUser.prototype.downloadChunk = function(appID, depotID, chunkSha1, contentServer, callback) {\r\n\tif (typeof contentServer === 'function') {\r\n\t\tcallback = contentServer;\r\n\t\tcontentServer = null;\r\n\t}\r\n\r\n\tchunkSha1 = chunkSha1.toLowerCase();\r\n\tvar self = this;\r\n\r\n\tif (!contentServer) {\r\n\t\tthis.getContentServers(function(err, servers) {\r\n\t\t\tif (err) {\r\n\t\t\t\tcallback(err);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tcontentServer = servers[Math.floor(Math.random() * servers.length)];\r\n\t\t\tperformDownload();\r\n\t\t});\r\n\t} else {\r\n\t\tperformDownload();\r\n\t}\r\n\r\n\tfunction performDownload() {\r\n\t\tvar urlBase = \"http://\" + contentServer.Host;\r\n\t\tvar vhost = contentServer.vhost || contentServer.Host;\r\n\r\n\t\tself.getCDNAuthToken(depotID, vhost, function(err, token, expires) {\r\n\t\t\tif (err) {\r\n\t\t\t\tcallback(err);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tself.getDepotDecryptionKey(appID, depotID, function(err, key) {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\tcallback(err);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdownload(urlBase + \"/depot/\" + depotID + \"/chunk/\" + chunkSha1 + token, vhost, function(err, res) {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\tcallback(err);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (res.type != 'complete') {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tunzip(SteamCrypto.symmetricDecrypt(res.data, key), function(err, result) {\r\n\t\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\t\tcallback(err);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Verify the SHA1\r\n\t\t\t\t\t\tvar hash = require('crypto').createHash('sha1');\r\n\t\t\t\t\t\thash.update(result);\r\n\t\t\t\t\t\tif (hash.digest('hex') != chunkSha1) {\r\n\t\t\t\t\t\t\tcallback(new Error(\"Checksum mismatch\"));\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcallback(null, result);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n};\r\n\r\n/**\r\n * Download a specific file from a depot.\r\n * @param {int} appID - The AppID which owns the file you want\r\n * @param {int} depotID - The depot ID which contains the file you want\r\n * @param {string} fileManifest - An object from the \"files\" array of a downloaded and parsed manifest\r\n * @param {string} [outputFilePath] - If provided, downloads the file to this location on the disk. If not, downloads the file into memory and sends it back in the callback.\r\n * @param {function} callback - (err, file) but file is only present if outputFilePath is not set\r\n * @returns {EventEmitter} An EventEmitter which receives `progress` events with arguments (bytesDownloaded, totalSize)\r\n */\r\nSteamUser.prototype.downloadFile = function(appID, depotID, fileManifest, outputFilePath, callback) {\r\n\tif (typeof outputFilePath === 'function') {\r\n\t\tcallback = outputFilePath;\r\n\t\toutputFilePath = null;\r\n\t}\r\n\r\n\tif (fileManifest.flags & SteamUser.EDepotFileFlag.Directory) {\r\n\t\tthrow new Error(\"Cannot download a directory\");\r\n\t}\r\n\r\n\tvar numWorkers = 4;\r\n\r\n\tfileManifest.size = parseInt(fileManifest.size, 10);\r\n\tvar bytesDownloaded = 0;\r\n\r\n\tvar self = this;\r\n\tvar availableServers;\r\n\tvar servers = [];\r\n\tvar serversInUse = [];\r\n\tvar currentServerIdx = 0;\r\n\tvar downloadBuffer;\r\n\tvar outputFd;\r\n\tvar killed = false;\r\n\tvar outputEmitter = new EventEmitter();\r\n\r\n\tthis.getContentServers(function(err, contentServers) {\r\n\t\tif (err) {\r\n\t\t\tcallback(err);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Choose some content servers\r\n\t\tavailableServers = contentServers;\r\n\t\tfor (var i = 0; i < numWorkers; i++) {\r\n\t\t\tassignServer(i);\r\n\t\t\tserversInUse.push(false);\r\n\t\t}\r\n\r\n\t\tif (outputFilePath) {\r\n\t\t\tfs.open(outputFilePath, \"w\", function(err, fd) {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\tcallback(err);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toutputFd = fd;\r\n\t\t\t\tfs.truncate(outputFd, parseInt(fileManifest.size, 10), function(err) {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\tfs.closeSync(outputFd);\r\n\t\t\t\t\t\tcallback(err);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbeginDownload();\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tdownloadBuffer = new Buffer(parseInt(fileManifest.size, 10));\r\n\t\t\tbeginDownload();\r\n\t\t}\r\n\t});\r\n\r\n\treturn outputEmitter;\r\n\r\n\tfunction beginDownload() {\r\n\t\tvar queue = require('async').queue(function dlChunk(chunk, cb) {\r\n\t\t\tvar serverIdx;\r\n\r\n\t\t\twhile (true) {\r\n\t\t\t\t// Find the next available download slot\r\n\t\t\t\tif (serversInUse[currentServerIdx]) {\r\n\t\t\t\t\tincrementCurrentServerIdx();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tserverIdx = currentServerIdx;\r\n\t\t\t\t\tserversInUse[serverIdx] = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tself.downloadChunk(appID, depotID, chunk.sha, servers[serverIdx], function(err, data) {\r\n\t\t\t\tserversInUse[serverIdx] = false;\r\n\r\n\t\t\t\tif (killed) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\t// Error downloading chunk\r\n\t\t\t\t\tif ((chunk.retries && chunk.retries >= 5) || availableServers.length == 0) {\r\n\t\t\t\t\t\t// This chunk hasn't been retired the max times yet, and we have servers left.\r\n\t\t\t\t\t\tcallback(err);\r\n\t\t\t\t\t\tqueue.kill();\r\n\t\t\t\t\t\tkilled = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tchunk.retries = chunk.retries || 0;\r\n\t\t\t\t\t\tchunk.retries++;\r\n\t\t\t\t\t\tassignServer(serverIdx);\r\n\t\t\t\t\t\tdlChunk(chunk, cb);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbytesDownloaded += data.length;\r\n\t\t\t\toutputEmitter.emit('progress', bytesDownloaded, fileManifest.size);\r\n\r\n\t\t\t\t// Chunk downloaded successfully\r\n\t\t\t\tif (outputFilePath) {\r\n\t\t\t\t\tfs.write(outputFd, data, 0, data.length, parseInt(chunk.offset, 10), function(err) {\r\n\t\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\t\tcallback(err);\r\n\t\t\t\t\t\t\tqueue.kill();\r\n\t\t\t\t\t\t\tkilled = true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcb();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdata.copy(downloadBuffer, parseInt(chunk.offset, 10));\r\n\t\t\t\t\tcb();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}, numWorkers);\r\n\r\n\t\tfileManifest.chunks.forEach(function(chunk) {\r\n\t\t\tqueue.push(JSON.parse(JSON.stringify(chunk)));\r\n\t\t});\r\n\r\n\t\tqueue.drain = function() {\r\n\t\t\t// Verify hash\r\n\t\t\tvar hash;\r\n\t\t\tif (outputFilePath) {\r\n\t\t\t\tfs.close(outputFd, function(err) {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\tcallback(err);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// File closed. Now re-open it so we can hash it!\r\n\t\t\t\t\thash = require('crypto').createHash('sha1');\r\n\t\t\t\t\tfs.createReadStream(outputFilePath).pipe(hash);\r\n\t\t\t\t\thash.on('readable', function() {\r\n\t\t\t\t\t\tif (!hash.read) {\r\n\t\t\t\t\t\t\treturn; // already done\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\thash = hash.read();\r\n\t\t\t\t\t\tif (hash.toString('hex') != fileManifest.sha_content) {\r\n\t\t\t\t\t\t\tcallback(new Error(\"File checksum mismatch\"));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcallback(null);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\thash = require('crypto').createHash('sha1');\r\n\t\t\t\thash.update(downloadBuffer);\r\n\t\t\t\tif (hash.digest('hex') != fileManifest.sha_content) {\r\n\t\t\t\t\tcallback(new Error(\"File checksum mismatch\"));\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcallback(null, downloadBuffer);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tfunction assignServer(idx) {\r\n\t\tservers[idx] = availableServers.splice(Math.floor(Math.random() * availableServers.length), 1)[0];\r\n\t}\r\n\r\n\tfunction incrementCurrentServerIdx() {\r\n\t\tif (++currentServerIdx >= servers.length) {\r\n\t\t\tcurrentServerIdx = 0;\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * Request decryption keys for a beta branch of an app from its beta password.\r\n * @param {int} appID\r\n * @param {string} password\r\n * @param {function} callback - First arg is Error|null, second is an object mapping branch names to their decryption keys\r\n */\r\nSteamUser.prototype.getAppBetaDecryptionKeys = function(appID, password, callback) {\r\n\tthis._send(SteamUser.EMsg.ClientCheckAppBetaPassword, {\"app_id\": appID, \"betapassword\": password}, function(body) {\r\n\t\tif (body.eresult != SteamUser.EResult.OK) {\r\n\t\t\tcallback(Helpers.eresultError(body.eresult));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar branches = {};\r\n\t\t(body.betapasswords || []).forEach(function(beta) {\r\n\t\t\tbranches[beta.betaname] = new Buffer(beta.betapassword, 'hex');\r\n\t\t});\r\n\r\n\t\tcallback(null, branches);\r\n\t});\r\n};\r\n\r\n// Handlers\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientServerList] = function(body) {\r\n\t// It appears that each message of this type is for one server type.\r\n\tvar servers = {};\r\n\r\n\tbody.servers.forEach(function(server) {\r\n\t\tservers[server.server_type] = servers[server.server_type] || [];\r\n\t\tservers[server.server_type].push(server);\r\n\t});\r\n\r\n\tfor (var i in servers) {\r\n\t\tif (servers.hasOwnProperty(i)) {\r\n\t\t\tthis.steamServers[i] = servers[i];\r\n\t\t}\r\n\t}\r\n\r\n\tif (!this.contentServersReady && this.steamServers[SteamUser.EServerType.CS]) {\r\n\t\tthis.contentServersReady = true;\r\n\t\tthis.emit('contentServersReady');\r\n\t}\r\n};\r\n\r\n// Private functions\r\nfunction download(url, hostHeader, destinationFilename, callback) {\r\n\tif (typeof destinationFilename === 'function') {\r\n\t\tcallback = destinationFilename;\r\n\t\tdestinationFilename = null;\r\n\t}\r\n\r\n\tvar options = require('url').parse(url);\r\n\toptions.method = \"GET\";\r\n\toptions.headers = {\r\n\t\t\"Host\": hostHeader,\r\n\t\t\"Accept\": \"text/html,*/*;q=0.9\",\r\n\t\t\"Accept-Encoding\": \"gzip,identity,*;q=0\",\r\n\t\t\"Accept-Charset\": \"ISO-8859-1,utf-8,*;q=0.7\",\r\n\t\t\"User-Agent\": \"Valve/Steam HTTP Client 1.0\"\r\n\t};\r\n\r\n\tvar req = require('http').request(options, function(res) {\r\n\t\tif (res.statusCode != 200) {\r\n\t\t\tcallback(new Error(\"HTTP error \" + res.statusCode));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tres.setEncoding('binary'); // apparently using null just doesn't work... thanks node\r\n\t\tvar stream = res;\r\n\r\n\t\tif (res.headers['content-encoding'] && res.headers['content-encoding'] == 'gzip') {\r\n\t\t\tstream = require('zlib').createGunzip();\r\n\t\t\tstream.setEncoding('binary');\r\n\t\t\tres.pipe(stream);\r\n\t\t}\r\n\r\n\t\tvar totalSizeBytes = parseInt(res.headers['content-length'] || 0, 10);\r\n\t\tvar receivedBytes = 0;\r\n\t\tvar dataBuffer = new Buffer(0);\r\n\r\n\t\tif (destinationFilename) {\r\n\t\t\tstream.pipe(require('fs').createWriteStream(destinationFilename));\r\n\t\t}\r\n\r\n\t\tstream.on('data', function(chunk) {\r\n\t\t\tif (typeof chunk === 'string') {\r\n\t\t\t\tchunk = new Buffer(chunk, 'binary');\r\n\t\t\t}\r\n\r\n\t\t\treceivedBytes += chunk.length;\r\n\r\n\t\t\tif (!destinationFilename) {\r\n\t\t\t\tdataBuffer = Buffer.concat([dataBuffer, chunk]);\r\n\t\t\t}\r\n\r\n\t\t\tcallback(null, {\"type\": \"progress\", \"receivedBytes\": receivedBytes, \"totalSizeBytes\": totalSizeBytes});\r\n\t\t});\r\n\r\n\t\tstream.on('end', function() {\r\n\t\t\tcallback(null, {\"type\": \"complete\", \"data\": dataBuffer});\r\n\t\t});\r\n\t});\r\n\r\n\treq.on('error', function(err) {\r\n\t\tcallback(err);\r\n\t});\r\n\r\n\treq.end();\r\n}\r\n\r\nfunction unzip(data, callback) {\r\n\t// VZip or zip?\r\n\tif (data.readUInt16LE(0) == VZIP_HEADER) {\r\n\t\t// VZip\r\n\t\tdata = ByteBuffer.wrap(data, ByteBuffer.LITTLE_ENDIAN);\r\n\r\n\t\tdata.skip(2); // header\r\n\t\tif (String.fromCharCode(data.readByte()) != 'a') {\r\n\t\t\tcallback(new Error(\"Expected VZip version 'a'\"));\r\n\t\t}\r\n\r\n\t\tdata.skip(4); // either a timestamp or a CRC; either way, forget it\r\n\t\tvar properties = data.slice(data.offset, data.offset + 5).toBuffer();\r\n\t\tdata.skip(5);\r\n\r\n\t\tvar compressedData = data.slice(data.offset, data.limit - 10);\r\n\t\tdata.skip(compressedData.remaining());\r\n\r\n\t\tvar decompressedCrc = data.readUint32();\r\n\t\tvar decompressedSize = data.readUint32();\r\n\t\tif (data.readUint16() != VZIP_FOOTER) {\r\n\t\t\tcallback(new Error(\"Didn't see expected VZip footer\"));\r\n\t\t}\r\n\r\n\t\tvar uncompressedSizeBuffer = new Buffer(8);\r\n\t\tuncompressedSizeBuffer.writeUInt32LE(decompressedSize, 0);\r\n\t\tuncompressedSizeBuffer.writeUInt32LE(0, 4);\r\n\r\n\t\tLZMA.decompress(Buffer.concat([properties, uncompressedSizeBuffer, compressedData.toBuffer()]), function(result, err) {\r\n\t\t\tif (err) {\r\n\t\t\t\tcallback(err);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tresult = new Buffer(result); // it's a byte array\r\n\r\n\t\t\t// Verify the result\r\n\t\t\tif (decompressedSize != result.length) {\r\n\t\t\t\tcallback(new Error(\"Decompressed size was not valid\"));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (crc32.unsigned(result) != decompressedCrc) {\r\n\t\t\t\tcallback(new Error(\"CRC check failed on decompressed data\"));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tcallback(null, result);\r\n\t\t});\r\n\t} else {\r\n\t\ttry {\r\n\t\t\tcallback(null, (new AdmZip(data)).readFile('z'));\r\n\t\t} catch (ex) {\r\n\t\t\tcallback(ex);\r\n\t\t}\r\n\t}\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/components/chat.js":"var SteamUser = require('../index.js');\r\nvar SteamID = require('steamid');\r\nvar ByteBuffer = require('bytebuffer');\r\nvar BinaryKVParser = require('binarykvparser');\r\nvar Helpers = require('./helpers.js');\r\n\r\n/**\r\n * Sends a chat message to a user or a chat room.\r\n * @param {(SteamID|string)} recipient - The recipient user/chat, as a SteamID object or a string which can parse into one. To send to a group chat, use the group's (clan's) SteamID.\r\n * @param {string} message - The message to send.\r\n * @param {EChatEntryType} [type=ChatMsg] - Optional. The type of the message. Defaults to ChatMsg. Almost never needed.\r\n */\r\nSteamUser.prototype.chatMessage = SteamUser.prototype.chatMsg = function(recipient, message, type) {\r\n\trecipient = Helpers.steamID(recipient);\r\n\r\n\ttype = type || SteamUser.EChatEntryType.ChatMsg;\r\n\r\n\tif ([SteamID.Type.CLAN, SteamID.Type.CHAT].indexOf(recipient.type) != -1) {\r\n\t\t// It's a chat message\r\n\t\tvar msg = new ByteBuffer(8 + 8 + 4 + Buffer.byteLength(message) + 1, ByteBuffer.LITTLE_ENDIAN);\r\n\t\tmsg.writeUint64(this.steamID.getSteamID64()); // steamIdChatter\r\n\t\tmsg.writeUint64(toChatID(recipient).getSteamID64()); // steamIdChatRoom\r\n\t\tmsg.writeUint32(type); // chatMsgType\r\n\t\tmsg.writeCString(message);\r\n\t\tthis._send(SteamUser.EMsg.ClientChatMsg, msg.flip());\r\n\t} else {\r\n\t\t// It's a friend message\r\n\t\tvar payload = new ByteBuffer(Buffer.byteLength(message) + 1, ByteBuffer.LITTLE_ENDIAN);\r\n\t\tpayload.writeCString(message);\r\n\r\n\t\tthis._send(SteamUser.EMsg.ClientFriendMsg, {\r\n\t\t\t\"steamid\": recipient.getSteamID64(),\r\n\t\t\t\"message\": payload.flip(),\r\n\t\t\t\"chat_entry_type\": type\r\n\t\t});\r\n\t}\r\n};\r\n\r\n/**\r\n * Tell another user that you're typing a message.\r\n * @param {SteamID|string} recipient - The recipient, as a SteamID object or a string which can parse into one.\r\n */\r\nSteamUser.prototype.chatTyping = function(recipient) {\r\n\tthis.chatMessage(recipient, \"\", SteamUser.EChatEntryType.Typing);\r\n};\r\n\r\n/**\r\n * Requests chat history from Steam with a particular user. Also gets unread offline messages.\r\n * @param {(SteamID|string)} steamID - The SteamID of the other user with whom you're requesting history (as a SteamID object or a string which can parse into one)\r\n * @param {SteamUser~getChatHistoryCallback} [callback] - An optional callback to be invoked when the response is received.\r\n */\r\nSteamUser.prototype.getChatHistory = function(steamID, callback) {\r\n\tsteamID = Helpers.steamID(steamID);\r\n\tvar sid64 = steamID.getSteamID64();\r\n\r\n\tthis._send(SteamUser.EMsg.ClientFSGetFriendMessageHistory, {\r\n\t\t\"steamid\": sid64\r\n\t});\r\n\r\n\t/**\r\n\t * Simply binds a listener to the `chatHistory` event and removes the SteamID parameter.\r\n\t * @callback SteamUser~getChatHistoryCallback\r\n\t * @param {EResult} success - Was the request successful?\r\n\t * @param {Object[]} messages - An array of message objects\r\n\t * @param {SteamID} messages[].steamID - The SteamID of the user who sent the message (either you or the other user)\r\n\t * @param {Date} messages[].timestamp - The time when the message was sent\r\n\t * @param {string} messages[].message - The message that was sent\r\n\t * @param {bool} messages[].unread - true if it was an unread offline message, false if just a history message\r\n\t */\r\n\tif (callback) {\r\n\t\tthis.once('chatHistory#' + sid64, function(steamID, success, messages) {\r\n\t\t\tcallback(success, messages);\r\n\t\t});\r\n\t}\r\n};\r\n\r\n/**\r\n * Join a chat room. To join a group chat, use the group's (clan) SteamID.\r\n * @param {(SteamID|string)} steamID - The SteamID of the chat to join (as a SteamID object or a string which can parse into one)\r\n * @param {SteamUser~genericEResultCallback} [callback] - An optional callback to be invoked when the room is joined (or a failure occurs).\r\n */\r\nSteamUser.prototype.joinChat = function(steamID, callback) {\r\n\tvar msg = new ByteBuffer(9, ByteBuffer.LITTLE_ENDIAN);\r\n\tmsg.writeUint64(toChatID(steamID).getSteamID64()); // steamIdChat\r\n\tmsg.writeUint8(0); // isVoiceSpeaker\r\n\tthis._send(SteamUser.EMsg.ClientJoinChat, msg.flip());\r\n\r\n\tif (callback) {\r\n\t\tthis.once('chatEnter#' + Helpers.steamID(steamID).getSteamID64(), function(chatID, result) {\r\n\t\t\tcallback(result);\r\n\t\t});\r\n\t}\r\n};\r\n\r\n/**\r\n * Leave a chat room.\r\n * @param {(SteamID|string)} steamID - The SteamID of the chat room to leave (as a SteamID object or a string which can parse into one)\r\n */\r\nSteamUser.prototype.leaveChat = function(steamID) {\r\n\tvar msg = new ByteBuffer(32, ByteBuffer.LITTLE_ENDIAN);\r\n\tmsg.writeUint64(toChatID(steamID).getSteamID64()); // steamIdChat\r\n\tmsg.writeUint32(SteamUser.EChatInfoType.StateChange); // type\r\n\tmsg.writeUint64(this.steamID.getSteamID64());\r\n\tmsg.writeUint32(SteamUser.EChatMemberStateChange.Left);\r\n\tmsg.writeUint64(this.steamID.getSteamID64());\r\n\tthis._send(SteamUser.EMsg.ClientChatMemberInfo, msg.flip());\r\n\r\n\tsteamID = Helpers.steamID(steamID);\r\n\r\n\tdelete this.chats[steamID.getSteamID64()];\r\n};\r\n\r\n/**\r\n * Sets a chat room private (invitation required to join, unless a member of the group [if the chat is a Steam group chat])\r\n * @param {(SteamID|string)} steamID - The SteamID of the chat room to make private (as a SteamID object or a string which can parse into one)\r\n */\r\nSteamUser.prototype.setChatPrivate = function(steamID) {\r\n\tvar msg = new ByteBuffer(20, ByteBuffer.LITTLE_ENDIAN);\r\n\tmsg.writeUint64(toChatID(steamID).getSteamID64()); // steamIdChat\r\n\tmsg.writeUint64(toChatID(steamID).getSteamID64()); // steamIdUserToActOn\r\n\tmsg.writeUint32(SteamUser.EChatAction.LockChat);\r\n\tthis._send(SteamUser.EMsg.ClientChatAction, msg.flip());\r\n};\r\n\r\n/**\r\n * Sets a chat room public (no invitation required to join)\r\n * @param {(SteamID|string)} steamID - The SteamID of the chat room to make public (as a SteamID object or a string which can parse into one)\r\n */\r\nSteamUser.prototype.setChatPublic = function(steamID) {\r\n\tvar msg = new ByteBuffer(20, ByteBuffer.LITTLE_ENDIAN);\r\n\tmsg.writeUint64(toChatID(steamID).getSteamID64()); // steamIdChat\r\n\tmsg.writeUint64(toChatID(steamID).getSteamID64()); // steamIdUserToActOn\r\n\tmsg.writeUint32(SteamUser.EChatAction.UnlockChat);\r\n\tthis._send(SteamUser.EMsg.ClientChatAction, msg.flip());\r\n};\r\n\r\n/**\r\n * Sets a group chat room to officers-only chat mode.\r\n * @param {(SteamID|string)} steamID - The SteamID of the clan chat room to make officers-only (as a SteamID object or a string which can parse into one)\r\n */\r\nSteamUser.prototype.setChatOfficersOnly = function(steamID) {\r\n\tvar msg = new ByteBuffer(20, ByteBuffer.LITTLE_ENDIAN);\r\n\tmsg.writeUint64(toChatID(steamID).getSteamID64()); // steamIdChat\r\n\tmsg.writeUint64(toChatID(steamID).getSteamID64()); // steamIdUserToActOn\r\n\tmsg.writeUint32(SteamUser.EChatAction.SetModerated);\r\n\tthis._send(SteamUser.EMsg.ClientChatAction, msg.flip());\r\n};\r\n\r\n/**\r\n * Sets a group chat room out of officers-only chat mode, so that everyone can chat.\r\n * @param {(SteamID|string)} steamID - The SteamID of the clan chat room to make open (as a SteamID object or a string which can parse into one)\r\n */\r\nSteamUser.prototype.unsetChatOfficersOnly = function(steamID) {\r\n\tvar msg = new ByteBuffer(20, ByteBuffer.LITTLE_ENDIAN);\r\n\tmsg.writeUint64(toChatID(steamID).getSteamID64()); // steamIdChat\r\n\tmsg.writeUint64(toChatID(steamID).getSteamID64()); // steamIdUserToActOn\r\n\tmsg.writeUint32(SteamUser.EChatAction.SetUnmoderated);\r\n\tthis._send(SteamUser.EMsg.ClientChatAction, msg.flip());\r\n};\r\n\r\n/**\r\n * Kicks a user from a chat room.\r\n * @param {(SteamID|string)} chatID - The SteamID of the chat room to kick the user from (as a SteamID object or a string which can parse into one)\r\n * @param {(SteamID|string)} userID - The SteamID of the user to kick from the room (as a SteamID object or a string which can parse into one)\r\n */\r\nSteamUser.prototype.kickFromChat = function(chatID, userID) {\r\n\tuserID = Helpers.steamID(userID);\r\n\r\n\tvar msg = new ByteBuffer(20, ByteBuffer.LITTLE_ENDIAN);\r\n\tmsg.writeUint64(toChatID(chatID).getSteamID64()); // steamIdChat\r\n\tmsg.writeUint64(userID.getSteamID64()); // steamIdUserToActOn\r\n\tmsg.writeUint32(SteamUser.EChatAction.Kick);\r\n\tthis._send(SteamUser.EMsg.ClientChatAction, msg.flip());\r\n};\r\n\r\n/**\r\n * Bans a user from a chat room.\r\n * @param {(SteamID|string)} chatID - The SteamID of the chat room to ban the user from (as a SteamID object or a string which can parse into one)\r\n * @param {(SteamID|string)} userID - The SteamID of the user to ban from the room (as a SteamID object or a string which can parse into one)\r\n */\r\nSteamUser.prototype.banFromChat = function(chatID, userID) {\r\n\tuserID = Helpers.steamID(userID);\r\n\r\n\tvar msg = new ByteBuffer(20, ByteBuffer.LITTLE_ENDIAN);\r\n\tmsg.writeUint64(toChatID(chatID).getSteamID64()); // steamIdChat\r\n\tmsg.writeUint64(userID.getSteamID64()); // steamIdUserToActOn\r\n\tmsg.writeUint32(SteamUser.EChatAction.Ban);\r\n\tthis._send(SteamUser.EMsg.ClientChatAction, msg.flip());\r\n};\r\n\r\n/**\r\n * Unbans a user from a chat room.\r\n * @param {(SteamID|string)} chatID - The SteamID of the chat room to unban the user from (as a SteamID object or a string which can parse into one)\r\n * @param {(SteamID|string)} userID - The SteamID of the user to unban from the room (as a SteamID object or a string which can parse into one)\r\n */\r\nSteamUser.prototype.unbanFromChat = function(chatID, userID) {\r\n\tuserID = Helpers.steamID(userID);\r\n\r\n\tvar msg = new ByteBuffer(20, ByteBuffer.LITTLE_ENDIAN);\r\n\tmsg.writeUint64(toChatID(chatID).getSteamID64()); // steamIdChat\r\n\tmsg.writeUint64(userID.getSteamID64()); // steamIdUserToActOn\r\n\tmsg.writeUint32(SteamUser.EChatAction.UnBan);\r\n\tthis._send(SteamUser.EMsg.ClientChatAction, msg.flip());\r\n};\r\n\r\n/**\r\n * Invites a user to a chat room.\r\n * @param {(SteamID|string)} chatID - The SteamID of the chat room to invite the user to (as a SteamID object or a string which can parse into one)\r\n * @param {(SteamID|string)} userID - The SteamID of the user to invite (as a SteamID object or a string which can parse into one)\r\n */\r\nSteamUser.prototype.inviteToChat = function(chatID, userID) {\r\n\tuserID = Helpers.steamID(userID);\r\n\r\n\tthis._send(SteamUser.EMsg.ClientChatInvite, {\r\n\t\t\"steam_id_invited\": userID.getSteamID64(),\r\n\t\t\"steam_id_chat\": toChatID(chatID).getSteamID64()\r\n\t});\r\n};\r\n\r\n/**\r\n * Creates a new multi-user chat room\r\n * @param {null|SteamID|string} [convertUserID=null] - If the user with the SteamID passed here has a chat window open with us, their window will be converted to the new chat room and they'll join it automatically. If they don't have a window open, they'll get an invite.\r\n * @param {null|SteamID|string} [inviteUserID=null] - If specified, the user with the SteamID passed here will get invited to the new room automatically.\r\n * @param {SteamUser~createChatRoomCallback} [callback] - Called when the chat is created or a failure occurs.\r\n */\r\nSteamUser.prototype.createChatRoom = function(convertUserID, inviteUserID, callback) {\r\n\tconvertUserID = convertUserID || new SteamID();\r\n\tinviteUserID = inviteUserID || new SteamID();\r\n\r\n\tvar msg = new ByteBuffer(53, ByteBuffer.LITTLE_ENDIAN);\r\n\tmsg.writeUint32(SteamUser.EChatRoomType.MUC); // multi-user chat\r\n\tmsg.writeUint64(0);\r\n\tmsg.writeUint64(0);\r\n\tmsg.writeUint32(SteamUser.EChatPermission.MemberDefault);\r\n\tmsg.writeUint32(SteamUser.EChatPermission.MemberDefault);\r\n\tmsg.writeUint32(SteamUser.EChatPermission.EveryoneDefault);\r\n\tmsg.writeUint32(0);\r\n\tmsg.writeUint8(SteamUser.EChatFlags.Locked);\r\n\tmsg.writeUint64(Helpers.steamID(convertUserID).getSteamID64());\r\n\tmsg.writeUint64(Helpers.steamID(inviteUserID).getSteamID64());\r\n\tthis._send(SteamUser.EMsg.ClientCreateChat, msg.flip());\r\n\r\n\t/**\r\n\t * Called when the room is created or a failure occurs. If successful, you will be in the room when this callback fires.\r\n\t * @callback SteamUser~createChatRoomCallback\r\n\t * @param {EResult} eresult - The result of the creation request\r\n\t * @param {SteamID} [chatID] - The SteamID of the newly-created room, if successful\r\n\t */\r\n\tif (callback) {\r\n\t\tthis.once('chatCreated#' + convertUserID.getSteamID64(), function(convertedUserID, result, chatID) {\r\n\t\t\tcallback(result, chatID);\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// Handlers\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientFriendMsgIncoming] = function(body) {\r\n\tvar senderID = new SteamID(body.steamid_from.toString());\r\n\tvar message = body.message.toString('utf8').split('\\u0000')[0];\r\n\r\n\t/**\r\n\t * Emitted when we receive a new message from another user (not from a chat room).\r\n\t * You can also listen for friendMessage#steamid64 to only get messages from a specific user.\r\n\t *\r\n\t * @event SteamUser#friendMessage\r\n\t * @param {SteamID} senderID - The SteamID of the message author\r\n\t * @param {string} message - The chat message itself\r\n\t */\r\n\r\n\t/**\r\n\t * Emitted when we receive a notification that another user is typing a message to us.\r\n\t * You can also listen for friendTyping#steamid64 to only get notifications from a specific user.\r\n\t *\r\n\t * @event SteamUser#friendTyping\r\n\t * @param {SteamID} steamID - The SteamID of the typing user\r\n\t */\r\n\r\n\tswitch (body.chat_entry_type) {\r\n\t\tcase SteamUser.EChatEntryType.ChatMsg:\r\n\t\t\tthis._emitIdEvent('friendMessage', senderID, message);\r\n\t\t\tthis._emitIdEvent('friendOrChatMessage', senderID, message, senderID);\r\n\t\t\tbreak;\r\n\r\n\t\tcase SteamUser.EChatEntryType.Typing:\r\n\t\t\tthis._emitIdEvent('friendTyping', senderID);\r\n\t\t\tbreak;\r\n\r\n\t\tcase SteamUser.EChatEntryType.LeftConversation:\r\n\t\t\tthis._emitIdEvent('friendLeftConversation', senderID);\r\n\t\t\tbreak;\r\n\t}\r\n};\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientFriendMsgEchoToSender] = function(body) {\r\n\tvar recipientID = new SteamID(body.steamid_from.toString());\r\n\tvar message = body.message.toString('utf8').split('\\u0000')[0];\r\n\r\n\t/**\r\n\t * Emitted when we receive a message sent by us on another logon.\r\n\t * You can also listen for friendMessageEcho#steamid64 to only get messages sent to a specific user.\r\n\t *\r\n\t * @event SteamUser#friendMessageEcho\r\n\t * @param {SteamID} recipientID - The SteamID of the message recipient\r\n\t * @param {string} message - The message text\r\n\t */\r\n\r\n\t/**\r\n\t * Emitted when we receive a notification that we're typing a message to someone else on another logon.\r\n\t * You can also listen for friendTypingEcho#steamid64 to only get notifications sent to a specific user.\r\n\t *\r\n\t * @event SteamUser#friendTypingEcho\r\n\t * @param {SteamID} recipientID - The SteamID of the notification recipient\r\n\t */\r\n\r\n\tswitch (body.chat_entry_type) {\r\n\t\tcase SteamUser.EChatEntryType.ChatMsg:\r\n\t\t\tthis._emitIdEvent('friendMessageEcho', recipientID, message);\r\n\t\t\tbreak;\r\n\r\n\t\tcase SteamUser.EChatEntryType.Typing:\r\n\t\t\tthis._emitIdEvent('friendTypingEcho', recipientID);\r\n\t\t\tbreak;\r\n\t}\r\n};\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientChatMsg] = function(body) {\r\n\tvar chatter = new SteamID(body.readUint64().toString());\r\n\tvar room = fromChatID(body.readUint64());\r\n\tvar entryType = body.readUint32();\r\n\tvar message = body.readCString();\r\n\r\n\tif (entryType != SteamUser.EChatEntryType.ChatMsg) {\r\n\t\t// Not sure what kind of chat entry types are possible for chat rooms...\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Emitted when we receive a new chat message sent to a chat room.\r\n\t * You can also listen for chatMessage#roomid64 to get only messages sent to a specific chat room.\r\n\t * You can also listen for chatMessage#senderid64 to get only messages sent by a specific user.\r\n\t * You can also listen for chatMessage#roomid64#senderid64 to get only messages sent to a specific chat room by a specific user.\r\n\t *\r\n\t * @event SteamUser#chatMessage\r\n\t * @param {SteamID} room - The SteamID of the chat room\r\n\t * @param {SteamID} chatter - The SteamID of the message sender\r\n\t * @param {string} message - The chat message text\r\n\t */\r\n\r\n\tthis._emitIdEvent('friendOrChatMessage', chatter, message, room);\r\n\tthis.emit('chatMessage', room, chatter, message);\r\n\tthis.emit('chatMessage#' + room.getSteamID64(), room, chatter, message);\r\n\tthis.emit('chatMessage#' + chatter.getSteamID64(), room, chatter, message);\r\n\tthis.emit('chatMessage#' + room.getSteamID64() + '#' + chatter.getSteamID64(), room, chatter, message);\r\n};\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientFSGetFriendMessageHistoryResponse] = function(body) {\r\n\tvar universe = this.steamID.universe;\r\n\t(body.messages || []).forEach(function(message) {\r\n\t\tmessage.timestamp = new Date(message.timestamp * 1000);\r\n\t\tmessage.steamID = new SteamID('[U:' + universe + ':' + message.accountid + ']');\r\n\t\tdelete message.accountid;\r\n\t});\r\n\r\n\t/**\r\n\t * Emitted when we receive a response to a {getchatHistory} request\r\n\t *\r\n\t * @event SteamUser#chatHistory\r\n\t * @param {SteamID} steamID - The SteamID of the user for whom we are getting history\r\n\t * @param {EResult} success - Was the request successful?\r\n\t * @param {Object[]} messages - An array of message objects\r\n\t * @param {SteamID} messages[].steamID - The SteamID of the user who sent the message (either you or the other user)\r\n\t * @param {Date} messages[].timestamp - The time when the message was sent\r\n\t * @param {string} messages[].message - The message that was sent\r\n\t * @param {bool} messages[].unread - true if it was an unread offline message, false if just a history message\r\n\t */\r\n\r\n\tthis._emitIdEvent('chatHistory', new SteamID(body.steamid.toString()), body.success, body.messages || []);\r\n};\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientChatInvite] = function(body) {\r\n\t/**\r\n\t * Emitted when we're invited to a chat room.\r\n\t *\r\n\t * @event SteamUser#chatInvite\r\n\t * @param {SteamID} inviterID - The SteamID of the user who invited us to the room\r\n\t * @param {SteamID} chatID - The SteamID of the chat room to which we were invited\r\n\t * @param {string} chatName - The name of the chat room to which we were invited\r\n\t */\r\n\r\n\tvar inviterID = new SteamID(body.steam_id_patron.toString());\r\n\tvar chatID = fromChatID(body.steam_id_chat);\r\n\r\n\tif (chatID.isLobby()) {\r\n\t\tthis._emitIdEvent('lobbyInvite', inviterID, chatID);\r\n\t} else {\r\n\t\tthis.emit('chatInvite', inviterID, chatID, body.chat_name);\r\n\t\tthis.emit('chatInvite#' + inviterID.getSteamID64(), inviterID, chatID, body.chat_name);\r\n\t\tthis.emit('chatInvite#' + chatID.getSteamID64(), inviterID, chatID, body.chat_name);\r\n\t\tthis.emit('chatInvite#' + inviterID.getSteamID64() + '#' + chatID.getSteamID64(), inviterID, chatID, body.chat_name);\r\n\t}\r\n};\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientCreateChatResponse] = function(body) {\r\n\tvar eresult = body.readUint32();\r\n\tvar chatID = new SteamID(body.readUint64().toString());\r\n\tbody.skip(4);\r\n\tvar friendID = new SteamID(body.readUint64().toString());\r\n\r\n\t/**\r\n\t * Emitted when a chat room is created (in response to a {createChatRoom} request)\r\n\t * You can also listen for chatCreated#steamid64 to get only rooms created with a specific user.\r\n\t *\r\n\t * @event SteamUser#chatCreated\r\n\t * @param {SteamID} friendID - The SteamID of the friend with whom we created a room\r\n\t * @param {EResult} eresult - The result of the creation request\r\n\t * @param {SteamID} [chatID] - The SteamID of the newly-created room, if successful\r\n\t */\r\n\r\n\tif (eresult != SteamUser.EResult.OK) {\r\n\t\tthis._emitIdEvent('chatCreated', friendID, eresult);\r\n\t} else {\r\n\t\tvar self = this;\r\n\t\tthis.joinChat(chatID, function(result) {\r\n\t\t\tself._emitIdEvent('chatCreated', friendID, result, chatID);\r\n\t\t});\r\n\t}\r\n};\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientChatEnter] = function(body) {\r\n\tvar chatID = fromChatID(body.readUint64());\r\n\tbody.skip(28);\r\n\tvar chatFlags = body.readUint8();\r\n\tvar response = body.readUint32();\r\n\tvar numMembers = body.readUint32();\r\n\r\n\tif (response == SteamUser.EChatRoomEnterResponse.Success) {\r\n\t\tvar chatName = body.readCString();\r\n\r\n\t\tvar sid64 = chatID.getSteamID64();\r\n\t\tthis.chats[sid64] = {\r\n\t\t\t\"name\": chatName,\r\n\t\t\t\"members\": {}\r\n\t\t};\r\n\r\n\t\tdecomposeChatFlags(this.chats[sid64], chatFlags);\r\n\r\n\t\tvar member;\r\n\r\n\t\tfor (var i = 0; i < numMembers; i++) {\r\n\t\t\tmember = BinaryKVParser.parse(body).MessageObject;\r\n\t\t\tthis.chats[sid64].members[member.steamid.toString()] = {\r\n\t\t\t\t\"rank\": member.Details,\r\n\t\t\t\t\"permissions\": member.permissions\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Emitted when we enter a chat room.\r\n\t * You can also listen for chatEnter#steamid64 to get only events for a specific chat room.\r\n\t *\r\n\t * @event SteamUser#chatEnter\r\n\t * @param {SteamID} chatID - The SteamID of the chat room we entered\r\n\t * @param {EChatRoomEnterResponse} response - The result of the enter request\r\n\t */\r\n\r\n\tthis._emitIdEvent('chatEnter', chatID, response);\r\n};\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientChatMemberInfo] = function(body) {\r\n\tvar chatID = fromChatID(body.readUint64().toString());\r\n\tvar infoType = body.readUint32();\r\n\r\n\tvar target = null;\r\n\tvar action = null;\r\n\tvar actor = null;\r\n\r\n\tif (infoType == SteamUser.EChatInfoType.StateChange) {\r\n\t\t// A user's state changed\r\n\t\ttarget = new SteamID(body.readUint64().toString());\r\n\t\taction = body.readUint32();\r\n\t\tactor = new SteamID(body.readUint64().toString());\r\n\t}\r\n\r\n\tvar sid64 = chatID.getSteamID64();\r\n\r\n\tif (!this.chats[sid64]) {\r\n\t\t// We're not in this chat\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (infoType == SteamUser.EChatInfoType.InfoUpdate || (action !== null && action & SteamUser.EChatMemberStateChange.Entered)) {\r\n\t\t// There's a user info here\r\n\t\tvar userInfo = BinaryKVParser.parse(body).MessageObject;\r\n\t\tthis.chats[sid64].members[userInfo.steamid.toString()] = {\r\n\t\t\t\"rank\": userInfo.Details,\r\n\t\t\t\"permissions\": userInfo.permissions\r\n\t\t};\r\n\t}\r\n\r\n\tif (target !== null && action !== null) {\r\n\t\t// Someone was affected, so emit the proper event\r\n\t\tvar target64 = target.getSteamID64();\r\n\r\n\t\tif (action & SteamUser.EChatMemberStateChange.Entered) {\r\n\t\t\tthis._emitIdEvent('chatUserJoined', chatID, target);\r\n\t\t}\r\n\r\n\t\tif (action & SteamUser.EChatMemberStateChange.Left) {\r\n\t\t\tthis._emitIdEvent('chatUserLeft', chatID, target);\r\n\t\t\tdelete this.chats[sid64].members[target64];\r\n\t\t}\r\n\r\n\t\tif (action & SteamUser.EChatMemberStateChange.Disconnected) {\r\n\t\t\tthis._emitIdEvent('chatUserDisconnected', chatID, target);\r\n\t\t\tdelete this.chats[sid64].members[target64];\r\n\t\t}\r\n\r\n\t\tif (action & SteamUser.EChatMemberStateChange.Kicked) {\r\n\t\t\tthis._emitIdEvent('chatUserKicked', chatID, target, actor);\r\n\t\t\tdelete this.chats[sid64].members[target64];\r\n\t\t}\r\n\r\n\t\tif (action & SteamUser.EChatMemberStateChange.Banned) {\r\n\t\t\tthis._emitIdEvent('chatUserBanned', chatID, target, actor);\r\n\t\t\tdelete this.chats[sid64].members[target64];\r\n\t\t}\r\n\r\n\t\tif (action & SteamUser.EChatMemberStateChange.VoiceSpeaking) {\r\n\t\t\tthis._emitIdEvent('chatUserSpeaking', chatID, target);\r\n\t\t}\r\n\r\n\t\tif (action & SteamUser.EChatMemberStateChange.VoiceDoneSpeaking) {\r\n\t\t\tthis._emitIdEvent('chatUserDoneSpeaking', chatID, target);\r\n\t\t}\r\n\t}\r\n\r\n\tif (target !== null && target.getSteamID64() == this.steamID.getSteamID64() && action !== null && action < SteamUser.EChatMemberStateChange.VoiceSpeaking) {\r\n\t\t// We've left this room, delete it\r\n\t\tthis._emitIdEvent('chatLeft', chatID);\r\n\t\tdelete this.chats[sid64];\r\n\t}\r\n};\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientChatRoomInfo] = function(body) {\r\n\tvar chatID = fromChatID(body.readUint64());\r\n\tvar infoType = body.readUint32();\r\n\r\n\tif (infoType != SteamUser.EChatInfoType.InfoUpdate) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar flags = body.readUint32();\r\n\tvar actor = new SteamID(body.readUint64().toString());\r\n\r\n\tvar sid64 = chatID.getSteamID64();\r\n\r\n\tvar wasPrivate = this.chats[sid64].private;\r\n\tvar wasOfficersOnly = this.chats[sid64].officersOnlyChat;\r\n\r\n\tdecomposeChatFlags(this.chats[sid64], flags);\r\n\r\n\tif (wasPrivate && !this.chats[sid64].private) {\r\n\t\tthis._emitIdEvent('chatSetPublic', chatID, actor);\r\n\t} else if (!wasPrivate && this.chats[sid64].private) {\r\n\t\tthis._emitIdEvent('chatSetPrivate', chatID, actor);\r\n\t}\r\n\r\n\tif (wasOfficersOnly && !this.chats[sid64].officersOnlyChat) {\r\n\t\tthis._emitIdEvent('chatUnsetOfficersOnly', chatID, actor);\r\n\t} else if (!wasOfficersOnly && this.chats[sid64].officersOnlyChat) {\r\n\t\tthis._emitIdEvent('chatSetOfficersOnly', chatID, actor);\r\n\t}\r\n};\r\n\r\n// Private functions\r\n\r\n/**\r\n * If steamID is a clan ID, converts to the appropriate chat ID. Otherwise, returns it untouched.\r\n * @param {SteamID} steamID\r\n * @returns SteamID\r\n */\r\nfunction toChatID(steamID) {\r\n\tsteamID = Helpers.steamID(steamID);\r\n\r\n\tif (steamID.type == SteamID.Type.CLAN) {\r\n\t\tsteamID.type = SteamID.Type.CHAT;\r\n\t\tsteamID.instance |= SteamID.ChatInstanceFlags.Clan;\r\n\t}\r\n\r\n\treturn steamID;\r\n}\r\n\r\n/**\r\n * If steamID is a clan chat ID, converts to the appropriate clan ID. Otherwise, returns it untouched.\r\n * @param {SteamID} steamID\r\n * @returns SteamID\r\n */\r\nfunction fromChatID(steamID) {\r\n\tsteamID = Helpers.steamID(steamID);\r\n\r\n\tif (steamID.isGroupChat()) {\r\n\t\tsteamID.type = SteamID.Type.CLAN;\r\n\t\tsteamID.instance &= ~SteamID.ChatInstanceFlags.Clan;\r\n\t}\r\n\r\n\treturn steamID;\r\n}\r\n\r\n/**\r\n * Converts chat flags into properties on a chat room object\r\n * @param {Object} chat\r\n * @param {number} chatFlags\r\n */\r\nfunction decomposeChatFlags(chat, chatFlags) {\r\n\tchat.private = !!(chatFlags & SteamUser.EChatFlags.Locked);\r\n\tchat.invisibleToFriends = !!(chatFlags & SteamUser.EChatFlags.InvisibleToFriends);\r\n\tchat.officersOnlyChat = !!(chatFlags & SteamUser.EChatFlags.Moderated);\r\n\tchat.unjoinable = !!(chatFlags & SteamUser.EChatFlags.Unjoinable);\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/components/content_manifest.js":"var ByteBuffer = require('bytebuffer');\r\nvar Crypto = require('crypto');\r\nvar SteamCrypto = require('@doctormckay/steam-crypto');\r\nvar Protos = require('./protobufs.js');\r\n\r\nconst PROTOBUF_PAYLOAD_MAGIC = 0x71F617D0;\r\nconst PROTOBUF_METADATA_MAGIC = 0x1F4812BE;\r\nconst PROTOBUF_SIGNATURE_MAGIC = 0x1B81B817;\r\nconst PROTOBUF_ENDOFMANIFEST_MAGIC = 0x32C415AB;\r\nconst STEAM3_MANIFEST_MAGIC = 0x16349781;\r\n\r\nexports.parse = function(buffer) {\r\n\tif (!ByteBuffer.isByteBuffer(buffer)) {\r\n\t\tbuffer = ByteBuffer.wrap(buffer, ByteBuffer.LITTLE_ENDIAN);\r\n\t}\r\n\r\n\tvar manifest = {};\r\n\tvar magic;\r\n\tvar meta;\r\n\tvar length;\r\n\r\n\twhile (buffer.remaining() > 0) {\r\n\t\tmagic = buffer.readUint32();\r\n\t\tswitch (magic) {\r\n\t\t\tcase PROTOBUF_PAYLOAD_MAGIC:\r\n\t\t\t\tlength = buffer.readUint32();\r\n\t\t\t\tmanifest.files = Protos.ContentManifestPayload.decode(buffer.slice(buffer.offset, buffer.offset + length)).mappings;\r\n\t\t\t\tbuffer.skip(length);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase PROTOBUF_METADATA_MAGIC:\r\n\t\t\t\tlength = buffer.readUint32();\r\n\t\t\t\tmeta = Protos.ContentManifestMetadata.decode(buffer.slice(buffer.offset, buffer.offset + length));\r\n\t\t\t\tbuffer.skip(length);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase PROTOBUF_SIGNATURE_MAGIC:\r\n\t\t\t\tlength = buffer.readUint32();\r\n\t\t\t\t//manifest.signature = Protos.ContentManifestSignature.decode(buffer.slice(buffer.offset, buffer.offset + length)).signature.toBuffer();\r\n\t\t\t\tbuffer.skip(length);\r\n\t\t\t\t// maybe at some point we should verify this signature, but for now I can't figure out how\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase PROTOBUF_ENDOFMANIFEST_MAGIC:\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase STEAM3_MANIFEST_MAGIC:\r\n\t\t\t\tthrow new Error(\"Received unexpected Steam3 manifest; not yet implemented\");\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"Unknown magic value \" + magic.toString(16) + \" at offset \" + buffer.offset - 4);\r\n\t\t}\r\n\t}\r\n\r\n\t(manifest.files || []).forEach(function process(file) {\r\n\t\tfor (var i in file) {\r\n\t\t\tif (!file.hasOwnProperty(i)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (file[i] instanceof ByteBuffer) {\r\n\t\t\t\tfile[i] = file[i].toString('hex');\r\n\t\t\t} else if (file[i] instanceof ByteBuffer.Long) {\r\n\t\t\t\tfile[i] = file[i].toString();\r\n\t\t\t} else if (Buffer.isBuffer(file[i])) {\r\n\t\t\t\tfile[i] = file[i].toString('hex');\r\n\t\t\t} else if (file[i] && !Buffer.isBuffer(file[i]) && typeof file[i] === 'object') {\r\n\t\t\t\tprocess(file[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tif (meta) {\r\n\t\tfor (var i in meta) {\r\n\t\t\tif (meta.hasOwnProperty(i)) {\r\n\t\t\t\tmanifest[i] = meta[i] instanceof ByteBuffer.Long ? meta[i].toString() : meta[i];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn manifest;\r\n};\r\n\r\nexports.decryptFilenames = function(manifest, key) {\r\n\tif (!manifest.filenames_encrypted) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t(manifest.files || []).forEach(function(file) {\r\n\t\tfile.filename = SteamCrypto.symmetricDecrypt(new Buffer(file.filename, 'base64'), key);\r\n\t\tfile.filename = file.filename.slice(0, file.filename.indexOf(0)).toString('utf8');\r\n\r\n\t\t// Verify the sha1\r\n\t\t/*if (file.sha_filename) {\r\n\t\t\tvar hash = Crypto.createHash('sha1');\r\n\t\t\thash.update(file.filename, 'ascii');\r\n\t\t\tif (hash.digest('hex') != file.sha_filename) {\r\n\t\t\t\tthrow new Error(\"Filename hash did not validate; is the decryption key correct?\");\r\n\t\t\t}\r\n\t\t}*/\r\n\r\n\t\t// ^ Disabled because apparently some manifests contain invalid filename hashes. Because Valve.\r\n\t});\r\n\r\n\tmanifest.filenames_encrypted = false;\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/components/protobufs.js":"var Protobuf = require('protobufjs');\r\nvar fs = require('fs');\r\n\r\nvar builder = new Protobuf.Builder();\r\nfs.readdirSync(__dirname + '/../protobufs').forEach(function(file) {\r\n\tProtobuf.loadProtoFile(__dirname + '/../protobufs/' + file, builder);\r\n});\r\n\r\nmodule.exports = builder.build();\r\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/components/friends.js":"var SteamUser = require('../index.js');\r\nvar SteamID = require('steamid');\r\nvar ByteBuffer = require('bytebuffer');\r\nvar Helpers = require('./helpers.js');\r\n\r\n/**\r\n * Set your persona online state and optionally name.\r\n * @param {EPersonaState} state - Your new online state\r\n * @param {string} [name] - Optional. Set a new profile name.\r\n */\r\nSteamUser.prototype.setPersona = function(state, name) {\r\n\tthis._send(SteamUser.EMsg.ClientChangeStatus, {\r\n\t\t\"persona_state\": state,\r\n\t\t\"player_name\": name\r\n\t});\r\n};\r\n\r\n/**\r\n * Set your current UI mode (displays next to your Steam online status in friends)\r\n * @param {EClientUIMode} mode - Your new UI mode\r\n */\r\nSteamUser.prototype.setUIMode = function(mode) {\r\n\tthis._send(SteamUser.EMsg.ClientCurrentUIMode, {\"uimode\": mode});\r\n};\r\n\r\n/**\r\n * Send (or accept) a friend invitiation.\r\n * @param {(SteamID|string)} steamID - Either a SteamID object of the user to add, or a string which can parse into one.\r\n * @param {function} [callback] - Optional. Called with `err` and `name` parameters on completion.\r\n */\r\nSteamUser.prototype.addFriend = function(steamID, callback) {\r\n\tthis._send(SteamUser.EMsg.ClientAddFriend, {\"steamid_to_add\": Helpers.steamID(steamID).getSteamID64()}, function(body) {\r\n\t\tif (!callback) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (body.eresult != SteamUser.EResult.OK) {\r\n\t\t\tcallback(Helpers.eresultError(body.eresult));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tcallback(null, body.persona_name_added);\r\n\t});\r\n};\r\n\r\n/**\r\n * Remove a friend from your friends list (or decline an invitiation)\r\n * @param {(SteamID|string)} steamID - Either a SteamID object of the user to remove, or a string which can parse into one.\r\n */\r\nSteamUser.prototype.removeFriend = function(steamID) {\r\n\tif (typeof steamID === 'string') {\r\n\t\tsteamID = new SteamID(steamID);\r\n\t}\r\n\r\n\tthis._send(SteamUser.EMsg.ClientRemoveFriend, {\"friendid\": steamID.getSteamID64()});\r\n};\r\n\r\n/**\r\n * Block all communication with a user.\r\n * @param {(SteamID|string)} steamID - Either a SteamID object of the user to block, or a string which can parse into one.\r\n * @param {function} [callback] - Optional. Called with an `eresult` parameter on completion.\r\n */\r\nSteamUser.prototype.blockUser = function(steamID, callback) {\r\n\tif (typeof steamID === 'string') {\r\n\t\tsteamID = new SteamID(steamID);\r\n\t}\r\n\r\n\tvar buffer = new ByteBuffer(17, ByteBuffer.LITTLE_ENDIAN);\r\n\tbuffer.writeUint64(this.steamID.getSteamID64());\r\n\tbuffer.writeUint64(steamID.getSteamID64());\r\n\tbuffer.writeUint8(1);\r\n\r\n\tthis._send(SteamUser.EMsg.ClientSetIgnoreFriend, buffer.flip(), function(body) {\r\n\t\tif (!callback) {\r\n\t\t\treturn; // ignore\r\n\t\t}\r\n\r\n\t\tbody.readUint64(); // unknown\r\n\t\tcallback(body.readUint32());\r\n\t});\r\n};\r\n\r\n/**\r\n * Unblock all communication with a user.\r\n * @param {(SteamID|string)} steamID - Either a SteamID object of the user to unblock, or a string which can parse into one.\r\n * @param {function} [callback] - Optional. Called with an `eresult` parameter on completion.\r\n */\r\nSteamUser.prototype.unblockUser = function(steamID, callback) {\r\n\tif (typeof steamID === 'string') {\r\n\t\tsteamID = new SteamID(steamID);\r\n\t}\r\n\r\n\tvar buffer = new ByteBuffer(17, ByteBuffer.LITTLE_ENDIAN);\r\n\tbuffer.writeUint64(this.steamID.getSteamID64());\r\n\tbuffer.writeUint64(steamID.getSteamID64());\r\n\tbuffer.writeUint8(0);\r\n\r\n\tthis._send(SteamUser.EMsg.ClientSetIgnoreFriend, buffer.flip(), function(body) {\r\n\t\tif (!callback) {\r\n\t\t\treturn; // ignore\r\n\t\t}\r\n\r\n\t\tbody.readUint64(); // unknown\r\n\t\tcallback(body.readUint32());\r\n\t});\r\n};\r\n\r\n/**\r\n * Requests information about one or more user profiles.\r\n * @param {(SteamID[]|string[])} steamids - An array of SteamID objects or strings which can parse into them.\r\n * @param {function} [callback] - Optional. Called with an object whose keys are 64-bit SteamIDs as strings, and whose values are persona objects.\r\n */\r\nSteamUser.prototype.getPersonas = function(steamids, callback) {\r\n\tvar Flags = SteamUser.EClientPersonaStateFlag;\r\n\tvar flags = Flags.Status | Flags.PlayerName | Flags.QueryPort | Flags.SourceID | Flags.Presence |\r\n\t\tFlags.Metadata | Flags.LastSeen | Flags.ClanInfo | Flags.GameExtraInfo | Flags.GameDataBlob |\r\n\t\tFlags.ClanTag | Flags.Facebook;\r\n\r\n\tvar ids = steamids.map(function(id) {\r\n\t\tif (typeof id === 'string') {\r\n\t\t\treturn (new SteamID(id)).getSteamID64();\r\n\t\t}\r\n\r\n\t\treturn id.toString();\r\n\t});\r\n\r\n\tthis._send(SteamUser.EMsg.ClientRequestFriendData, {\r\n\t\t\"friends\": ids,\r\n\t\t\"persona_state_requested\": flags\r\n\t});\r\n\r\n\tif (callback) {\r\n\t\tvar output = {};\r\n\r\n\t\tvar self = this;\r\n\t\tids.forEach(function(id) {\r\n\t\t\tself.once('user#' + id, receive);\r\n\t\t});\r\n\r\n\t\tfunction receive(sid, user) {\r\n\t\t\tvar sid64 = sid.getSteamID64();\r\n\t\t\toutput[sid64] = user;\r\n\r\n\t\t\tvar index = ids.indexOf(sid64);\r\n\t\t\tif (index != -1) {\r\n\t\t\t\tids.splice(index, 1);\r\n\t\t\t}\r\n\r\n\t\t\tif (ids.length === 0) {\r\n\t\t\t\tcallback(output);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * Gets the Steam Level of one or more Steam users.\r\n * @param {(SteamID[]|string[])} steamids - An array of SteamID objects, or strings which can parse into one.\r\n * @param {function} callback - Called on completion with an object whose keys are 64-bit SteamIDs as strings, and whose values are Steam Level numbers.\r\n */\r\nSteamUser.prototype.getSteamLevels = function(steamids, callback) {\r\n\tvar accountids = steamids.map(function(steamID) {\r\n\t\tif (typeof steamID === 'string') {\r\n\t\t\treturn (new SteamID(steamID)).accountid;\r\n\t\t} else {\r\n\t\t\treturn steamID.accountid;\r\n\t\t}\r\n\t});\r\n\r\n\tthis._send(SteamUser.EMsg.ClientFSGetFriendsSteamLevels, {\"accountids\": accountids}, function(body) {\r\n\t\tvar output = {};\r\n\r\n\t\tvar sid = new SteamID();\r\n\t\tsid.universe = SteamID.Universe.PUBLIC;\r\n\t\tsid.type = SteamID.Type.INDIVIDUAL;\r\n\t\tsid.instance = SteamID.Instance.DESKTOP;\r\n\r\n\t\t(body.friends || []).forEach(function(user) {\r\n\t\t\tsid.accountid = user.accountid;\r\n\t\t\toutput[sid.getSteamID64()] = user.level;\r\n\t\t});\r\n\r\n\t\tcallback(output);\r\n\t});\r\n};\r\n\r\nSteamUser.prototype.getGameBadgeLevel = function(appid, callback) {\r\n\tthis._sendUnified(\"Player.GetGameBadgeLevels#1\", {\"appid\": appid}, false, function(body) {\r\n\t\tvar regular = 0;\r\n\t\tvar foil = 0;\r\n\r\n\t\t(body.badges || []).forEach(function(badge) {\r\n\t\t\tif (badge.series != 1) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (badge.border_color == 0) {\r\n\t\t\t\tregular = badge.level;\r\n\t\t\t} else if (badge.border_color == 1) {\r\n\t\t\t\tfoil = badge.level;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tcallback(null, body.player_level, regular, foil);\r\n\t});\r\n};\r\n\r\n/**\r\n * Invites a user to a Steam group. Only send group invites in response to a user's request; sending automated group\r\n * invites is a violation of the Steam Subscriber Agreement and can get you banned.\r\n * @param {(SteamID|string)} userSteamID - The SteamID of the user you're inviting as a SteamID object, or a string that can parse into one\r\n * @param {(SteamID|string)} groupSteamID - The SteamID of the group you're inviting the user to as a SteamID object, or a string that can parse into one\r\n */\r\nSteamUser.prototype.inviteToGroup = function(userSteamID, groupSteamID) {\r\n\tvar buffer = new ByteBuffer(17, ByteBuffer.LITTLE_ENDIAN);\r\n\tbuffer.writeUint64(Helpers.steamID(userSteamID).toString());\r\n\tbuffer.writeUint64(Helpers.steamID(groupSteamID).toString());\r\n\tbuffer.writeUint8(1); // unknown\r\n\r\n\tthis._send(SteamUser.EMsg.ClientInviteUserToClan, buffer.flip());\r\n};\r\n\r\n/**\r\n * Respond to an incoming group invite.\r\n * @param {(SteamID|string)} groupSteamID - The group you were invited to, as a SteamID object or a string which can parse into one\r\n * @param {boolean} accept - true to join the group, false to ignore invitation\r\n */\r\nSteamUser.prototype.respondToGroupInvite = function(groupSteamID, accept) {\r\n\tvar buffer = new ByteBuffer(9, ByteBuffer.LITTLE_ENDIAN);\r\n\tbuffer.writeUint64(Helpers.steamID(groupSteamID).toString());\r\n\tbuffer.writeUint8(accept ? 1 : 0);\r\n\r\n\tthis._send(SteamUser.EMsg.ClientAcknowledgeClanInvite, buffer.flip());\r\n};\r\n\r\n/**\r\n * Get persona name history for one or more users.\r\n * @param {{SteamID[]|string[]|SteamID|string}} userSteamIDs - SteamIDs of users to request aliases for\r\n * @param {function} callback\r\n */\r\nSteamUser.prototype.getAliases = function(userSteamIDs, callback) {\r\n\tif (!(userSteamIDs instanceof Array)) {\r\n\t\tuserSteamIDs = [userSteamIDs];\r\n\t}\r\n\r\n\tuserSteamIDs = userSteamIDs.map(Helpers.steamID).map(function(id) {\r\n\t\treturn {\"steamid\": id.getSteamID64()};\r\n\t});\r\n\r\n\tthis._send(SteamUser.EMsg.ClientAMGetPersonaNameHistory, {\r\n\t\t\"id_count\": userSteamIDs.length,\r\n\t\t\"Ids\": userSteamIDs\r\n\t}, function(body) {\r\n\t\tvar ids = {};\r\n\t\tbody.responses = body.responses || [];\r\n\t\tfor (var i = 0; i < body.responses.length; i++) {\r\n\t\t\tif (body.responses[i].eresult != SteamUser.EResult.OK) {\r\n\t\t\t\tcallback(Helpers.eresultError(body.responses[i].eresult));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tids[body.responses[i].steamid.toString()] = (body.responses[i].names || []).map(function(name) {\r\n\t\t\t\tname.name_since = new Date(name.name_since * 1000);\r\n\t\t\t\treturn name;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tcallback(null, ids);\r\n\t});\r\n};\r\n\r\nSteamUser.prototype.setNickname = function(steamID, nickname, callback) {\r\n\tsteamID = Helpers.steamID(steamID);\r\n\tvar self = this;\r\n\tthis._send(SteamUser.EMsg.AMClientSetPlayerNickname, {\r\n\t\t\"steamid\": steamID.toString(),\r\n\t\t\"nickname\": nickname\r\n\t}, function(body) {\r\n\t\tif (body.eresult != SteamUser.EResult.OK) {\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallback(Helpers.eresultError(body.eresult));\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Worked!\r\n\t\tif (nickname.length == 0) {\r\n\t\t\tdelete self.myNicknames[steamID.toString()];\r\n\t\t} else {\r\n\t\t\tself.myNicknames[steamID.toString()] = nickname;\r\n\t\t}\r\n\r\n\t\tif (callback) {\r\n\t\t\tcallback(null);\r\n\t\t}\r\n\t});\r\n};\r\n\r\n// Handlers\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientPersonaState] = function(body) {\r\n\tvar self = this;\r\n\tbody.friends.forEach(function(user) {\r\n\t\tvar sid = new SteamID(user.friendid.toString());\r\n\t\tvar sid64 = sid.getSteamID64();\r\n\t\tdelete user.friendid;\r\n\r\n\t\tvar i;\r\n\t\tif (!self.users[sid64]) {\r\n\t\t\tself.users[sid64] = user;\r\n\t\t\tprocessUser(self.users[sid64]);\r\n\t\t} else {\r\n\t\t\t// Replace unknown data in the received object with already-known data\r\n\t\t\tfor (i in self.users[sid64]) {\r\n\t\t\t\tif (self.users[sid64].hasOwnProperty(i) && user.hasOwnProperty(i) && user[i] === null) {\r\n\t\t\t\t\tuser[i] = self.users[sid64][i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tprocessUser(user);\r\n\r\n\t\t/**\r\n\t\t * Emitted when we receive persona info about a user.\r\n\t\t * You can also listen for user#steamid64 to get info only for a specific user.\r\n\t\t *\r\n\t\t * @event SteamUser#user\r\n\t\t * @param {SteamID} steamID - The SteamID of the user\r\n\t\t * @param {Object} user - An object containing the user's persona info\r\n\t\t */\r\n\r\n\t\tself._emitIdEvent('user', sid, user);\r\n\r\n\t\tif (user.gameid) {\r\n\t\t\tself._addAppToCache(user.gameid);\r\n\t\t}\r\n\r\n\t\tfor (i in user) {\r\n\t\t\tif (user.hasOwnProperty(i) && user[i] !== null) {\r\n\t\t\t\tself.users[sid][i] = user[i];\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientClanState] = function(body) {\r\n\tvar sid = new SteamID(body.steamid_clan.toString());\r\n\tvar sid64 = sid.getSteamID64();\r\n\tdelete body.steamid_clan;\r\n\r\n\tvar i;\r\n\tif (!this.groups[sid64]) {\r\n\t\tthis.groups[sid64] = body;\r\n\t} else {\r\n\t\t// Replace unknown data in the received object with already-known data\r\n\t\tfor (i in this.groups[sid64]) {\r\n\t\t\tif (this.groups[sid64].hasOwnProperty(i) && body.hasOwnProperty(i) && body[i] === null) {\r\n\t\t\t\tbody[i] = this.groups[sid64][i];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Emitted when we receive info about a Steam group.\r\n\t * You can also listen for group#steamid64 to get info only for a specific group.\r\n\t *\r\n\t * @event SteamUser#group\r\n\t * @param {SteamID} steamID - The SteamID of the group\r\n\t * @param {Object} user - An object containing the group's info\r\n\t */\r\n\r\n\tthis._emitIdEvent('group', sid, body);\r\n\r\n\tfor (i in body) {\r\n\t\tif (body.hasOwnProperty(i) && body[i] !== null) {\r\n\t\t\tthis.groups[sid64][i] = body[i];\r\n\t\t}\r\n\t}\r\n\r\n\tvar self = this;\r\n\t(body.events || []).forEach(function(event) {\r\n\t\tif (!event.just_posted) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Emitted when a new event is posted to a Steam group.\r\n\t\t * You can also listen for groupEvent#steamid64 to get events only for a specific group.\r\n\t\t *\r\n\t\t * @event SteamUser#groupEvent\r\n\t\t * @param {SteamID} steamID - The SteamID of the group\r\n\t\t * @param {string} headline - The title of the event\r\n\t\t * @param {Date} timestamp - The time when the event will start\r\n\t\t * @param {string} gid - The event's GID\r\n\t\t * @param {number} gameID - If this is an event for a game, this is the game's appid\r\n\t\t */\r\n\r\n\t\tself._emitIdEvent('groupEvent', sid, event.headline, new Date(event.event_time * 1000), event.gid.toString(), event.game_id.toNumber());\r\n\t});\r\n\r\n\t(body.announcements || []).forEach(function(announcement) {\r\n\t\tif (!announcement.just_posted) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Emitted when a new announcement is posted to a Steam group.\r\n\t\t * You can also listen for groupAnnouncement#steamid64 to get announcements only for a specific group.\r\n\t\t *\r\n\t\t * @event SteamUser#groupAnnouncement\r\n\t\t * @param {SteamID} steamID - The SteamID of the group\r\n\t\t * @param {string} headline - The title of the announcement\r\n\t\t * @param {string} gid - The announcement's GID\r\n\t\t */\r\n\r\n\t\tself._emitIdEvent('groupAnnouncement', sid, announcement.headline, announcement.gid.toString());\r\n\t});\r\n};\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientFriendsList] = function(body) {\r\n\tvar self = this;\r\n\t(body.friends || []).forEach(function(relationship) {\r\n\t\tvar sid = new SteamID(relationship.ulfriendid.toString());\r\n\t\tvar key = sid.type == SteamID.Type.CLAN ? 'myGroups' : 'myFriends';\r\n\r\n\t\tif (body.bincremental) {\r\n\t\t\t/**\r\n\t\t\t * Emitted when a relationship with a Steam group changes. The relationship in myGroups is updated after this is emitted.\r\n\t\t\t *\r\n\t\t\t * @event SteamUser#groupRelationship\r\n\t\t\t * @param {SteamID} steamID - The SteamID of the group\r\n\t\t\t * @param {EFriendRelationship} relationship - Your new relationship with the group\r\n\t\t\t */\r\n\r\n\t\t\t/**\r\n\t\t\t * Emitted when a relationship with a Steam user changes. The relationship in myFriendsis updated after this is emitted.\r\n\t\t\t *\r\n\t\t\t * @event SteamUser#friendRelationship\r\n\t\t\t * @param {SteamID} steamID - The SteamID of the group\r\n\t\t\t * @param {EFriendRelationship} relationship - Your new relationship with the user\r\n\t\t\t */\r\n\r\n\t\t\t// This isn't an initial download of the friends list, something changed\r\n\t\t\tself._emitIdEvent(key == 'myGroups' ? 'groupRelationship' : 'friendRelationship', sid, relationship.efriendrelationship);\r\n\t\t}\r\n\r\n\t\tif (relationship.efriendrelationship == SteamUser.EFriendRelationship.None) {\r\n\t\t\tdelete self[key][sid.getSteamID64()];\r\n\t\t} else {\r\n\t\t\tself[key][sid.getSteamID64()] = relationship.efriendrelationship;\r\n\t\t}\r\n\t});\r\n\r\n\tif (!body.bincremental) {\r\n\t\t/**\r\n\t\t * Emitted when our entire friends list is loaded.\r\n\t\t *\r\n\t\t * @event SteamUser#friendsList\r\n\t\t */\r\n\r\n\t\t/**\r\n\t\t * Emitted when our entire group list is loaded.\r\n\t\t *\r\n\t\t * @event SteamUser#groupList\r\n\t\t */\r\n\r\n\t\tthis.emit('friendsList');\r\n\t\tthis.emit('groupList');\r\n\r\n\t\t// Request persona info for all our friends\r\n\t\tvar friends = Object.keys(this.myFriends).filter(function(steamID) { return self.myFriends[steamID] == SteamUser.EFriendRelationship.Friend; });\r\n\t\tself.getPersonas(friends);\r\n\t}\r\n};\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientFriendsGroupsList] = function(body) {\r\n\tvar groupList = {};\r\n\r\n\tbody.friendGroups.forEach(function(group) {\r\n\t\tgroupList[group.nGroupID] = {\r\n\t\t\t\"name\": group.strGroupName,\r\n\t\t\t\"members\": []\r\n\t\t};\r\n\t});\r\n\r\n\tbody.memberships.forEach(function(friend) {\r\n\t\tvar sid = new SteamID(friend.ulSteamID.toString());\r\n\r\n\t\tgroupList[friend.nGroupID].members.push(sid);\r\n\r\n\t\tif (body.bincremental) {\r\n\t\t\t// For now it doesn't really fire, so can't really check on how to do remove / add stuff with an emit.\r\n\t\t}\r\n\t});\r\n\r\n\tif (!body.bincremental) {\r\n\t\t/**\r\n\t\t * Emitted when our entire friends group list is loaded.\r\n\t\t *\r\n\t\t * @event SteamUser#friendsGroupList\r\n\t\t */\r\n\r\n\t\tthis.emit('friendsGroupList', groupList);\r\n\t}\r\n\r\n\tthis.myFriendGroups = groupList;\r\n};\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientPlayerNicknameList] = function(body) {\r\n\tvar myNicknames = JSON.parse(JSON.stringify(this.myNicknames)); // clone\r\n\r\n\tbody.nicknames.forEach(function(user) {\r\n\t\tif (body.removal) {\r\n\t\t\tdelete myNicknames[user.steamid];\r\n\t\t} else {\r\n\t\t\tmyNicknames[user.steamid] = user.nickname;\r\n\t\t}\r\n\t});\r\n\r\n\tif (!body.incremental) {\r\n\t\tthis.emit('nicknameList', myNicknames);\r\n\t}\r\n\r\n\tthis.myNicknames = myNicknames;\r\n};\r\n\r\nfunction processUser(user) {\r\n\tif (typeof user.gameid === 'object' && user.gameid !== null) {\r\n\t\tuser.gameid = user.gameid.toNumber();\r\n\t}\r\n\r\n\tif (typeof user.last_logoff === 'number') {\r\n\t\tuser.last_logoff = new Date(user.last_logoff * 1000);\r\n\t}\r\n\r\n\tif (typeof user.last_logon === 'number') {\r\n\t\tuser.last_logon = new Date(user.last_logon * 1000);\r\n\t}\r\n\r\n\tif (typeof user.avatar_hash === 'object' && (Buffer.isBuffer(user.avatar_hash) || ByteBuffer.isByteBuffer(user.avatar_hash))) {\r\n\t\tvar hash = user.avatar_hash.toString('hex');\r\n\t\tuser.avatar_url_icon = \"https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/\" + hash.substring(0, 2) + \"/\" + hash;\r\n\t\tuser.avatar_url_medium = user.avatar_url_icon + \"_medium.jpg\";\r\n\t\tuser.avatar_url_full = user.avatar_url_icon + \"_full.jpg\";\r\n\t\tuser.avatar_url_icon += \".jpg\";\r\n\t}\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/components/gameservers.js":"var SteamUser = require('../index.js');\r\nvar SteamID = require('steamid');\r\n\r\nSteamUser.prototype.serverQuery = function(conditions, callback) {\r\n\tif (typeof conditions === 'string') {\r\n\t\tconditions = {\"filter_text\": conditions};\r\n\t}\r\n\r\n\tif (conditions.geo_location_ip) {\r\n\t\tvar parts = conditions.geo_location_ip.split('.');\r\n\t\tvar buf = new Buffer(4);\r\n\r\n\t\tparts.forEach(function(octet, index) {\r\n\t\t\tbuf.writeUInt8(octet, index);\r\n\t\t});\r\n\r\n\t\tconditions.geo_location_ip = buf.readUInt32(0);\r\n\t}\r\n\r\n\tthis._send(SteamUser.EMsg.ClientGMSServerQuery, conditions, function(body) {\r\n\t\tif (body.error) {\r\n\t\t\tcallback(new Error(body.error));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tcallback(null, (body.servers || []).map(function(server) {\r\n\t\t\tvar buf = new Buffer(4);\r\n\t\t\tbuf.writeUInt32BE(server.server_ip, 0);\r\n\r\n\t\t\treturn {\r\n\t\t\t\t\"ip\": Array.prototype.join.call(buf, '.'),\r\n\t\t\t\t\"port\": server.server_port,\r\n\t\t\t\t\"players\": server.auth_players\r\n\t\t\t};\r\n\t\t}))\r\n\t});\r\n};\r\n\r\nSteamUser.prototype.getServerList = function(filter, limit, callback) {\r\n\tthis._sendUnified(\"GameServers.GetServerList#1\", {\r\n\t\t\"filter\": filter,\r\n\t\t\"limit\": limit\r\n\t}, false, function(body) {\r\n\t\tcallback(body.servers.map(function(server) {\r\n\t\t\tserver.steamid = new SteamID(server.steamid.toString());\r\n\t\t\treturn server;\r\n\t\t}));\r\n\t});\r\n};\r\n\r\nSteamUser.prototype.getServerSteamIDsByIP = function(ips, callback) {\r\n\tthis._sendUnified(\"GameServers.GetServerSteamIDsByIP#1\", {\r\n\t\t\"server_ips\": ips\r\n\t}, false, function(body) {\r\n\t\tvar servers = {};\r\n\r\n\t\t(body.servers || []).forEach(function(server) {\r\n\t\t\tservers[server.addr] = new SteamID(server.steamid.toString());\r\n\t\t});\r\n\r\n\t\tcallback(servers);\r\n\t});\r\n};\r\n\r\nSteamUser.prototype.getServerIPsBySteamID = function(steamids, callback) {\r\n\tsteamids = steamids.map(function(id) {\r\n\t\tif (typeof id === 'object') {\r\n\t\t\treturn id.toString();\r\n\t\t}\r\n\r\n\t\treturn new SteamID(id).getSteamID64();\r\n\t});\r\n\r\n\tthis._sendUnified(\"GameServers.GetServerIPsBySteamID#1\", {\r\n\t\t\"server_steamids\": steamids\r\n\t}, false, function(body) {\r\n\t\tvar servers = {};\r\n\r\n\t\t(body.servers || []).forEach(function(server) {\r\n\t\t\tservers[server.steamid.toString()] = server.addr;\r\n\t\t});\r\n\r\n\t\tcallback(servers);\r\n\t});\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/components/helpers.js":"var EResult = require('../enums/EResult.js');\r\nvar EOSType = require('../enums/EOSType.js');\r\nvar SteamID = require('steamid');\r\nvar Crypto = require('crypto');\r\n\r\n/**\r\n * If the input isn't already a SteamID object, converts it into one and returns it\r\n * @param input\r\n * @returns {SteamID}\r\n */\r\nexports.steamID = function(input) {\r\n\tif (typeof input !== 'string') {\r\n\t\tvar keys = Object.keys(input);\r\n\t\tif (keys.indexOf('universe') != -1 && keys.indexOf('type') != -1 && keys.indexOf('instance') != -1 && keys.indexOf('accountid') != -1 && keys.indexOf('isValid') != -1) {\r\n\t\t\treturn input; // Looks like it's already a SteamID\r\n\t\t}\r\n\r\n\t\tinput = input.toString();\r\n\t}\r\n\r\n\treturn new SteamID(input);\r\n};\r\n\r\n/**\r\n * Convert an IP in integer notation to dotted-decimal notation\r\n * @param {int} input\r\n * @returns {string}\r\n */\r\nexports.ipIntToString = function(input) {\r\n\treturn ((input >> 24) & 0xFF) + \".\" + ((input >> 16) & 0xFF) + \".\" + ((input >> 8) & 0xFF) + \".\" + (input & 0xFF);\r\n};\r\n\r\n/**\r\n * Convert an IP in dotted-decimal notation to integer notation\r\n * @param {string} input\r\n * @returns {int}\r\n */\r\nexports.ipStringToInt = function(input) {\r\n\tvar parts = input.split('.');\r\n\treturn ((parts[0] << 24) | (parts[1] << 16) | (parts[2] << 8) | parts[3]) >>> 0;\r\n};\r\n\r\n/**\r\n * Get an machine ID for internal use (not sent to Steam)\r\n * @returns {string}\r\n */\r\nexports.getInternalMachineID = function() {\r\n\t// Build our machine ID off of hostname, memory, and CPU data\r\n\tvar os = require('os');\r\n\tvar cpus = os.cpus().map(function(cpu) {\r\n\t\treturn cpu.model;\r\n\t});\r\n\r\n\tcpus.sort();\r\n\r\n\tvar id = os.hostname() + os.totalmem() + cpus.join('');\r\n\tvar hash = Crypto.createHash('md5');\r\n\thash.update(id);\r\n\treturn hash.digest('hex');\r\n};\r\n\r\n/**\r\n * Get an Error object for a particular EResult\r\n * @param {int} eresult\r\n * @returns {null|Error}\r\n */\r\nexports.eresultError = function(eresult) {\r\n\tif (eresult == EResult.OK) {\r\n\t\t// no error\r\n\t\treturn null;\r\n\t}\r\n\r\n\tvar err = new Error(EResult[eresult] || (\"Error \" + eresult));\r\n\terr.eresult = eresult;\r\n\treturn err;\r\n};\r\n\r\n/**\r\n * @return {EOSType}\r\n */\r\nexports.getOsType = function() {\r\n\tvar Os = require('os');\r\n\tswitch (Os.platform()) {\r\n\t\tcase 'darwin':\r\n\t\t\tvar match = Os.release().match(/Darwin Kernel Version (\\d+)\\.(\\d+)\\.(\\d+)/);\r\n\t\t\tif (!match) {\r\n\t\t\t\treturn EOSType.MacOSUnknown;\r\n\t\t\t}\r\n\r\n\t\t\tif (match[1] == 10 && match[2] == 0 && match[3] == 0) {\r\n\t\t\t\treturn EOSType.MacOS106; // Snow Leopard\r\n\t\t\t}\r\n\r\n\t\t\tif (match[1] == 11 && match[2] == 3) {\r\n\t\t\t\treturn EOSType.MacOS107; // Lion\r\n\t\t\t}\r\n\r\n\t\t\tif (match[1] == 12 && match[2] == 2) {\r\n\t\t\t\treturn EOSType.MacOS108; // Mountain Lion\r\n\t\t\t}\r\n\r\n\t\t\tif (match[1] == 13 && match[2] == 0) {\r\n\t\t\t\treturn EOSType.MacOS109; // Mavericks\r\n\t\t\t}\r\n\r\n\t\t\tif (match[1] == 14 && match[2] == 0) {\r\n\t\t\t\treturn EOSType.MacOS1010; // Yosemite\r\n\t\t\t}\r\n\r\n\t\t\treturn EOSType.MacOSUnknown;\r\n\r\n\t\tcase 'win32':\r\n\t\t\t// http://prajwaldesai.com/windows-operating-system-version-numbers/\r\n\t\t\tvar verParts = Os.release().split('.');\r\n\t\t\tif (verParts.length < 3) {\r\n\t\t\t\treturn EOSType.WinUnknown;\r\n\t\t\t}\r\n\r\n\t\t\tif (verParts[0] == 3) {\r\n\t\t\t\treturn EOSType.Win311; // yeah right\r\n\t\t\t}\r\n\r\n\t\t\tif (verParts[0] == 4 && parseInt(verParts[1], 10) <= 3) {\r\n\t\t\t\treturn EOSType.Win95;\r\n\t\t\t}\r\n\r\n\t\t\tif (verParts[0] == 4 && verParts[1] == 10) {\r\n\t\t\t\treturn EOSType.Win98;\r\n\t\t\t}\r\n\r\n\t\t\tif (verParts[0] == 4 && verParts[1] == 90) {\r\n\t\t\t\treturn EOSType.WinME;\r\n\t\t\t}\r\n\r\n\t\t\tif (verParts[0] == 5 && verParts[1] == \"00\" && verParts[2] == 1515) {\r\n\t\t\t\treturn EOSType.WinNT;\r\n\t\t\t}\r\n\r\n\t\t\tif (verParts[0] == 5 && parseInt(verParts[1], 10) < 1) {\r\n\t\t\t\treturn EOSType.Win200;\r\n\t\t\t}\r\n\r\n\t\t\tif (verParts[0] == 5 && verParts[1] == 1) {\r\n\t\t\t\treturn EOSType.WinXP;\r\n\t\t\t}\r\n\r\n\t\t\tif (verParts[0] == 5 && verParts[1] == 2) {\r\n\t\t\t\treturn EOSType.Win2003;\r\n\t\t\t}\r\n\r\n\t\t\tif (verParts[0] == 6 && verParts[1] == 0 && verParts[2] == 6001) {\r\n\t\t\t\treturn EOSType.Win2008;\r\n\t\t\t}\r\n\r\n\t\t\tif (verParts[0] == 6 && verParts[1] == 0) {\r\n\t\t\t\treturn EOSType.WinVista;\r\n\t\t\t}\r\n\r\n\t\t\tif (verParts[0] == 6 && verParts[1] == 1) {\r\n\t\t\t\treturn EOSType.Win7;\r\n\t\t\t}\r\n\r\n\t\t\tif (verParts[0] == 6 && verParts[1] == 2) {\r\n\t\t\t\treturn EOSType.Win8;\r\n\t\t\t}\r\n\r\n\t\t\tif (verParts[0] == 6 && verParts[1] == 3) {\r\n\t\t\t\treturn EOSType.Win81;\r\n\t\t\t}\r\n\r\n\t\t\tif (verParts[0] == 10) {\r\n\t\t\t\treturn EOSType.Win10;\r\n\t\t\t}\r\n\r\n\t\t\treturn EOSType.WinUnknown;\r\n\r\n\t\tdefault:\r\n\t\t\treturn EOSType.LinuxUnknown;\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EResult.js":"/**\n * @enum EResult\n */\nmodule.exports = {\n\t\"Invalid\": 0,\n\t\"OK\": 1,\n\t\"Fail\": 2,\n\t\"NoConnection\": 3,\n\t\"InvalidPassword\": 5,\n\t\"LoggedInElsewhere\": 6,\n\t\"InvalidProtocolVer\": 7,\n\t\"InvalidParam\": 8,\n\t\"FileNotFound\": 9,\n\t\"Busy\": 10,\n\t\"InvalidState\": 11,\n\t\"InvalidName\": 12,\n\t\"InvalidEmail\": 13,\n\t\"DuplicateName\": 14,\n\t\"AccessDenied\": 15,\n\t\"Timeout\": 16,\n\t\"Banned\": 17,\n\t\"AccountNotFound\": 18,\n\t\"InvalidSteamID\": 19,\n\t\"ServiceUnavailable\": 20,\n\t\"NotLoggedOn\": 21,\n\t\"Pending\": 22,\n\t\"EncryptionFailure\": 23,\n\t\"InsufficientPrivilege\": 24,\n\t\"LimitExceeded\": 25,\n\t\"Revoked\": 26,\n\t\"Expired\": 27,\n\t\"AlreadyRedeemed\": 28,\n\t\"DuplicateRequest\": 29,\n\t\"AlreadyOwned\": 30,\n\t\"IPNotFound\": 31,\n\t\"PersistFailed\": 32,\n\t\"LockingFailed\": 33,\n\t\"LogonSessionReplaced\": 34,\n\t\"ConnectFailed\": 35,\n\t\"HandshakeFailed\": 36,\n\t\"IOFailure\": 37,\n\t\"RemoteDisconnect\": 38,\n\t\"ShoppingCartNotFound\": 39,\n\t\"Blocked\": 40,\n\t\"Ignored\": 41,\n\t\"NoMatch\": 42,\n\t\"AccountDisabled\": 43,\n\t\"ServiceReadOnly\": 44,\n\t\"AccountNotFeatured\": 45,\n\t\"AdministratorOK\": 46,\n\t\"ContentVersion\": 47,\n\t\"TryAnotherCM\": 48,\n\t\"PasswordRequiredToKickSession\": 49,\n\t\"AlreadyLoggedInElsewhere\": 50,\n\t\"Suspended\": 51,\n\t\"Cancelled\": 52,\n\t\"DataCorruption\": 53,\n\t\"DiskFull\": 54,\n\t\"RemoteCallFailed\": 55,\n\t\"PasswordNotSet\": 56, // obsolete \"renamed to PasswordUnset\"\n\t\"PasswordUnset\": 56,\n\t\"ExternalAccountUnlinked\": 57,\n\t\"PSNTicketInvalid\": 58,\n\t\"ExternalAccountAlreadyLinked\": 59,\n\t\"RemoteFileConflict\": 60,\n\t\"IllegalPassword\": 61,\n\t\"SameAsPreviousValue\": 62,\n\t\"AccountLogonDenied\": 63,\n\t\"CannotUseOldPassword\": 64,\n\t\"InvalidLoginAuthCode\": 65,\n\t\"AccountLogonDeniedNoMailSent\": 66, // obsolete \"renamed to AccountLogonDeniedNoMail\"\n\t\"AccountLogonDeniedNoMail\": 66,\n\t\"HardwareNotCapableOfIPT\": 67,\n\t\"IPTInitError\": 68,\n\t\"ParentalControlRestricted\": 69,\n\t\"FacebookQueryError\": 70,\n\t\"ExpiredLoginAuthCode\": 71,\n\t\"IPLoginRestrictionFailed\": 72,\n\t\"AccountLocked\": 73, // obsolete \"renamed to AccountLockedDown\"\n\t\"AccountLockedDown\": 73,\n\t\"AccountLogonDeniedVerifiedEmailRequired\": 74,\n\t\"NoMatchingURL\": 75,\n\t\"BadResponse\": 76,\n\t\"RequirePasswordReEntry\": 77,\n\t\"ValueOutOfRange\": 78,\n\t\"UnexpectedError\": 79,\n\t\"Disabled\": 80,\n\t\"InvalidCEGSubmission\": 81,\n\t\"RestrictedDevice\": 82,\n\t\"RegionLocked\": 83,\n\t\"RateLimitExceeded\": 84,\n\t\"AccountLogonDeniedNeedTwoFactorCode\": 85, // obsolete \"renamed to AccountLoginDeniedNeedTwoFactor\"\n\t\"AccountLoginDeniedNeedTwoFactor\": 85,\n\t\"ItemOrEntryHasBeenDeleted\": 86, // obsolete \"renamed to ItemDeleted\"\n\t\"ItemDeleted\": 86,\n\t\"AccountLoginDeniedThrottle\": 87,\n\t\"TwoFactorCodeMismatch\": 88,\n\t\"TwoFactorActivationCodeMismatch\": 89,\n\t\"AccountAssociatedToMultiplePlayers\": 90, // obsolete \"renamed to AccountAssociatedToMultiplePartners\"\n\t\"AccountAssociatedToMultiplePartners\": 90,\n\t\"NotModified\": 91,\n\t\"NoMobileDeviceAvailable\": 92, // obsolete \"renamed to NoMobileDevice\"\n\t\"NoMobileDevice\": 92,\n\t\"TimeIsOutOfSync\": 93, // obsolete \"renamed to TimeNotSynced\"\n\t\"TimeNotSynced\": 93,\n\t\"SMSCodeFailed\": 94,\n\t\"TooManyAccountsAccessThisResource\": 95, // obsolete \"renamed to AccountLimitExceeded\"\n\t\"AccountLimitExceeded\": 95,\n\t\"AccountActivityLimitExceeded\": 96,\n\t\"PhoneActivityLimitExceeded\": 97,\n\t\"RefundToWallet\": 98,\n\t\"EmailSendFailure\": 99,\n\t\"NotSettled\": 100,\n\t\"NeedCaptcha\": 101,\n\t\"GSLTDenied\": 102,\n\t\"GSOwnerDenied\": 103,\n\t\"InvalidItemType\": 104,\n\t\"IPBanned\": 105,\n\t\"GSLTExpired\": 106,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"Invalid\",\n\t\"1\": \"OK\",\n\t\"2\": \"Fail\",\n\t\"3\": \"NoConnection\",\n\t\"5\": \"InvalidPassword\",\n\t\"6\": \"LoggedInElsewhere\",\n\t\"7\": \"InvalidProtocolVer\",\n\t\"8\": \"InvalidParam\",\n\t\"9\": \"FileNotFound\",\n\t\"10\": \"Busy\",\n\t\"11\": \"InvalidState\",\n\t\"12\": \"InvalidName\",\n\t\"13\": \"InvalidEmail\",\n\t\"14\": \"DuplicateName\",\n\t\"15\": \"AccessDenied\",\n\t\"16\": \"Timeout\",\n\t\"17\": \"Banned\",\n\t\"18\": \"AccountNotFound\",\n\t\"19\": \"InvalidSteamID\",\n\t\"20\": \"ServiceUnavailable\",\n\t\"21\": \"NotLoggedOn\",\n\t\"22\": \"Pending\",\n\t\"23\": \"EncryptionFailure\",\n\t\"24\": \"InsufficientPrivilege\",\n\t\"25\": \"LimitExceeded\",\n\t\"26\": \"Revoked\",\n\t\"27\": \"Expired\",\n\t\"28\": \"AlreadyRedeemed\",\n\t\"29\": \"DuplicateRequest\",\n\t\"30\": \"AlreadyOwned\",\n\t\"31\": \"IPNotFound\",\n\t\"32\": \"PersistFailed\",\n\t\"33\": \"LockingFailed\",\n\t\"34\": \"LogonSessionReplaced\",\n\t\"35\": \"ConnectFailed\",\n\t\"36\": \"HandshakeFailed\",\n\t\"37\": \"IOFailure\",\n\t\"38\": \"RemoteDisconnect\",\n\t\"39\": \"ShoppingCartNotFound\",\n\t\"40\": \"Blocked\",\n\t\"41\": \"Ignored\",\n\t\"42\": \"NoMatch\",\n\t\"43\": \"AccountDisabled\",\n\t\"44\": \"ServiceReadOnly\",\n\t\"45\": \"AccountNotFeatured\",\n\t\"46\": \"AdministratorOK\",\n\t\"47\": \"ContentVersion\",\n\t\"48\": \"TryAnotherCM\",\n\t\"49\": \"PasswordRequiredToKickSession\",\n\t\"50\": \"AlreadyLoggedInElsewhere\",\n\t\"51\": \"Suspended\",\n\t\"52\": \"Cancelled\",\n\t\"53\": \"DataCorruption\",\n\t\"54\": \"DiskFull\",\n\t\"55\": \"RemoteCallFailed\",\n\t\"56\": \"PasswordUnset\",\n\t\"57\": \"ExternalAccountUnlinked\",\n\t\"58\": \"PSNTicketInvalid\",\n\t\"59\": \"ExternalAccountAlreadyLinked\",\n\t\"60\": \"RemoteFileConflict\",\n\t\"61\": \"IllegalPassword\",\n\t\"62\": \"SameAsPreviousValue\",\n\t\"63\": \"AccountLogonDenied\",\n\t\"64\": \"CannotUseOldPassword\",\n\t\"65\": \"InvalidLoginAuthCode\",\n\t\"66\": \"AccountLogonDeniedNoMail\",\n\t\"67\": \"HardwareNotCapableOfIPT\",\n\t\"68\": \"IPTInitError\",\n\t\"69\": \"ParentalControlRestricted\",\n\t\"70\": \"FacebookQueryError\",\n\t\"71\": \"ExpiredLoginAuthCode\",\n\t\"72\": \"IPLoginRestrictionFailed\",\n\t\"73\": \"AccountLockedDown\",\n\t\"74\": \"AccountLogonDeniedVerifiedEmailRequired\",\n\t\"75\": \"NoMatchingURL\",\n\t\"76\": \"BadResponse\",\n\t\"77\": \"RequirePasswordReEntry\",\n\t\"78\": \"ValueOutOfRange\",\n\t\"79\": \"UnexpectedError\",\n\t\"80\": \"Disabled\",\n\t\"81\": \"InvalidCEGSubmission\",\n\t\"82\": \"RestrictedDevice\",\n\t\"83\": \"RegionLocked\",\n\t\"84\": \"RateLimitExceeded\",\n\t\"85\": \"AccountLoginDeniedNeedTwoFactor\",\n\t\"86\": \"ItemDeleted\",\n\t\"87\": \"AccountLoginDeniedThrottle\",\n\t\"88\": \"TwoFactorCodeMismatch\",\n\t\"89\": \"TwoFactorActivationCodeMismatch\",\n\t\"90\": \"AccountAssociatedToMultiplePartners\",\n\t\"91\": \"NotModified\",\n\t\"92\": \"NoMobileDevice\",\n\t\"93\": \"TimeNotSynced\",\n\t\"94\": \"SMSCodeFailed\",\n\t\"95\": \"AccountLimitExceeded\",\n\t\"96\": \"AccountActivityLimitExceeded\",\n\t\"97\": \"PhoneActivityLimitExceeded\",\n\t\"98\": \"RefundToWallet\",\n\t\"99\": \"EmailSendFailure\",\n\t\"100\": \"NotSettled\",\n\t\"101\": \"NeedCaptcha\",\n\t\"102\": \"GSLTDenied\",\n\t\"103\": \"GSOwnerDenied\",\n\t\"104\": \"InvalidItemType\",\n\t\"105\": \"IPBanned\",\n\t\"106\": \"GSLTExpired\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EOSType.js":"/**\n * @enum EOSType\n */\nmodule.exports = {\n\t\"Unknown\": -1,\n\t\"IOSUnknown\": -600,\n\t\"AndroidUnknown\": -500,\n\t\"UMQ\": -400,\n\t\"PS3\": -300,\n\t\"MacOSUnknown\": -102,\n\t\"MacOS104\": -101,\n\t\"MacOS105\": -100,\n\t\"MacOS1058\": -99,\n\t\"MacOS106\": -95,\n\t\"MacOS1063\": -94,\n\t\"MacOS1064_slgu\": -93,\n\t\"MacOS1067\": -92,\n\t\"MacOS107\": -90,\n\t\"MacOS108\": -89,\n\t\"MacOS109\": -88,\n\t\"MacOS1010\": -87,\n\t\"MacOS1011\": -86,\n\t\"MacOS1012\": -85,\n\t\"MacOSMax\": -1,\n\t\"LinuxUnknown\": -203,\n\t\"Linux22\": -202,\n\t\"Linux24\": -201,\n\t\"Linux26\": -200,\n\t\"Linux32\": -199,\n\t\"Linux35\": -198,\n\t\"Linux36\": -197,\n\t\"Linux310\": -196,\n\t\"LinuxMax\": -103,\n\t\"WinUnknown\": 0,\n\t\"Win311\": 1,\n\t\"Win95\": 2,\n\t\"Win98\": 3,\n\t\"WinME\": 4,\n\t\"WinNT\": 5,\n\t\"Win200\": 6, // obsolete \"renamed to Win2000\"\n\t\"Win2000\": 6,\n\t\"WinXP\": 7,\n\t\"Win2003\": 8,\n\t\"WinVista\": 9,\n\t\"Win7\": 10, // obsolete \"renamed to Windows7\"\n\t\"Windows7\": 10,\n\t\"Win2008\": 11,\n\t\"Win2012\": 12,\n\t\"Win8\": 13, // obsolete \"renamed to Windows8\"\n\t\"Windows8\": 13,\n\t\"Win81\": 14, // obsolete \"renamed to Windows81\"\n\t\"Windows81\": 14,\n\t\"Win2012R2\": 15,\n\t\"Win10\": 16, // obsolete \"renamed to Windows10\"\n\t\"Windows10\": 16,\n\t\"WinMAX\": 15,\n\t\"Max\": 26,\n\n\t// Value-to-name mapping for convenience\n\t\"-600\": \"IOSUnknown\",\n\t\"-500\": \"AndroidUnknown\",\n\t\"-400\": \"UMQ\",\n\t\"-300\": \"PS3\",\n\t\"-102\": \"MacOSUnknown\",\n\t\"-101\": \"MacOS104\",\n\t\"-100\": \"MacOS105\",\n\t\"-99\": \"MacOS1058\",\n\t\"-95\": \"MacOS106\",\n\t\"-94\": \"MacOS1063\",\n\t\"-93\": \"MacOS1064_slgu\",\n\t\"-92\": \"MacOS1067\",\n\t\"-90\": \"MacOS107\",\n\t\"-89\": \"MacOS108\",\n\t\"-88\": \"MacOS109\",\n\t\"-87\": \"MacOS1010\",\n\t\"-86\": \"MacOS1011\",\n\t\"-85\": \"MacOS1012\",\n\t\"-1\": \"MacOSMax\",\n\t\"-203\": \"LinuxUnknown\",\n\t\"-202\": \"Linux22\",\n\t\"-201\": \"Linux24\",\n\t\"-200\": \"Linux26\",\n\t\"-199\": \"Linux32\",\n\t\"-198\": \"Linux35\",\n\t\"-197\": \"Linux36\",\n\t\"-196\": \"Linux310\",\n\t\"-103\": \"LinuxMax\",\n\t\"0\": \"WinUnknown\",\n\t\"1\": \"Win311\",\n\t\"2\": \"Win95\",\n\t\"3\": \"Win98\",\n\t\"4\": \"WinME\",\n\t\"5\": \"WinNT\",\n\t\"6\": \"Win2000\",\n\t\"7\": \"WinXP\",\n\t\"8\": \"Win2003\",\n\t\"9\": \"WinVista\",\n\t\"10\": \"Windows7\",\n\t\"11\": \"Win2008\",\n\t\"12\": \"Win2012\",\n\t\"13\": \"Windows8\",\n\t\"14\": \"Windows81\",\n\t\"16\": \"Windows10\",\n\t\"15\": \"WinMAX\",\n\t\"26\": \"Max\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/components/logon.js":"var Steam = require('steam-client');\r\nvar SteamUser = require('../index.js');\r\nvar SteamID = require('steamid');\r\nvar Helpers = require('./helpers.js');\r\nvar Schema = require('./protobufs.js');\r\nvar Crypto = require('crypto');\r\nvar ByteBuffer = require('bytebuffer');\r\n\r\nSteamUser.prototype.logOn = function(details) {\r\n\tif (this.client.loggedOn) {\r\n\t\tthrow new Error(\"Already logged on, cannot log on again\");\r\n\t}\r\n\r\n\tthis.steamID = null;\r\n\tthis.limitations = null;\r\n\tthis.wallet = null;\r\n\tthis.emailInfo = null;\r\n\tthis.licenses = null;\r\n\r\n\tthis._loggingOff = false;\r\n\r\n\tthis.users = {};\r\n\tthis.groups = {};\r\n\tthis.chats = {};\r\n\tthis.myFriends = {};\r\n\tthis.myGroups = {};\r\n\r\n\tif (details !== true) {\r\n\t\t// We're not logging on with saved details\r\n\t\tdetails = details || {};\r\n\r\n\t\tthis._logOnDetails = {\r\n\t\t\t\"account_name\": details.accountName,\r\n\t\t\t\"password\": details.password,\r\n\t\t\t\"login_key\": details.loginKey,\r\n\t\t\t\"auth_code\": details.authCode,\r\n\t\t\t\"two_factor_code\": details.twoFactorCode,\r\n\t\t\t\"should_remember_password\": !!details.rememberPassword,\r\n\t\t\t\"obfustucated_private_ip\": details.logonID || 0,\r\n\t\t\t\"protocol_version\": 65575, // don't get rid of this, node-steam needs it.\r\n\t\t\t\"supports_rate_limit_response\": !!details.accountName,\r\n\t\t\t\"machine_name\": details.accountName ? (details.machineName || \"\") : \"\",\r\n\t\t\t\"ping_ms_from_cell_search\": details.accountName ? 4 + Math.floor(Math.random() * 30) : 0, // fake ping value\r\n\t\t\t\"client_language\": details.accountName ? \"english\" : \"\",\r\n\t\t\t\"client_os_type\": Helpers.getOsType(),\r\n\t\t\t\"anon_user_target_account_name\": details.accountName ? \"\" : \"anonymous\",\r\n\t\t\t\"steamguard_dont_remember_computer\": !!(details.accountName && details.authCode && details.dontRememberMachine)\r\n\t\t};\r\n\t}\r\n\r\n\tvar anonLogin = !this._logOnDetails.account_name;\r\n\r\n\t// Read the required files\r\n\tvar filenames = [];\r\n\r\n\tif (!Steam['__SteamUserServersSet__']) {\r\n\t\tfilenames.push('servers.json');\r\n\t}\r\n\r\n\tif (!this._logOnDetails.cell_id) {\r\n\t\t// Some people might be redirecting their storage to a database and running across multiple servers in multiple regions\r\n\t\t// Let's account for this by saving cellid by a \"machine ID\" so different boxes will store different cellids\r\n\t\tfilenames.push('cellid-' + Helpers.getInternalMachineID() + '.txt');\r\n\t}\r\n\r\n\tvar sentry = this._sentry;\r\n\tvar machineID;\r\n\r\n\tif (!anonLogin) {\r\n\t\tif (!this._logOnDetails.sha_sentryfile && !sentry) {\r\n\t\t\tfilenames.push(this.options.singleSentryfile ? 'sentry.bin' : 'sentry.' + this._logOnDetails.account_name + '.bin');\r\n\t\t}\r\n\r\n\t\tif (!this._logOnDetails.machine_id && this.options.machineIdType == SteamUser.EMachineIDType.PersistentRandom) {\r\n\t\t\tfilenames.push('machineid.bin');\r\n\t\t}\r\n\t}\r\n\r\n\tvar self = this;\r\n\r\n\tif (this.storage) {\r\n\t\tthis.storage.readFiles(filenames, readFileCallback);\r\n\t} else {\r\n\t\treadFileCallback(null, []);\r\n\t}\r\n\r\n\tfunction readFileCallback(err, files) {\r\n\t\tfiles = files || [];\r\n\r\n\t\tfiles.forEach(function(file) {\r\n\t\t\tif (file.filename == 'servers.json' && file.contents) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tSteam.servers = JSON.parse(file.contents.toString('utf8'));\r\n\t\t\t\t\tSteam['__SteamUserServersSet__'] = true;\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\t// don't care\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (file.filename.match(/^cellid/) && file.contents) {\r\n\t\t\t\tvar cellID = parseInt(file.contents.toString('utf8'), 10);\r\n\t\t\t\tif (!isNaN(cellID)) {\r\n\t\t\t\t\tself._logOnDetails.cell_id = cellID;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (file.filename.match(/^sentry/) && file.contents) {\r\n\t\t\t\tsentry = file.contents;\r\n\t\t\t}\r\n\r\n\t\t\tif (file.filename == 'machineid.bin' && file.contents) {\r\n\t\t\t\tmachineID = file.contents;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (Steam['__SteamUserServersSet__']) {\r\n\t\t\tgotCMList();\r\n\t\t} else {\r\n\t\t\t// Get the CM list from the API\r\n\t\t\tself.emit('debug', \"Getting CM list from WebAPI\");\r\n\t\t\tself._apiRequest(\"GET\", \"ISteamDirectory\", \"GetCMList\", 1, {\"cellid\": self._logOnDetails.cell_id || 0}, function(err, res) {\r\n\t\t\t\tif (err || !res.response || res.response.result != 1 || !res.response.serverlist) {\r\n\t\t\t\t\tgotCMList(); // just fallback to the built-in list\r\n\t\t\t\t} else {\r\n\t\t\t\t\tres.response.serverlist.length = Object.keys(res.response.serverlist).length;\r\n\t\t\t\t\tSteam.servers = Array.prototype.slice.call(res.response.serverlist).map(function(server) {\r\n\t\t\t\t\t\tvar parts = server.split(':');\r\n\t\t\t\t\t\treturn {\"host\": parts[0], \"port\": parts[1]};\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tSteam['__SteamUserServersSet__'] = true;\r\n\t\t\t\t\tgotCMList();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction gotCMList() {\r\n\t\t\t// Sentry file\r\n\t\t\tif (!self._logOnDetails.sha_sentryfile) {\r\n\t\t\t\tif (sentry && sentry.length > 20) {\r\n\t\t\t\t\t// Hash the sentry\r\n\t\t\t\t\tvar hash = Crypto.createHash('sha1');\r\n\t\t\t\t\thash.update(sentry);\r\n\t\t\t\t\tsentry = hash.digest();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tself._logOnDetails.sha_sentryfile = sentry;\r\n\t\t\t\tself._logOnDetails.eresult_sentryfile = sentry ? 1 : 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (self._logOnDetails.sha_sentryfile && self._logOnDetails.sha_sentryfile.toString('hex') == 'aa57132157ac337ba2936099e22236062aafafdd') {\r\n\t\t\t\tthrow new Error(\"You're trying to log on with a decoy sentry file. You're probably looking for the sentry file that's hidden.\");\r\n\t\t\t}\r\n\r\n\t\t\t// Machine ID\r\n\t\t\tif (!anonLogin && !self._logOnDetails.machine_id) {\r\n\t\t\t\tself._logOnDetails.machine_id = self._getMachineID(machineID);\r\n\t\t\t}\r\n\r\n\t\t\t// Do the login\r\n\t\t\tvar sid = new SteamID();\r\n\t\t\tsid.universe = SteamID.Universe.PUBLIC;\r\n\t\t\tsid.type = anonLogin ? SteamID.Type.ANON_USER : SteamID.Type.INDIVIDUAL;\r\n\t\t\tsid.instance = anonLogin ? SteamID.Instance.ALL : SteamID.Instance.DESKTOP;\r\n\t\t\tsid.accountid = 0;\r\n\t\t\tself.client.steamID = sid.getSteamID64();\r\n\r\n\t\t\tif (self.client.connected) {\r\n\t\t\t\tonConnected.call(self);\r\n\t\t\t} else {\r\n\t\t\t\tself.client.connect();\r\n\r\n\t\t\t\tself._onConnected = onConnected.bind(self);\r\n\t\t\t\tself.client.once('connected', self._onConnected);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\nfunction onConnected() {\r\n\tif (this.client.constructor.name === 'CMClient') {\r\n\t\t// We need to use this since CMClient defines the protocol version itself\r\n\t\tthis.client.logOn(this._logOnDetails);\r\n\t} else {\r\n\t\tthis._send(SteamUser.EMsg.ClientLogon, this._logOnDetails);\r\n\t}\r\n}\r\n\r\nSteamUser.prototype.logOff = SteamUser.prototype.disconnect = function(suppressLogoff) {\r\n\tif (typeof this._onConnected === 'function') {\r\n\t\tthis.client.removeListener('connected', this._onConnected);\r\n\t}\r\n\r\n\tthis._clearChangelistUpdateTimer();\r\n\r\n\tif (this.client.connected && !suppressLogoff) {\r\n\t\tthis._loggingOff = true;\r\n\t\tthis._send(SteamUser.EMsg.ClientLogOff, {});\r\n\r\n\t\tvar self = this;\r\n\t\tvar timeout = setTimeout(function() {\r\n\t\t\tself.emit('disconnected', 0, \"Logged off\");\r\n\t\t\tself._loggingOff = false;\r\n\t\t\tself.client.disconnect();\r\n\t\t}, 4000);\r\n\r\n\t\tthis.once('disconnected', function(eresult) {\r\n\t\t\tclearTimeout(timeout);\r\n\t\t});\r\n\t} else {\r\n\t\tthis.client.disconnect();\r\n\t}\r\n};\r\n\r\nSteamUser.prototype._getMachineID = function(localFile) {\r\n\tif (!this._logOnDetails.account_name || this.options.machineIdType == SteamUser.EMachineIDType.None) {\r\n\t\t// No machine IDs for anonymous logons\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// The user wants to use a random machine ID that's saved to dataDirectory\r\n\tif (this.options.machineIdType == SteamUser.EMachineIDType.PersistentRandom) {\r\n\t\tif (localFile) {\r\n\t\t\treturn localFile;\r\n\t\t}\r\n\r\n\t\tvar file = getRandomID();\r\n\r\n\t\tif (this.storage) {\r\n\t\t\tthis.storage.writeFile('machineid.bin', file);\r\n\t\t}\r\n\r\n\t\treturn file;\r\n\t}\r\n\r\n\t// The user wants to use a machine ID that's generated off the account name\r\n\tif (this.options.machineIdType == SteamUser.EMachineIDType.AccountNameGenerated) {\r\n\t\treturn createMachineID(\r\n\t\t\tthis.options.machineIdFormat[0].replace(/\\{account_name\\}/g, this._logOnDetails.account_name),\r\n\t\t\tthis.options.machineIdFormat[1].replace(/\\{account_name\\}/g, this._logOnDetails.account_name),\r\n\t\t\tthis.options.machineIdFormat[2].replace(/\\{account_name\\}/g, this._logOnDetails.account_name)\r\n\t\t);\r\n\t}\r\n\r\n\t// Default to random\r\n\treturn getRandomID();\r\n\r\n\tfunction getRandomID() {\r\n\t\treturn createMachineID(Math.random().toString(), Math.random().toString(), Math.random().toString());\r\n\t}\r\n};\r\n\r\nSteamUser.prototype.relog = function() {\r\n\tif (this.steamID.type == SteamID.Type.INDIVIDUAL && (!this._logOnDetails || !this._logOnDetails.should_remember_password || !this._logOnDetails.login_key)) {\r\n\t\tthrow new Error(\"To use relog(), you must specify rememberPassword=true when logging on and wait for loginKey to be emitted\");\r\n\t}\r\n\r\n\tthis._relogging = true;\r\n\tthis.logOff();\r\n};\r\n\r\n// Handlers\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientLogOnResponse] = function(body) {\r\n\tvar self = this;\r\n\tswitch (body.eresult) {\r\n\t\tcase SteamUser.EResult.OK:\r\n\t\t\tdelete this._logonTimeout; // success, so reset reconnect timer\r\n\r\n\t\t\tthis.steamID = new SteamID(body.client_supplied_steamid.toString());\r\n\r\n\t\t\tthis._logOnDetails.last_session_id = this.client._sessionID;\r\n\t\t\tthis._logOnDetails.client_instance_id = body.client_instance_id;\r\n\t\t\tthis._logOnDetails.cell_id = body.cell_id;\r\n\t\t\tthis.logOnResult = body;\r\n\r\n\t\t\tthis.publicIP = Helpers.ipIntToString(body.public_ip);\r\n\t\t\tthis.cellID = body.cell_id;\r\n\t\t\tthis.vanityURL = body.vanity_url;\r\n\r\n\t\t\tthis._connectTime = Date.now();\r\n\t\t\tthis._connectionCount = 0;\r\n\t\t\tthis._gcTokens = [];\r\n\t\t\tthis._contentServerTokens = {};\r\n\r\n\t\t\tif (this._logOnDetails.login_key) {\r\n\t\t\t\t// Steam doesn't send a new loginkey all the time if you're using a persistent one (remember password). Let's manually emit it on a timer to handle any edge cases.\r\n\t\t\t\tthis._loginKeyTimer = setTimeout(() => {\r\n\t\t\t\t\tthis.emit('loginKey', this._logOnDetails.login_key);\r\n\t\t\t\t}, 5000);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.storage) {\r\n\t\t\t\tthis.storage.saveFile('cellid-' + Helpers.getInternalMachineID() + '.txt', body.cell_id);\r\n\t\t\t}\r\n\r\n\t\t\tvar parental = body.parental_settings ? Schema.ParentalSettings.decode(body.parental_settings) : null;\r\n\t\t\tif (parental && parental.salt && parental.passwordhash) {\r\n\t\t\t\tparental.salt = parental.salt.toBuffer();\r\n\t\t\t\tparental.passwordhash = parental.passwordhash.toBuffer();\r\n\r\n\t\t\t\tvar sid = new SteamID();\r\n\t\t\t\tsid.universe = this.steamID.universe;\r\n\t\t\t\tsid.type = SteamID.Type.INDIVIDUAL;\r\n\t\t\t\tsid.instance = SteamID.Instance.DESKTOP;\r\n\t\t\t\tsid.accountid = parental.steamid.low;\r\n\t\t\t\tparental.steamid = sid;\r\n\t\t\t}\r\n\r\n\t\t\tthis.emit('loggedOn', body, parental);\r\n\r\n\t\t\tthis._getChangelistUpdate();\r\n\r\n\t\t\tif (this.steamID.type == SteamID.Type.INDIVIDUAL) {\r\n\t\t\t\tthis._requestNotifications();\r\n\r\n\t\t\t\tif (body.webapi_authenticate_user_nonce) {\r\n\t\t\t\t\tthis._webAuthenticate(body.webapi_authenticate_user_nonce);\r\n\t\t\t\t}\r\n\t\t\t} else if (this.steamID.type == SteamID.Type.ANON_USER) {\r\n\t\t\t\tthis._getLicenseInfo();\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase SteamUser.EResult.AccountLogonDenied:\r\n\t\tcase SteamUser.EResult.AccountLoginDeniedNeedTwoFactor:\r\n\t\tcase SteamUser.EResult.TwoFactorCodeMismatch:\r\n\t\t\t// server is up, so reset logon timer\r\n\t\t\tdelete this._logonTimeout;\r\n\r\n\t\t\tthis.disconnect(true);\r\n\r\n\t\t\tvar isEmailCode = body.eresult == SteamUser.EResult.AccountLogonDenied;\r\n\t\t\tvar lastCodeWrong = body.eresult == SteamUser.EResult.TwoFactorCodeMismatch;\r\n\r\n\t\t\tthis._steamGuardPrompt(isEmailCode ? body.email_domain : null, lastCodeWrong, function(code) {\r\n\t\t\t\tself._logOnDetails[isEmailCode ? 'auth_code' : 'two_factor_code'] = code;\r\n\t\t\t\tself.logOn(true);\r\n\t\t\t});\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase SteamUser.EResult.Fail:\r\n\t\tcase SteamUser.EResult.ServiceUnavailable:\r\n\t\tcase SteamUser.EResult.TryAnotherCM:\r\n\t\t\tthis.emit('debug', 'Log on response: ' + SteamUser.EResult[body.eresult]);\r\n\t\t\tthis.disconnect(true);\r\n\r\n\t\t\tvar timer = this._logonTimeout || 1000;\r\n\t\t\tthis._logonTimeout = Math.min(timer * 2, 60000); // exponential backoff, max 1 minute\r\n\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\tself.logOn(true);\r\n\t\t\t}, timer);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\t// server is up, so reset logon timer\r\n\t\t\tdelete this._logonTimeout;\r\n\r\n\t\t\tvar error = new Error(SteamUser.EResult[body.eresult] || body.eresult);\r\n\t\t\terror.eresult = body.eresult;\r\n\t\t\tthis.disconnect(true);\r\n\t\t\tthis.emit('error', error);\r\n\t}\r\n};\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientLoggedOff] = function(body) {\r\n\tvar msg = body.eresult;\r\n\tfor (var i in SteamUser.EResult) {\r\n\t\tif (SteamUser.EResult.hasOwnProperty(i) && SteamUser.EResult[i] == body.eresult) {\r\n\t\t\tmsg = i;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tthis.emit('debug', 'Logged off: ' + msg);\r\n\tthis._handleLogOff(body.eresult, msg);\r\n};\r\n\r\nSteamUser.prototype._handleLogOff = function(result, msg) {\r\n\tvar fatal = true;\r\n\r\n\tif (this.options.autoRelogin && [0, SteamUser.EResult.Fail, SteamUser.EResult.NoConnection, SteamUser.EResult.ServiceUnavailable, SteamUser.EResult.TryAnotherCM].indexOf(result) != -1) {\r\n\t\tfatal = false;\r\n\t}\r\n\r\n\tdelete this.publicIP;\r\n\tdelete this.cellID;\r\n\r\n\tthis._gcTokens = [];\r\n\tthis._connectionCount = 0;\r\n\tthis._connectTime = 0;\r\n\r\n\tthis._clearChangelistUpdateTimer();\r\n\r\n\tif (!this._relogging && fatal && !this._loggingOff) {\r\n\t\tvar e = new Error(msg);\r\n\t\te.eresult = result;\r\n\r\n\t\tvar steamID = this.steamID;\r\n\t\tthis.disconnect(true);\r\n\r\n\t\tthis.steamID = steamID;\r\n\t\tthis.emit('error', e);\r\n\t\tthis.steamID = null;\r\n\t} else {\r\n\t\t// Only emit \"disconnected\" if we were previously logged on\r\n\t\tif (this.steamID) {\r\n\t\t\tthis.emit('disconnected', result, msg);\r\n\t\t}\r\n\r\n\t\tthis.disconnect(true);\r\n\r\n\t\tif (!this._loggingOff || this._relogging) {\r\n\t\t\tvar self = this;\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\tself.logOn(true);\r\n\t\t\t}, 1000);\r\n\t\t}\r\n\r\n\t\tthis._loggingOff = false;\r\n\t\tthis._relogging = false;\r\n\t}\r\n};\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientNewLoginKey] = function(body) {\r\n\tif (this.steamID.type == SteamID.Type.INDIVIDUAL) {\r\n\t\tdelete this._logOnDetails.password;\r\n\t\tthis._logOnDetails.login_key = body.login_key;\r\n\r\n\t\tif (this._loginKeyTimer) {\r\n\t\t\tclearTimeout(this._loginKeyTimer);\r\n\t\t}\r\n\r\n\t\tif (this._logOnDetails.should_remember_password) {\r\n\t\t\tthis.emit('loginKey', body.login_key);\r\n\t\t}\r\n\r\n\t\t// Accept the key\r\n\t\tthis._send(SteamUser.EMsg.ClientNewLoginKeyAccepted, {\"unique_id\": body.unique_id});\r\n\t}\r\n};\r\n\r\nSteamUser.prototype._steamGuardPrompt = function(domain, lastCodeWrong, callback) {\r\n\tif (this.options.promptSteamGuardCode) {\r\n\t\tvar rl = require('readline').createInterface({\r\n\t\t\t\"input\": process.stdin,\r\n\t\t\t\"output\": process.stdout\r\n\t\t});\r\n\r\n\t\trl.question('Steam Guard' + (!domain ? ' App' : '') + ' Code: ', function(code) {\r\n\t\t\trl.close();\r\n\t\t\tcallback(code);\r\n\t\t});\r\n\t} else {\r\n\t\tthis.emit('steamGuard', domain, callback, lastCodeWrong);\r\n\t}\r\n};\r\n\r\n// Private functions\r\n\r\nfunction createMachineID(val_bb3, val_ff2, val_3b3) {\r\n\t// Machine IDs are binary KV objects with root key MessageObject and three hashes named BB3, FF2, and 3B3.\r\n\t// I don't feel like writing a proper BinaryKV serializer, so this will work fine.\r\n\r\n\tvar buffer = new ByteBuffer(155, ByteBuffer.LITTLE_ENDIAN);\r\n\tbuffer.writeByte(0); // 1 byte, total 1\r\n\tbuffer.writeCString(\"MessageObject\"); // 14 bytes, total 15\r\n\r\n\tbuffer.writeByte(1); // 1 byte, total 16\r\n\tbuffer.writeCString(\"BB3\"); // 4 bytes, total 20\r\n\tbuffer.writeCString(sha1(val_bb3)); // 41 bytes, total 61\r\n\r\n\tbuffer.writeByte(1); // 1 byte, total 62\r\n\tbuffer.writeCString(\"FF2\"); // 4 bytes, total 66\r\n\tbuffer.writeCString(sha1(val_ff2)); // 41 bytes, total 107\r\n\r\n\tbuffer.writeByte(1); // 1 byte, total 108\r\n\tbuffer.writeCString(\"3B3\"); // 4 bytes, total 112\r\n\tbuffer.writeCString(sha1(val_3b3)); // 41 bytes, total 153\r\n\r\n\tbuffer.writeByte(8); // 1 byte, total 154\r\n\tbuffer.writeByte(8); // 1 byte, total 155\r\n\r\n\treturn buffer.flip().toBuffer();\r\n\r\n\tfunction sha1(input) {\r\n\t\tvar hash = Crypto.createHash('sha1');\r\n\t\thash.update(input, 'utf8');\r\n\t\treturn hash.digest('hex');\r\n\t}\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/components/messages.js":"var SteamUser = require('../index.js');\r\nvar ByteBuffer = require('bytebuffer');\r\n\r\nvar Schema = require('./protobufs.js');\r\n\r\nvar protobufs = {};\r\nprotobufs[SteamUser.EMsg.ClientLogon] = Schema.CMsgClientLogon;\r\nprotobufs[SteamUser.EMsg.ClientLogOnResponse] = Schema.CMsgClientLogonResponse;\r\nprotobufs[SteamUser.EMsg.ClientLogOff] = Schema.CMsgClientLogOff;\r\nprotobufs[SteamUser.EMsg.ClientLoggedOff] = Schema.CMsgClientLoggedOff;\r\nprotobufs[SteamUser.EMsg.ClientUpdateMachineAuth] = Schema.CMsgClientUpdateMachineAuth;\r\nprotobufs[SteamUser.EMsg.ClientUpdateMachineAuthResponse] = Schema.CMsgClientUpdateMachineAuthResponse;\r\nprotobufs[SteamUser.EMsg.ClientNewLoginKey] = Schema.CMsgClientNewLoginKey;\r\nprotobufs[SteamUser.EMsg.ClientNewLoginKeyAccepted] = Schema.CMsgClientNewLoginKeyAccepted;\r\nprotobufs[SteamUser.EMsg.ClientRequestWebAPIAuthenticateUserNonce] = Schema.CMsgClientRequestWebAPIAuthenticateUserNonce;\r\nprotobufs[SteamUser.EMsg.ClientRequestWebAPIAuthenticateUserNonceResponse] = Schema.CMsgClientRequestWebAPIAuthenticateUserNonceResponse;\r\nprotobufs[SteamUser.EMsg.ClientItemAnnouncements] = Schema.CMsgClientItemAnnouncements;\r\nprotobufs[SteamUser.EMsg.ClientRequestItemAnnouncements] = Schema.CMsgClientRequestItemAnnouncements;\r\nprotobufs[SteamUser.EMsg.ClientCommentNotifications] = Schema.CMsgClientCommentNotifications;\r\nprotobufs[SteamUser.EMsg.ClientRequestCommentNotifications] = Schema.CMsgClientRequestCommentNotifications;\r\nprotobufs[SteamUser.EMsg.ClientUserNotifications] = Schema.CMsgClientUserNotifications;\r\nprotobufs[SteamUser.EMsg.ClientFSOfflineMessageNotification] = Schema.CMsgClientOfflineMessageNotification;\r\nprotobufs[SteamUser.EMsg.ClientFSRequestOfflineMessageCount] = Schema.CMsgClientRequestOfflineMessageCount;\r\nprotobufs[SteamUser.EMsg.ClientGamesPlayed] = Schema.CMsgClientGamesPlayed;\r\nprotobufs[SteamUser.EMsg.ClientAccountInfo] = Schema.CMsgClientAccountInfo;\r\nprotobufs[SteamUser.EMsg.ClientEmailAddrInfo] = Schema.CMsgClientEmailAddrInfo;\r\nprotobufs[SteamUser.EMsg.ClientIsLimitedAccount] = Schema.CMsgClientIsLimitedAccount;\r\nprotobufs[SteamUser.EMsg.ClientWalletInfoUpdate] = Schema.CMsgClientWalletInfoUpdate;\r\nprotobufs[SteamUser.EMsg.ClientLicenseList] = Schema.CMsgClientLicenseList;\r\nprotobufs[SteamUser.EMsg.ClientServiceMethod] = Schema.CMsgClientServiceMethod;\r\nprotobufs[SteamUser.EMsg.ClientServiceMethodResponse] = Schema.CMsgClientServiceMethodResponse;\r\nprotobufs[SteamUser.EMsg.ClientGMSServerQuery] = Schema.CMsgClientGMSServerQuery;\r\nprotobufs[SteamUser.EMsg.GMSClientServerQueryResponse] = Schema.CMsgGMSClientServerQueryResponse;\r\nprotobufs[SteamUser.EMsg.ClientPICSChangesSinceRequest] = Schema.CMsgClientPICSChangesSinceRequest;\r\nprotobufs[SteamUser.EMsg.ClientPICSChangesSinceResponse] = Schema.CMsgClientPICSChangesSinceResponse;\r\nprotobufs[SteamUser.EMsg.ClientPICSProductInfoRequest] = Schema.CMsgClientPICSProductInfoRequest;\r\nprotobufs[SteamUser.EMsg.ClientPICSProductInfoResponse] = Schema.CMsgClientPICSProductInfoResponse;\r\nprotobufs[SteamUser.EMsg.ClientPICSAccessTokenRequest] = Schema.CMsgClientPICSAccessTokenRequest;\r\nprotobufs[SteamUser.EMsg.ClientPICSAccessTokenResponse] = Schema.CMsgClientPICSAccessTokenResponse;\r\nprotobufs[SteamUser.EMsg.ClientCreateAccountProto] = Schema.CMsgClientCreateAccount;\r\nprotobufs[SteamUser.EMsg.ClientCreateAccountProtoResponse] = Schema.CMsgClientCreateAccountResponse;\r\nprotobufs[SteamUser.EMsg.EconTrading_InitiateTradeRequest] = Schema.CMsgTrading_InitiateTradeRequest;\r\nprotobufs[SteamUser.EMsg.EconTrading_InitiateTradeResponse] = Schema.CMsgTrading_InitiateTradeResponse;\r\nprotobufs[SteamUser.EMsg.EconTrading_CancelTradeRequest] = Schema.CMsgTrading_CancelTradeRequest;\r\nprotobufs[SteamUser.EMsg.EconTrading_InitiateTradeProposed] = Schema.CMsgTrading_InitiateTradeRequest;\r\nprotobufs[SteamUser.EMsg.EconTrading_InitiateTradeResult] = Schema.CMsgTrading_InitiateTradeResponse;\r\nprotobufs[SteamUser.EMsg.EconTrading_StartSession] = Schema.CMsgTrading_StartSession;\r\nprotobufs[SteamUser.EMsg.ClientChangeStatus] = Schema.CMsgClientChangeStatus;\r\nprotobufs[SteamUser.EMsg.ClientAddFriend] = Schema.CMsgClientAddFriend;\r\nprotobufs[SteamUser.EMsg.ClientAddFriendResponse] = Schema.CMsgClientAddFriendResponse;\r\nprotobufs[SteamUser.EMsg.ClientRemoveFriend] = Schema.CMsgClientRemoveFriend;\r\nprotobufs[SteamUser.EMsg.ClientFSGetFriendsSteamLevels] = Schema.CMsgClientFSGetFriendsSteamLevels;\r\nprotobufs[SteamUser.EMsg.ClientFSGetFriendsSteamLevelsResponse] = Schema.CMsgClientFSGetFriendsSteamLevelsResponse;\r\nprotobufs[SteamUser.EMsg.ClientPersonaState] = Schema.CMsgClientPersonaState;\r\nprotobufs[SteamUser.EMsg.ClientClanState] = Schema.CMsgClientClanState;\r\nprotobufs[SteamUser.EMsg.ClientFriendsList] = Schema.CMsgClientFriendsList;\r\nprotobufs[SteamUser.EMsg.ClientRequestFriendData] = Schema.CMsgClientRequestFriendData;\r\nprotobufs[SteamUser.EMsg.ClientFriendMsg] = Schema.CMsgClientFriendMsg;\r\nprotobufs[SteamUser.EMsg.ClientChatInvite] = Schema.CMsgClientChatInvite;\r\nprotobufs[SteamUser.EMsg.ClientFriendMsgIncoming] = Schema.CMsgClientFriendMsgIncoming;\r\nprotobufs[SteamUser.EMsg.ClientFriendMsgEchoToSender] = Schema.CMsgClientFriendMsgIncoming;\r\nprotobufs[SteamUser.EMsg.ClientFSGetFriendMessageHistory] = Schema.CMsgClientFSGetFriendMessageHistory;\r\nprotobufs[SteamUser.EMsg.ClientFSGetFriendMessageHistoryResponse] = Schema.CMsgClientFSGetFriendMessageHistoryResponse;\r\nprotobufs[SteamUser.EMsg.ClientFriendsGroupsList] = Schema.CMsgClientFriendsGroupsList;\r\nprotobufs[SteamUser.EMsg.ClientPlayerNicknameList] = Schema.CMsgClientPlayerNicknameList;\r\nprotobufs[SteamUser.EMsg.AMClientSetPlayerNickname] = Schema.CMsgClientSetPlayerNickname;\r\nprotobufs[SteamUser.EMsg.AMClientSetPlayerNicknameResponse] = Schema.CMsgClientSetPlayerNicknameResponse;\r\nprotobufs[SteamUser.EMsg.ClientRegisterKey] = Schema.CMsgClientRegisterKey;\r\nprotobufs[SteamUser.EMsg.ClientPurchaseResponse] = Schema.CMsgClientPurchaseResponse;\r\nprotobufs[SteamUser.EMsg.ClientRequestFreeLicense] = Schema.CMsgClientRequestFreeLicense;\r\nprotobufs[SteamUser.EMsg.ClientRequestFreeLicenseResponse] = Schema.CMsgClientRequestFreeLicenseResponse;\r\nprotobufs[SteamUser.EMsg.ClientGetNumberOfCurrentPlayersDP] = Schema.CMsgDPGetNumberOfCurrentPlayers;\r\nprotobufs[SteamUser.EMsg.ClientGetNumberOfCurrentPlayersDPResponse] = Schema.CMsgDPGetNumberOfCurrentPlayersResponse;\r\nprotobufs[SteamUser.EMsg.ClientGetAppOwnershipTicket] = Schema.CMsgClientGetAppOwnershipTicket;\r\nprotobufs[SteamUser.EMsg.ClientGetAppOwnershipTicketResponse] = Schema.CMsgClientGetAppOwnershipTicketResponse;\r\nprotobufs[SteamUser.EMsg.ClientGameConnectTokens] = Schema.CMsgClientGameConnectTokens;\r\nprotobufs[SteamUser.EMsg.ClientAuthList] = Schema.CMsgClientAuthList;\r\nprotobufs[SteamUser.EMsg.ClientAuthListAck] = Schema.CMsgClientAuthListAck;\r\nprotobufs[SteamUser.EMsg.ClientTicketAuthComplete] = Schema.CMsgClientTicketAuthComplete;\r\nprotobufs[SteamUser.EMsg.ClientRequestEncryptedAppTicket] = Schema.CMsgClientRequestEncryptedAppTicket;\r\nprotobufs[SteamUser.EMsg.ClientRequestEncryptedAppTicketResponse] = Schema.CMsgClientRequestEncryptedAppTicketResponse;\r\nprotobufs[SteamUser.EMsg.ClientCurrentUIMode] = Schema.CMsgClientUIMode;\r\nprotobufs[SteamUser.EMsg.ClientVanityURLChangedNotification] = Schema.CMsgClientVanityURLChangedNotification;\r\nprotobufs[SteamUser.EMsg.ClientAMGetPersonaNameHistory] = Schema.CMsgClientAMGetPersonaNameHistory;\r\nprotobufs[SteamUser.EMsg.ClientAMGetPersonaNameHistoryResponse] = Schema.CMsgClientAMGetPersonaNameHistoryResponse;\r\nprotobufs[SteamUser.EMsg.ClientUnlockStreaming] = Schema.CMsgAMUnlockStreaming;\r\nprotobufs[SteamUser.EMsg.ClientUnlockStreamingResponse] = Schema.CMsgAMUnlockStreamingResponse;\r\nprotobufs[SteamUser.EMsg.ClientEmailChange4] = Schema.CMsgClientEmailChange;\r\nprotobufs[SteamUser.EMsg.ClientEmailChangeResponse4] = Schema.CMsgClientEmailChangeResponse;\r\nprotobufs[SteamUser.EMsg.ClientServerList] = Schema.CMsgClientServerList;\r\nprotobufs[SteamUser.EMsg.ClientGetDepotDecryptionKey] = Schema.CMsgClientGetDepotDecryptionKey;\r\nprotobufs[SteamUser.EMsg.ClientGetDepotDecryptionKeyResponse] = Schema.CMsgClientGetDepotDecryptionKeyResponse;\r\nprotobufs[SteamUser.EMsg.ClientGetCDNAuthToken] = Schema.CMsgClientGetCDNAuthToken;\r\nprotobufs[SteamUser.EMsg.ClientGetCDNAuthTokenResponse] = Schema.CMsgClientGetCDNAuthTokenResponse;\r\nprotobufs[SteamUser.EMsg.ClientCheckAppBetaPassword] = Schema.CMsgClientCheckAppBetaPassword;\r\nprotobufs[SteamUser.EMsg.ClientCheckAppBetaPasswordResponse] = Schema.CMsgClientCheckAppBetaPasswordResponse;\r\n\r\n// Unified protobufs\r\nprotobufs['GameServers.GetServerList#1_Request'] = Schema.CGameServers_GetServerList_Request;\r\nprotobufs['GameServers.GetServerList#1_Response'] = Schema.CGameServers_GetServerList_Response;\r\nprotobufs['GameServers.GetServerSteamIDsByIP#1_Request'] = Schema.CGameServers_GetServerSteamIDsByIP_Request;\r\nprotobufs['GameServers.GetServerSteamIDsByIP#1_Response'] = Schema.CGameServers_IPsWithSteamIDs_Response;\r\nprotobufs['GameServers.GetServerIPsBySteamID#1_Request'] = Schema.CGameServers_GetServerIPsBySteamID_Request;\r\nprotobufs['GameServers.GetServerIPsBySteamID#1_Response'] = Schema.CGameServers_IPsWithSteamIDs_Response;\r\nprotobufs['TwoFactor.AddAuthenticator#1_Request'] = Schema.CTwoFactor_AddAuthenticator_Request;\r\nprotobufs['TwoFactor.AddAuthenticator#1_Response'] = Schema.CTwoFactor_AddAuthenticator_Response;\r\nprotobufs['TwoFactor.FinalizeAddAuthenticator#1_Request'] = Schema.CTwoFactor_FinalizeAddAuthenticator_Request;\r\nprotobufs['TwoFactor.FinalizeAddAuthenticator#1_Response'] = Schema.CTwoFactor_FinalizeAddAuthenticator_Response;\r\nprotobufs['TwoFactor.SendEmail#1_Request'] = Schema.CTwoFactor_SendEmail_Request;\r\nprotobufs['TwoFactor.SendEmail#1_Response'] = Schema.CTwoFactor_SendEmail_Response;\r\nprotobufs['TwoFactor.RemoveAuthenticator#1_Request'] = Schema.CTwoFactor_RemoveAuthenticator_Request;\r\nprotobufs['TwoFactor.RemoveAuthenticator#1_Response'] = Schema.CTwoFactor_RemoveAuthenticator_Response;\r\nprotobufs['Credentials.GetSteamGuardDetails#1_Request'] = Schema.CCredentials_GetSteamGuardDetails_Request;\r\nprotobufs['Credentials.GetSteamGuardDetails#1_Response'] = Schema.CCredentials_GetSteamGuardDetails_Response;\r\nprotobufs['Credentials.GetAccountAuthSecret#1_Request'] = Schema.CCredentials_GetAccountAuthSecret_Request;\r\nprotobufs['Credentials.GetAccountAuthSecret#1_Response'] = Schema.CCredentials_GetAccountAuthSecret_Response;\r\nprotobufs['Credentials.GetCredentialChangeTimeDetails#1_Request'] = Schema.CCredentials_LastCredentialChangeTime_Request;\r\nprotobufs['Credentials.GetCredentialChangeTimeDetails#1_Response'] = Schema.CCredentials_LastCredentialChangeTime_Response;\r\nprotobufs['PublishedFile.GetDetails#1_Request'] = Schema.CPublishedFile_GetDetails_Request;\r\nprotobufs['PublishedFile.GetDetails#1_Response'] = Schema.CPublishedFile_GetDetails_Response;\r\nprotobufs['Player.GetGameBadgeLevels#1_Request'] = Schema.CPlayer_GetGameBadgeLevels_Request;\r\nprotobufs['Player.GetGameBadgeLevels#1_Response'] = Schema.CPlayer_GetGameBadgeLevels_Response;\r\n\r\nByteBuffer.DEFAULT_ENDIAN = ByteBuffer.LITTLE_ENDIAN;\r\n\r\nSteamUser.prototype._send = function(emsg, body, callback) {\r\n\tif ((!this.steamID || !this.client.connected) && [SteamUser.EMsg.ChannelEncryptRequest, SteamUser.EMsg.ChannelEncryptResponse, SteamUser.EMsg.ChannelEncryptResult, SteamUser.EMsg.ClientLogon].indexOf(emsg) == -1) {\r\n\t\t// We're disconnected, drop it\r\n\t\tthis.emit('debug', 'Dropping message ' + emsg + ' because we\\'re not logged on.');\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar header = {\r\n\t\t\"msg\": emsg\r\n\t};\r\n\r\n\tvar Proto = protobufs[emsg];\r\n\tif (Proto) {\r\n\t\theader.proto = {};\r\n\t\tbody = new Proto(body).toBuffer();\r\n\t} else if (ByteBuffer.isByteBuffer(body)) {\r\n\t\tbody = body.toBuffer();\r\n\t}\r\n\r\n\tvar cb = null;\r\n\tif (callback) {\r\n\t\tcb = function(header, body) {\r\n\t\t\tif (protobufs[header.msg]) {\r\n\t\t\t\tbody = protobufs[header.msg].decode(body);\r\n\t\t\t} else {\r\n\t\t\t\tbody = ByteBuffer.wrap(body);\r\n\t\t\t}\r\n\r\n\t\t\tcallback(body);\r\n\t\t};\r\n\t}\r\n\r\n\tif (this.options.debug) {\r\n\t\tfor (var i in SteamUser.EMsg) {\r\n\t\t\tif (SteamUser.EMsg.hasOwnProperty(i) && SteamUser.EMsg[i] == emsg) {\r\n\t\t\t\temsg = i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tthis.emit('debug', 'Sending message: ' + emsg);\r\n\tthis.client.send(header, body, cb);\r\n};\r\n\r\nSteamUser.prototype._handleMessage = function(header, body, callback) {\r\n\tvar msgName = header.msg;\r\n\r\n\tif (this.options.debug) {\r\n\t\tfor (var i in SteamUser.EMsg) {\r\n\t\t\tif (SteamUser.EMsg.hasOwnProperty(i) && SteamUser.EMsg[i] == header.msg) {\r\n\t\t\t\tmsgName = i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (!this._handlers[header.msg]) {\r\n\t\tif (header.msg != SteamUser.EMsg.Multi) {\r\n\t\t\tthis.emit('debug', 'Unhandled message: ' + msgName);\r\n\t\t}\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (protobufs[header.msg]) {\r\n\t\tbody = protobufs[header.msg].decode(body);\r\n\t} else {\r\n\t\tbody = ByteBuffer.wrap(body);\r\n\t}\r\n\r\n\tthis.emit('debug', 'Handled message: ' + msgName);\r\n\r\n\tvar cb = null;\r\n\tif (callback) {\r\n\t\tcb = function(emsg, body) {\r\n\t\t\tvar header = {\"msg\": emsg};\r\n\r\n\t\t\tif (protobufs[emsg]) {\r\n\t\t\t\theader.proto = {};\r\n\t\t\t\tbody = new protobufs[emsg](body).toBuffer();\r\n\t\t\t}\r\n\r\n\t\t\tcallback(header, body);\r\n\t\t}\r\n\t}\r\n\r\n\tthis._handlers[header.msg].call(this, body, cb);\r\n};\r\n\r\nSteamUser.prototype._handlers = {};\r\n\r\n// Unified messages\r\n\r\nSteamUser.prototype._sendUnified = function(methodName, methodData, notification, callback) {\r\n\tvar cb;\r\n\tif (callback && protobufs[methodName + '_Response']) {\r\n\t\tcb = function(body) {\r\n\t\t\tvar Proto = protobufs[methodName + '_Response'];\r\n\t\t\tcallback(Proto.decode(body.serialized_method_response));\r\n\t\t};\r\n\t}\r\n\r\n\tvar Proto = protobufs[methodName + '_Request'];\r\n\tthis._send(SteamUser.EMsg.ClientServiceMethod, {\r\n\t\t\"method_name\": methodName,\r\n\t\t\"serialized_method\": new Proto(methodData).toBuffer(),\r\n\t\t\"is_notification\": notification\r\n\t}, cb);\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/components/notifications.js":"var SteamUser = require('../index.js');\r\nvar SteamID = require('steamid');\r\n\r\nSteamUser.prototype._requestNotifications = function() {\r\n\tthis._send(SteamUser.EMsg.ClientRequestItemAnnouncements, {});\r\n\tthis._send(SteamUser.EMsg.ClientRequestCommentNotifications, {});\r\n\tthis._send(SteamUser.EMsg.ClientFSRequestOfflineMessageCount, {});\r\n};\r\n\r\n// Handlers\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientItemAnnouncements] = function(body) {\r\n\tthis.emit('newItems', body.count_new_items);\r\n};\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientCommentNotifications] = function(body) {\r\n\tthis.emit('newComments', body.count_new_comments, body.count_new_comments_owner, body.count_new_comments_subscriptions);\r\n};\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientUserNotifications] = function(body) {\r\n\tvar self = this;\r\n\t(body.notifications || []).forEach(function(notification) {\r\n\t\tif (notification.user_notification_type == 1) {\r\n\t\t\tself.emit('tradeOffers', notification.count);\r\n\t\t}\r\n\t});\r\n};\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientFSOfflineMessageNotification] = function(body) {\r\n\tvar self = this;\r\n\tthis.emit('offlineMessages', body.offline_messages, (body.friends_with_offline_messages || []).map(function(accountid) {\r\n\t\tvar sid = new SteamID();\r\n\t\tsid.universe = self.steamID.universe;\r\n\t\tsid.type = SteamID.Type.INDIVIDUAL;\r\n\t\tsid.instance = SteamID.Instance.DESKTOP;\r\n\t\tsid.accountid = accountid;\r\n\t\treturn sid.toString();\r\n\t}));\r\n};\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientMarketingMessageUpdate2] = function(body) {\r\n\tvar time = body.readUint32();\r\n\tvar count = body.readUint32();\r\n\r\n\tvar messages = [];\r\n\r\n\tfor (var i = 0; i < count; i++) {\r\n\t\tbody.readUint32(); // Length of this submessage\r\n\r\n\t\tmessages.push({\r\n\t\t\t\"id\": body.readUint64().toString(),\r\n\t\t\t\"url\": body.readCString(),\r\n\t\t\t\"flags\": body.readUint32()\r\n\t\t});\r\n\t}\r\n\r\n\tthis.emit('marketingMessages', new Date(time * 1000), messages);\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/components/pubfiles.js":"var SteamUser = require('../index.js');\r\nvar SteamID = require('steamid');\r\n\r\nSteamUser.prototype.getPublishedFileDetails = function(ids, callback) {\r\n\tif (!(ids instanceof Array)) {\r\n\t\tids = [ids];\r\n\t}\r\n\r\n\tthis._sendUnified(\"PublishedFile.GetDetails#1\", {\r\n\t\t\"publishedfileids\": ids,\r\n\t\t\"includetags\": true,\r\n\t\t\"includeadditionalpreviews\": true,\r\n\t\t\"includechildren\": true,\r\n\t\t\"includekvtags\": true,\r\n\t\t\"includevotes\": true,\r\n\t\t\"includeforsaledata\": true,\r\n\t\t\"includemetadata\": true,\r\n\t\t\"language\": 0\r\n\t}, false, function(body) {\r\n\t\tvar results = {};\r\n\t\tvar invalidSid = SteamID.fromIndividualAccountID(0).getSteamID64();\r\n\r\n\t\t(body.publishedfiledetails || []).forEach(function(item) {\r\n\t\t\tif (!item.publishedfileid) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i in item) {\r\n\t\t\t\tif (item.hasOwnProperty(i) && item[i] && typeof item[i] === 'object' && item[i].constructor.name == 'Long') {\r\n\t\t\t\t\titem[i] = item[i].toString();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof item.creator === 'string' && item.creator != invalidSid) {\r\n\t\t\t\titem.creator = new SteamID(item.creator);\r\n\t\t\t} else {\r\n\t\t\t\titem.creator = null;\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof item.banner === 'string' && item.banner != invalidSid) {\r\n\t\t\t\titem.banner = new SteamID(item.banner);\r\n\t\t\t} else {\r\n\t\t\t\titem.banner = null;\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof item.incompatible_actor === 'string' && item.incompatible_actor != invalidSid) {\r\n\t\t\t\titem.incompatible_actor = new SteamID(item.incompatible_actor);\r\n\t\t\t} else {\r\n\t\t\t\titem.incompatible_actor = null;\r\n\t\t\t}\r\n\r\n\t\t\tvar tags = {};\r\n\t\t\t(item.kvtags || []).forEach(function(tag) {\r\n\t\t\t\ttags[tag.key] = tag.value;\r\n\t\t\t});\r\n\r\n\t\t\titem.kvtags = tags;\r\n\r\n\t\t\tresults[item.publishedfileid] = item;\r\n\t\t});\r\n\r\n\t\t// Send an `err` argument just in case we want to add one someday\r\n\t\tcallback(null, results);\r\n\t});\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/components/sentry.js":"var SteamUser = require('../index.js');\r\nvar fs = require('fs');\r\n\r\nSteamUser.prototype.setSentry = function(sentry) {\r\n\tthis._sentry = sentry;\r\n};\r\n\r\nSteamUser.prototype._getSentryFilename = function() {\r\n\tif (this.options.singleSentryfile) {\r\n\t\treturn 'sentry.bin';\r\n\t} else {\r\n\t\treturn 'sentry.' + this._logOnDetails.account_name + '.bin';\r\n\t}\r\n};\r\n\r\n// Handlers\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientUpdateMachineAuth] = function(body, callback) {\r\n\t// TODO: Handle partial updates\r\n\tif (this.storage) {\r\n\t\tthis.storage.writeFile(this._getSentryFilename(), body.bytes.toBuffer());\r\n\t}\r\n\r\n\tthis.emit('sentry', body.bytes.toBuffer());\r\n\r\n\t// Accept the sentry\r\n\tvar hash = require('crypto').createHash('sha1');\r\n\thash.update(body.bytes.toBuffer());\r\n\r\n\tcallback(SteamUser.EMsg.ClientUpdateMachineAuthResponse, {\r\n\t\t\"sha_file\": hash.digest()\r\n\t});\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/components/trading.js":"var SteamUser = require('../index.js');\r\nvar SteamID = require('steamid');\r\n\r\nSteamUser.prototype.trade = function(steamID) {\r\n\tif (typeof steamID === 'string') {\r\n\t\tsteamID = new SteamID(steamID);\r\n\t}\r\n\r\n\tthis._send(SteamUser.EMsg.EconTrading_InitiateTradeRequest, {\"other_steamid\": steamID.getSteamID64()});\r\n};\r\n\r\nSteamUser.prototype.cancelTradeRequest = function(steamID) {\r\n\tif (typeof steamID === 'string') {\r\n\t\tsteamID = new SteamID(steamID);\r\n\t}\r\n\r\n\tthis._send(SteamUser.EMsg.EconTrading_CancelTradeRequest, {\"other_steamid\": steamID.getSteamID64()});\r\n};\r\n\r\n// Handlers\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.EconTrading_InitiateTradeProposed] = function(body) {\r\n\tvar self = this;\r\n\tthis._emitIdEvent('tradeRequest', new SteamID(body.other_steamid.toString()), function(accept) {\r\n\t\tself._send(SteamUser.EMsg.EconTrading_InitiateTradeResponse, {\r\n\t\t\t\"trade_request_id\": body.trade_request_id,\r\n\t\t\t\"response\": accept ? SteamUser.EEconTradeResponse.Accepted : SteamUser.EEconTradeResponse.Declined\r\n\t\t});\r\n\t});\r\n};\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.EconTrading_InitiateTradeResult] = function(body) {\r\n\t// Is trade ID meaningful here?\r\n\tthis._emitIdEvent('tradeResponse', new SteamID(body.other_steamid.toString()), body.response, {\r\n\t\t\"steamguardRequiredDays\": body.steamguard_required_days,\r\n\t\t\"newDeviceCooldownDays\": body.new_device_cooldown_days,\r\n\t\t\"defaultPasswordResetProbationDays\": body.default_password_reset_probation_days,\r\n\t\t\"passwordResetProbationDays\": body.password_reset_probation_days,\r\n\t\t\"defaultEmailChangeProbationDays\": body.default_email_change_probation_days,\r\n\t\t\"emailChangeProbationDays\": body.email_change_probation_days\r\n\t});\r\n};\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.EconTrading_StartSession] = function(body) {\r\n\tthis._emitIdEvent('tradeStarted', new SteamID(body.other_steamid.toString()));\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/components/twofactor.js":"var SteamUser = require('../index.js');\r\nvar SteamTotp = require('steam-totp');\r\n\r\n/**\r\n * Start the process to enable TOTP two-factor authentication for your account\r\n * @param {function} callback - Called when an activation email has been sent. Params are status (an EResult), sharedSecret (a Buffer), and revocationCode (a string)\r\n */\r\nSteamUser.prototype.enableTwoFactor = function(callback) {\r\n\tvar self = this;\r\n\r\n\tthis._sendUnified(\"TwoFactor.AddAuthenticator#1\", {\r\n\t\t\"steamid\": self.steamID.getSteamID64(),\r\n\t\t\"authenticator_time\": Math.floor(Date.now() / 1000),\r\n\t\t\"authenticator_type\": 1,\r\n\t\t\"device_identifier\": SteamTotp.getDeviceID(self.steamID),\r\n\t\t\"sms_phone_id\": \"1\"\r\n\t}, false, function(body) {\r\n\t\tbody.shared_secret = body.shared_secret ? body.shared_secret.toBuffer().toString('base64') : null;\r\n\t\tbody.serial_number = body.serial_number ? body.serial_number.toString() : null;\r\n\t\tbody.server_time = body.server_time ? body.server_time.toString() : null;\r\n\t\tbody.identity_secret = body.identity_secret ? body.identity_secret.toBuffer().toString('base64') : null;\r\n\t\tbody.secret_1 = body.secret_1 ? body.secret_1.toBuffer().toString('base64') : null;\r\n\r\n\t\t// Delete all the null keys\r\n\t\tfor (var i in body) {\r\n\t\t\tif (body.hasOwnProperty(i) && body[i] === null) {\r\n\t\t\t\tdelete body[i];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcallback(body);\r\n\t});\r\n};\r\n\r\n/**\r\n * Finalize the process of enabling TOTP two-factor authentication\r\n * @param {Buffer} secret - Your shared secret\r\n * @param {string} activationCode - The activation code you got in your email\r\n * @param {function} callback - Called with a single Error argument, or null on success\r\n */\r\nSteamUser.prototype.finalizeTwoFactor = function(secret, activationCode, callback) {\r\n\tvar attemptsLeft = 30;\r\n\tvar diff = 0;\r\n\r\n\tvar self = this;\r\n\tSteamTotp.getTimeOffset(function(err, offset, latency) {\r\n\t\tif (err) {\r\n\t\t\tcallback(err);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tdiff = offset;\r\n\t\tfinalize();\r\n\t});\r\n\r\n\tfunction finalize() {\r\n\t\tvar code = SteamTotp.generateAuthCode(secret, diff);\r\n\r\n\t\tself._sendUnified(\"TwoFactor.FinalizeAddAuthenticator#1\", {\r\n\t\t\t\"steamid\": self.steamID.getSteamID64(),\r\n\t\t\t\"authenticator_code\": code,\r\n\t\t\t\"authenticator_time\": Math.floor(Date.now() / 1000),\r\n\t\t\t\"activation_code\": activationCode\r\n\t\t}, false, function(body) {\r\n\t\t\tif (body.server_time) {\r\n\t\t\t\tdiff = body.server_time.toNumber() - Math.floor(Date.now() / 1000);\r\n\t\t\t}\r\n\r\n\t\t\tif (body.status == 89) {\r\n\t\t\t\tcallback(new Error(\"Invalid activation code\"));\r\n\t\t\t} else if (!body.success) {\r\n\t\t\t\tcallback(new Error(\"Error \" + body.status));\r\n\t\t\t} else if (body.want_more) {\r\n\t\t\t\tattemptsLeft--;\r\n\t\t\t\tdiff += 30;\r\n\r\n\t\t\t\tfinalize();\r\n\t\t\t} else {\r\n\t\t\t\tcallback(null);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n};\r\n\r\n/**\r\n * Disable TOTP two-factor authentication and go back to regular Steam Guard emails.\r\n * @deprecated No longer works. Use node-steamcommunity instead: https://mckay.media/UnsG7\r\n */\r\nSteamUser.prototype.disableTwoFactor = function() {\r\n\tthrow new Error(\"This method no longer works. See https://mckay.media/UnsG7 for alternative.\");\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/components/utility.js":"var SteamUser = require('../index.js');\r\nvar SteamTotp = require('steam-totp');\r\n\r\nSteamUser.formatCurrency = function(amount, currency) {\r\n\tamount = amount.toFixed(2);\r\n\r\n\tif (!SteamUser.CurrencyData[currency]) {\r\n\t\treturn amount;\r\n\t}\r\n\r\n\tvar data = SteamUser.CurrencyData[currency];\r\n\r\n\tif (data.whole) {\r\n\t\tamount = amount.replace('.00', '');\r\n\t}\r\n\r\n\tif (data.commas) {\r\n\t\tamount = amount.replace('.', ',');\r\n\t}\r\n\r\n\treturn (data.prepend || '') + amount + (data.append || '');\r\n};\r\n\r\n/**\r\n * Same as emit() except the second argument (the first provided to the callback function) is a SteamID and will be appended to the event name with a hash.\r\n * @private\r\n */\r\nSteamUser.prototype._emitIdEvent = function() {\r\n\tthis.emit.apply(this, arguments);\r\n\targuments[0] += '#' + arguments[1].getSteamID64();\r\n\tthis.emit.apply(this, arguments);\r\n};\r\n\r\n/**\r\n * Generate a Steam-style TOTP authentication code.\r\n * @param {Buffer|string} secret - Your TOTP secret as a Buffer, hex string, or base64 string\r\n * @param {number} [timeOffset=0] - If you know how far off your clock is from the Steam servers, put the offset here in seconds\r\n * @returns {string}\r\n */\r\nSteamUser.generateAuthCode = SteamTotp.generateAuthCode;\r\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/components/webapi.js":"var SteamUser = require('../index.js');\r\nvar HTTP = require('http');\r\nvar HTTPS = require('https');\r\nvar TLS = require('tls');\r\nvar VDF = require('vdf');\r\nvar URL = require('url');\r\nvar Zlib = require('zlib');\r\n\r\nconst USER_AGENT = \"Valve/Steam HTTP Client 1.0\";\r\nconst HOSTNAME = \"api.steampowered.com\";\r\n\r\nSteamUser.prototype._apiRequest = function(httpMethod, iface, method, version, data, callback) {\r\n\tif (typeof data === 'function') {\r\n\t\tcallback = data;\r\n\t\tdata = {};\r\n\t}\r\n\r\n\thttpMethod = httpMethod.toUpperCase(); // just in case\r\n\r\n\t// Pad the version with zeroes to make it 4 digits long, because Valve\r\n\tversion = version.toString();\r\n\twhile (version.length < 4) {\r\n\t\tversion = '0' + version;\r\n\t}\r\n\r\n\tdata.format = \"vdf\"; // for parity with the Steam client\r\n\r\n\tvar query = buildQueryString(data);\r\n\tvar headers = getDefaultHeaders();\r\n\tvar path = \"/\" + iface + \"/\" + method + \"/v\" + version + \"/\";\r\n\r\n\tif (httpMethod == \"POST\") {\r\n\t\theaders['Content-Type'] = 'application/x-www-form-urlencoded';\r\n\t\theaders['Content-Length'] = Buffer.byteLength(query);\r\n\t} else {\r\n\t\tpath += \"?\" + query;\r\n\t}\r\n\r\n\tvar options = {\r\n\t\t\"hostname\": HOSTNAME,\r\n\t\t\"path\": path,\r\n\t\t\"method\": httpMethod,\r\n\t\t\"headers\": headers\r\n\t};\r\n\r\n\tif (this.client.localAddress || this.client._localAddress) {\r\n\t\toptions.localAddress = this.client.localAddress || this.client._localAddress;\r\n\t}\r\n\r\n\tif (this.client.httpProxy || this.client._httpProxy) {\r\n\t\toptions.agent = getProxyAgent(this.client.httpProxy || this.client._httpProxy);\r\n\t}\r\n\r\n\tvar self = this;\r\n\tvar req = HTTPS.request(options, function(res) {\r\n\t\tself.emit('debug', \"API \" + options.method + \" request to https://\" + HOSTNAME + path + \": \" + res.statusCode);\r\n\r\n\t\tif (res.statusCode != 200) {\r\n\t\t\tres.on('data', function() {}); // discard the response\r\n\t\t\tcallback(new Error(\"HTTP error \" + res.statusCode));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar responseData = \"\";\r\n\r\n\t\tvar stream = res;\r\n\t\tif (res.headers['content-encoding'] && res.headers['content-encoding'].toLowerCase() == 'gzip') {\r\n\t\t\tstream = Zlib.createGunzip();\r\n\t\t\tres.pipe(stream);\r\n\t\t}\r\n\r\n\t\tstream.on('data', function(data) {\r\n\t\t\tresponseData += data;\r\n\t\t});\r\n\r\n\t\tstream.on('end', function() {\r\n\t\t\ttry {\r\n\t\t\t\tresponseData = VDF.parse(responseData);\r\n\t\t\t} catch (ex) {\r\n\t\t\t\tcallback(ex);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tcallback(null, responseData);\r\n\t\t});\r\n\t});\r\n\r\n\treq.on('error', function(err) {\r\n\t\tcallback(err);\r\n\t});\r\n\r\n\treq.end(httpMethod == \"POST\" ? query : null);\r\n};\r\n\r\nfunction buildQueryString(data) {\r\n\t// We can't use the querystring module's encode because we want binary data to be completely percent-encoded\r\n\tvar str = \"\";\r\n\r\n\tfor (var i in data) {\r\n\t\tif (!data.hasOwnProperty(i)) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tstr += (str ? \"&\" : \"\") + i + \"=\";\r\n\r\n\t\tif (Buffer.isBuffer(data[i])) {\r\n\t\t\tstr += data[i].toString('hex').replace(/../g, '%$&');\r\n\t\t} else {\r\n\t\t\tstr += encodeURIComponent(data[i]);\r\n\t\t}\r\n\t}\r\n\r\n\treturn str;\r\n}\r\n\r\nfunction getDefaultHeaders() {\r\n\treturn {\r\n\t\t\"Accept\": \"text/html,*/*;q=0.9\",\r\n\t\t\"Accept-Encoding\": \"gzip,identity,*;q=0\",\r\n\t\t\"Accept-Charset\": \"ISO-8859-1,utf-8,*;q=0.7\",\r\n\t\t\"User-Agent\": USER_AGENT\r\n\t};\r\n}\r\n\r\nfunction getProxyAgent(proxyUrl) {\r\n\tvar agent = new HTTPS.Agent({\"keepAlive\": false});\r\n\r\n\tagent.createConnection = function(options, callback) {\r\n\t\tvar url = URL.parse(proxyUrl);\r\n\t\turl.method = 'CONNECT';\r\n\t\turl.path = options.host + ':' + options.port;\r\n\t\turl.localAddress = options.localAddress;\r\n\t\turl.localPort = options.localPort;\r\n\r\n\t\tif (url.auth) {\r\n\t\t\turl.headers = {\"Proxy-Authorization\": \"Basic \" + (new Buffer(url.auth, 'utf8')).toString('base64')};\r\n\t\t\tdelete url.auth;\r\n\t\t}\r\n\r\n\t\tvar finished = false;\r\n\t\tvar req = HTTP.request(url);\r\n\t\treq.end();\r\n\t\treq.setTimeout(2000);\r\n\r\n\t\treq.on('connect', function(res, socket, head) {\r\n\t\t\tif (finished) {\r\n\t\t\t\tsocket.end();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfinished = true;\r\n\t\t\treq.setTimeout(0);\r\n\r\n\t\t\tif (res.statusCode != 200) {\r\n\t\t\t\tcallback(new Error(\"HTTP CONNECT \" + res.statusCode + \" \" + res.statusMessage));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Upgrade this connection to TLS\r\n\t\t\tvar tlsSocket = TLS.connect({\r\n\t\t\t\t\"socket\": socket,\r\n\t\t\t\t\"servername\": options.host\r\n\t\t\t}, function() {\r\n\t\t\t\tif (!tlsSocket.authorized) {\r\n\t\t\t\t\tcallback(new Error(tlsSocket.authorizationError || \"Secure connection failed\"));\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcallback(null, tlsSocket);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treq.on('timeout', function() {\r\n\t\t\tif (finished) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfinished = true;\r\n\t\t\tcallback(new Error(\"Proxy connection timed out\"));\r\n\t\t});\r\n\r\n\t\treq.on('error', function(err) {\r\n\t\t\tif (finished) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfinished = true;\r\n\t\t\tcallback(err);\r\n\t\t});\r\n\t};\r\n\r\n\treturn agent;\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/components/web.js":"var SteamUser = require('../index.js');\r\nvar SteamID = require('steamid');\r\nvar Crypto = require('crypto');\r\nvar SteamCrypto = require('@doctormckay/steam-crypto');\r\n\r\nSteamUser.prototype.webLogOn = function() {\r\n\t// Verify logged on\r\n\tif (!this.steamID) {\r\n\t\tthrow new Error(\"Cannot log onto steamcommunity.com without first being connected to Steam network\");\r\n\t}\r\n\r\n\t// Verify not anonymous user\r\n\tif (this.steamID.type != SteamID.Type.INDIVIDUAL) {\r\n\t\tthrow new Error('Must not be anonymous user to use webLogOn (check to see you passed in valid credentials to logOn)')\r\n\t}\r\n\r\n\tthis._send(SteamUser.EMsg.ClientRequestWebAPIAuthenticateUserNonce, {});\r\n};\r\n\r\nSteamUser.prototype._webLogOn = function() {\r\n\t// Identical to webLogOn, except silently fails if not logged on\r\n\tif (!this.steamID || this.steamID.type != SteamID.Type.INDIVIDUAL) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tthis.webLogOn();\r\n};\r\n\r\nSteamUser.prototype._webAuthenticate = function(nonce) {\r\n\t// Encrypt the nonce. I don't know if the client uses HMAC IV here, but there's no harm in it...\r\n\tvar sessionKey = SteamCrypto.generateSessionKey();\r\n\tvar encryptedNonce = SteamCrypto.symmetricEncryptWithHmacIv(nonce, sessionKey.plain);\r\n\r\n\tvar data = {\r\n\t\t\"steamid\": this.steamID.toString(),\r\n\t\t\"sessionkey\": sessionKey.encrypted,\r\n\t\t\"encrypted_loginkey\": encryptedNonce\r\n\t};\r\n\r\n\tvar self = this;\r\n\r\n\tthis._apiRequest(\"POST\", \"ISteamUserAuth\", \"AuthenticateUser\", 1, data, function(err, res) {\r\n\t\tif (err) {\r\n\t\t\tself.emit('debug', 'Error in AuthenticateUser: ' + err.message);\r\n\t\t\tfail();\r\n\t\t} else if (!res.authenticateuser || !res.authenticateuser.token || !res.authenticateuser.tokensecure) {\r\n\t\t\tself.emit('debug', 'Error in AuthenticateUser: malformed response');\r\n\t\t\tfail();\r\n\t\t} else {\r\n\t\t\t// Generate a random sessionid (CSRF token)\r\n\t\t\tvar sessionid = Crypto.randomBytes(12).toString('hex');\r\n\t\t\tself.emit('webSession', sessionid, [\r\n\t\t\t\t'sessionid=' + sessionid,\r\n\t\t\t\t'steamLogin=' + res.authenticateuser.token,\r\n\t\t\t\t'steamLoginSecure=' + res.authenticateuser.tokensecure\r\n\t\t\t]);\r\n\t\t}\r\n\t});\r\n\r\n\tfunction fail() {\r\n\t\tif (self._webauthTimeout) {\r\n\t\t\tself._webauthTimeout = Math.min(self._webauthTimeout * 2, 50000);\r\n\t\t} else {\r\n\t\t\tself._webauthTimeout = 1000;\r\n\t\t}\r\n\r\n\t\tsetTimeout(self._webLogOn.bind(self), self._webauthTimeout);\r\n\t}\r\n};\r\n\r\n// Handlers\r\n\r\nSteamUser.prototype._handlers[SteamUser.EMsg.ClientRequestWebAPIAuthenticateUserNonceResponse] = function(body) {\r\n\tif (body.eresult != SteamUser.EResult.OK) {\r\n\t\tthis.emit('debug', 'Got response ' + body.eresult + ' from ClientRequestWebAPIAuthenticateUserNonceResponse, retrying');\r\n\t\tsetTimeout(this._webLogOn.bind(this), 500);\r\n\t} else {\r\n\t\tthis._webAuthenticate(body.webapi_authenticate_user_nonce);\r\n\t}\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EAccountFlags.js":"/**\n * @enum EAccountFlags\n */\nmodule.exports = {\n\t\"NormalUser\": 0,\n\t\"PersonaNameSet\": 1,\n\t\"Unbannable\": 2,\n\t\"PasswordSet\": 4,\n\t\"Support\": 8,\n\t\"Admin\": 16,\n\t\"Supervisor\": 32,\n\t\"AppEditor\": 64,\n\t\"HWIDSet\": 128,\n\t\"PersonalQASet\": 256,\n\t\"VacBeta\": 512,\n\t\"Debug\": 1024,\n\t\"Disabled\": 2048,\n\t\"LimitedUser\": 4096,\n\t\"LimitedUserForce\": 8192,\n\t\"EmailValidated\": 16384,\n\t\"MarketingTreatment\": 32768,\n\t\"OGGInviteOptOut\": 65536,\n\t\"ForcePasswordChange\": 131072,\n\t\"ForceEmailVerification\": 262144,\n\t\"LogonExtraSecurity\": 524288,\n\t\"LogonExtraSecurityDisabled\": 1048576,\n\t\"Steam2MigrationComplete\": 2097152,\n\t\"NeedLogs\": 4194304,\n\t\"Lockdown\": 8388608,\n\t\"MasterAppEditor\": 16777216,\n\t\"BannedFromWebAPI\": 33554432,\n\t\"ClansOnlyFromFriends\": 67108864,\n\t\"GlobalModerator\": 134217728,\n\t\"ParentalSettings\": 268435456,\n\t\"ThirdPartySupport\": 536870912,\n\t\"NeedsSSANextSteamLogon\": 1073741824,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"NormalUser\",\n\t\"1\": \"PersonaNameSet\",\n\t\"2\": \"Unbannable\",\n\t\"4\": \"PasswordSet\",\n\t\"8\": \"Support\",\n\t\"16\": \"Admin\",\n\t\"32\": \"Supervisor\",\n\t\"64\": \"AppEditor\",\n\t\"128\": \"HWIDSet\",\n\t\"256\": \"PersonalQASet\",\n\t\"512\": \"VacBeta\",\n\t\"1024\": \"Debug\",\n\t\"2048\": \"Disabled\",\n\t\"4096\": \"LimitedUser\",\n\t\"8192\": \"LimitedUserForce\",\n\t\"16384\": \"EmailValidated\",\n\t\"32768\": \"MarketingTreatment\",\n\t\"65536\": \"OGGInviteOptOut\",\n\t\"131072\": \"ForcePasswordChange\",\n\t\"262144\": \"ForceEmailVerification\",\n\t\"524288\": \"LogonExtraSecurity\",\n\t\"1048576\": \"LogonExtraSecurityDisabled\",\n\t\"2097152\": \"Steam2MigrationComplete\",\n\t\"4194304\": \"NeedLogs\",\n\t\"8388608\": \"Lockdown\",\n\t\"16777216\": \"MasterAppEditor\",\n\t\"33554432\": \"BannedFromWebAPI\",\n\t\"67108864\": \"ClansOnlyFromFriends\",\n\t\"134217728\": \"GlobalModerator\",\n\t\"268435456\": \"ParentalSettings\",\n\t\"536870912\": \"ThirdPartySupport\",\n\t\"1073741824\": \"NeedsSSANextSteamLogon\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EAccountType.js":"/**\n * @enum EAccountType\n */\nmodule.exports = {\n\t\"Invalid\": 0,\n\t\"Individual\": 1,\n\t\"Multiseat\": 2,\n\t\"GameServer\": 3,\n\t\"AnonGameServer\": 4,\n\t\"Pending\": 5,\n\t\"ContentServer\": 6,\n\t\"Clan\": 7,\n\t\"Chat\": 8,\n\t\"ConsoleUser\": 9,\n\t\"AnonUser\": 10,\n\t\"Max\": 11,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"Invalid\",\n\t\"1\": \"Individual\",\n\t\"2\": \"Multiseat\",\n\t\"3\": \"GameServer\",\n\t\"4\": \"AnonGameServer\",\n\t\"5\": \"Pending\",\n\t\"6\": \"ContentServer\",\n\t\"7\": \"Clan\",\n\t\"8\": \"Chat\",\n\t\"9\": \"ConsoleUser\",\n\t\"10\": \"AnonUser\",\n\t\"11\": \"Max\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EActivationCodeClass.js":"/**\n * @enum EActivationCodeClass\n */\nmodule.exports = {\n\t\"WonCDKey\": 0,\n\t\"ValveCDKey\": 1,\n\t\"Doom3CDKey\": 2,\n\t\"DBLookup\": 3,\n\t\"Steam2010Key\": 4,\n\t\"Max\": 5,\n\t\"Test\": 2147483647,\n\t\"Invalid\": 4294967295,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"WonCDKey\",\n\t\"1\": \"ValveCDKey\",\n\t\"2\": \"Doom3CDKey\",\n\t\"3\": \"DBLookup\",\n\t\"4\": \"Steam2010Key\",\n\t\"5\": \"Max\",\n\t\"2147483647\": \"Test\",\n\t\"4294967295\": \"Invalid\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EAppInfoSection.js":"/**\n * @enum EAppInfoSection\n */\nmodule.exports = {\n\t\"Unknown\": 0,\n\t\"All\": 1,\n\t\"First\": 2,\n\t\"Common\": 2,\n\t\"Extended\": 3,\n\t\"Config\": 4,\n\t\"Stats\": 5,\n\t\"Install\": 6,\n\t\"Depots\": 7,\n\t\"VAC\": 8, // obsolete\n\t\"VAC_UNUSED\": 8, // obsolete\n\t\"DRM\": 9, // obsolete\n\t\"DRM_UNUSED\": 9, // obsolete\n\t\"UFS\": 10,\n\t\"OGG\": 11,\n\t\"Items\": 12, // obsolete\n\t\"ItemsUNUSED\": 12, // obsolete\n\t\"Policies\": 13,\n\t\"SysReqs\": 14,\n\t\"Community\": 15,\n\t\"Store\": 16,\n\t\"Max\": 17,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"Unknown\",\n\t\"1\": \"All\",\n\t\"2\": \"Common\",\n\t\"3\": \"Extended\",\n\t\"4\": \"Config\",\n\t\"5\": \"Stats\",\n\t\"6\": \"Install\",\n\t\"7\": \"Depots\",\n\t\"8\": \"VAC_UNUSED\",\n\t\"9\": \"DRM_UNUSED\",\n\t\"10\": \"UFS\",\n\t\"11\": \"OGG\",\n\t\"12\": \"ItemsUNUSED\",\n\t\"13\": \"Policies\",\n\t\"14\": \"SysReqs\",\n\t\"15\": \"Community\",\n\t\"16\": \"Store\",\n\t\"17\": \"Max\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EAppUsageEvent.js":"/**\n * @enum EAppUsageEvent\n */\nmodule.exports = {\n\t\"GameLaunch\": 1,\n\t\"GameLaunchTrial\": 2,\n\t\"Media\": 3,\n\t\"PreloadStart\": 4,\n\t\"PreloadFinish\": 5,\n\t\"MarketingMessageView\": 6,\n\t\"InGameAdViewed\": 7,\n\t\"GameLaunchFreeWeekend\": 8,\n\n\t// Value-to-name mapping for convenience\n\t\"1\": \"GameLaunch\",\n\t\"2\": \"GameLaunchTrial\",\n\t\"3\": \"Media\",\n\t\"4\": \"PreloadStart\",\n\t\"5\": \"PreloadFinish\",\n\t\"6\": \"MarketingMessageView\",\n\t\"7\": \"InGameAdViewed\",\n\t\"8\": \"GameLaunchFreeWeekend\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EAuthSessionResponse.js":"/**\n * @enum EAuthSessionResponse\n */\nmodule.exports = {\n\t\"OK\": 0,\n\t\"UserNotConnectedToSteam\": 1,\n\t\"NoLicenseOrExpired\": 2,\n\t\"VACBanned\": 3,\n\t\"LoggedInElseWhere\": 4,\n\t\"VACCheckTimedOut\": 5,\n\t\"AuthTicketCanceled\": 6,\n\t\"AuthTicketInvalidAlreadyUsed\": 7,\n\t\"AuthTicketInvalid\": 8,\n\t\"PublisherIssuedBan\": 9,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"OK\",\n\t\"1\": \"UserNotConnectedToSteam\",\n\t\"2\": \"NoLicenseOrExpired\",\n\t\"3\": \"VACBanned\",\n\t\"4\": \"LoggedInElseWhere\",\n\t\"5\": \"VACCheckTimedOut\",\n\t\"6\": \"AuthTicketCanceled\",\n\t\"7\": \"AuthTicketInvalidAlreadyUsed\",\n\t\"8\": \"AuthTicketInvalid\",\n\t\"9\": \"PublisherIssuedBan\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EBillingType.js":"/**\n * @enum EBillingType\n */\nmodule.exports = {\n\t\"NoCost\": 0,\n\t\"BillOnceOnly\": 1,\n\t\"BillMonthly\": 2,\n\t\"ProofOfPrepurchaseOnly\": 3,\n\t\"GuestPass\": 4,\n\t\"HardwarePromo\": 5,\n\t\"Gift\": 6,\n\t\"AutoGrant\": 7,\n\t\"OEMTicket\": 8,\n\t\"RecurringOption\": 9,\n\t\"BillOnceOrCDKey\": 10,\n\t\"Repurchaseable\": 11,\n\t\"FreeOnDemand\": 12,\n\t\"Rental\": 13,\n\t\"NumBillingTypes\": 14,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"NoCost\",\n\t\"1\": \"BillOnceOnly\",\n\t\"2\": \"BillMonthly\",\n\t\"3\": \"ProofOfPrepurchaseOnly\",\n\t\"4\": \"GuestPass\",\n\t\"5\": \"HardwarePromo\",\n\t\"6\": \"Gift\",\n\t\"7\": \"AutoGrant\",\n\t\"8\": \"OEMTicket\",\n\t\"9\": \"RecurringOption\",\n\t\"10\": \"BillOnceOrCDKey\",\n\t\"11\": \"Repurchaseable\",\n\t\"12\": \"FreeOnDemand\",\n\t\"13\": \"Rental\",\n\t\"14\": \"NumBillingTypes\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EChatAction.js":"/**\n * @enum EChatAction\n */\nmodule.exports = {\n\t\"InviteChat\": 1,\n\t\"Kick\": 2,\n\t\"Ban\": 3,\n\t\"UnBan\": 4,\n\t\"StartVoiceSpeak\": 5,\n\t\"EndVoiceSpeak\": 6,\n\t\"LockChat\": 7,\n\t\"UnlockChat\": 8,\n\t\"CloseChat\": 9,\n\t\"SetJoinable\": 10,\n\t\"SetUnjoinable\": 11,\n\t\"SetOwner\": 12,\n\t\"SetInvisibleToFriends\": 13,\n\t\"SetVisibleToFriends\": 14,\n\t\"SetModerated\": 15,\n\t\"SetUnmoderated\": 16,\n\n\t// Value-to-name mapping for convenience\n\t\"1\": \"InviteChat\",\n\t\"2\": \"Kick\",\n\t\"3\": \"Ban\",\n\t\"4\": \"UnBan\",\n\t\"5\": \"StartVoiceSpeak\",\n\t\"6\": \"EndVoiceSpeak\",\n\t\"7\": \"LockChat\",\n\t\"8\": \"UnlockChat\",\n\t\"9\": \"CloseChat\",\n\t\"10\": \"SetJoinable\",\n\t\"11\": \"SetUnjoinable\",\n\t\"12\": \"SetOwner\",\n\t\"13\": \"SetInvisibleToFriends\",\n\t\"14\": \"SetVisibleToFriends\",\n\t\"15\": \"SetModerated\",\n\t\"16\": \"SetUnmoderated\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EChatActionResult.js":"/**\n * @enum EChatActionResult\n */\nmodule.exports = {\n\t\"Success\": 1,\n\t\"Error\": 2,\n\t\"NotPermitted\": 3,\n\t\"NotAllowedOnClanMember\": 4,\n\t\"NotAllowedOnBannedUser\": 5,\n\t\"NotAllowedOnChatOwner\": 6,\n\t\"NotAllowedOnSelf\": 7,\n\t\"ChatDoesntExist\": 8,\n\t\"ChatFull\": 9,\n\t\"VoiceSlotsFull\": 10,\n\n\t// Value-to-name mapping for convenience\n\t\"1\": \"Success\",\n\t\"2\": \"Error\",\n\t\"3\": \"NotPermitted\",\n\t\"4\": \"NotAllowedOnClanMember\",\n\t\"5\": \"NotAllowedOnBannedUser\",\n\t\"6\": \"NotAllowedOnChatOwner\",\n\t\"7\": \"NotAllowedOnSelf\",\n\t\"8\": \"ChatDoesntExist\",\n\t\"9\": \"ChatFull\",\n\t\"10\": \"VoiceSlotsFull\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EChatEntryType.js":"/**\n * @enum EChatEntryType\n */\nmodule.exports = {\n\t\"Invalid\": 0,\n\t\"ChatMsg\": 1,\n\t\"Typing\": 2,\n\t\"InviteGame\": 3,\n\t\"Emote\": 4, // obsolete \"No longer supported by clients\"\n\t\"LobbyGameStart\": 5, // obsolete \"Listen for LobbyGameCreated_t callback instead\"\n\t\"LeftConversation\": 6,\n\t\"Entered\": 7,\n\t\"WasKicked\": 8,\n\t\"WasBanned\": 9,\n\t\"Disconnected\": 10,\n\t\"HistoricalChat\": 11,\n\t\"Reserved1\": 12,\n\t\"Reserved2\": 13,\n\t\"LinkBlocked\": 14,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"Invalid\",\n\t\"1\": \"ChatMsg\",\n\t\"2\": \"Typing\",\n\t\"3\": \"InviteGame\",\n\t\"4\": \"Emote\",\n\t\"5\": \"LobbyGameStart\",\n\t\"6\": \"LeftConversation\",\n\t\"7\": \"Entered\",\n\t\"8\": \"WasKicked\",\n\t\"9\": \"WasBanned\",\n\t\"10\": \"Disconnected\",\n\t\"11\": \"HistoricalChat\",\n\t\"12\": \"Reserved1\",\n\t\"13\": \"Reserved2\",\n\t\"14\": \"LinkBlocked\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EChatFlags.js":"/**\n * @enum EChatFlags\n */\nmodule.exports = {\n\t\"Locked\": 1,\n\t\"InvisibleToFriends\": 2,\n\t\"Moderated\": 4,\n\t\"Unjoinable\": 8,\n\n\t// Value-to-name mapping for convenience\n\t\"1\": \"Locked\",\n\t\"2\": \"InvisibleToFriends\",\n\t\"4\": \"Moderated\",\n\t\"8\": \"Unjoinable\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EChatInfoType.js":"/**\n * @enum EChatInfoType\n */\nmodule.exports = {\n\t\"StateChange\": 1,\n\t\"InfoUpdate\": 2,\n\t\"MemberLimitChange\": 3,\n\n\t// Value-to-name mapping for convenience\n\t\"1\": \"StateChange\",\n\t\"2\": \"InfoUpdate\",\n\t\"3\": \"MemberLimitChange\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EChatMemberStateChange.js":"/**\n * @enum EChatMemberStateChange\n */\nmodule.exports = {\n\t\"Entered\": 1,\n\t\"Left\": 2,\n\t\"Disconnected\": 4,\n\t\"Kicked\": 8,\n\t\"Banned\": 16,\n\t\"VoiceSpeaking\": 4096,\n\t\"VoiceDoneSpeaking\": 8192,\n\n\t// Value-to-name mapping for convenience\n\t\"1\": \"Entered\",\n\t\"2\": \"Left\",\n\t\"4\": \"Disconnected\",\n\t\"8\": \"Kicked\",\n\t\"16\": \"Banned\",\n\t\"4096\": \"VoiceSpeaking\",\n\t\"8192\": \"VoiceDoneSpeaking\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EChatPermission.js":"/**\n * @enum EChatPermission\n */\nmodule.exports = {\n\t\"Close\": 1,\n\t\"Invite\": 2,\n\t\"Talk\": 8,\n\t\"Kick\": 16,\n\t\"Mute\": 32,\n\t\"SetMetadata\": 64,\n\t\"ChangePermissions\": 128,\n\t\"Ban\": 256,\n\t\"ChangeAccess\": 512,\n\t\"Mask\": 1019,\n\n\t// Value-to-name mapping for convenience\n\t\"1\": \"Close\",\n\t\"2\": \"Invite\",\n\t\"8\": \"Talk\",\n\t\"16\": \"Kick\",\n\t\"32\": \"Mute\",\n\t\"64\": \"SetMetadata\",\n\t\"128\": \"ChangePermissions\",\n\t\"256\": \"Ban\",\n\t\"512\": \"ChangeAccess\",\n\t\"1019\": \"Mask\",\n};\n\nmodule.exports.EveryoneNotInClanDefault = module.exports.Talk;\nmodule.exports.EveryoneDefault = module.exports.Talk | module.exports.Invite;\nmodule.exports.MemberDefault = module.exports.Ban | module.exports.Kick | module.exports.Talk | module.exports.Invite;\nmodule.exports.OfficerDefault = module.exports.Ban | module.exports.Kick | module.exports.Talk | module.exports.Invite;\nmodule.exports.OwnerDefault = module.exports.ChangeAccess | module.exports.Ban | module.exports.SetMetadata | module.exports.Mute | module.exports.Kick | module.exports.Talk | module.exports.Invite | module.exports.Close;\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EChatRoomEnterResponse.js":"/**\n * @enum EChatRoomEnterResponse\n */\nmodule.exports = {\n\t\"Success\": 1,\n\t\"DoesntExist\": 2,\n\t\"NotAllowed\": 3,\n\t\"Full\": 4,\n\t\"Error\": 5,\n\t\"Banned\": 6,\n\t\"Limited\": 7,\n\t\"ClanDisabled\": 8,\n\t\"CommunityBan\": 9,\n\t\"MemberBlockedYou\": 10,\n\t\"YouBlockedMember\": 11,\n\t\"NoRankingDataLobby\": 12, // obsolete\n\t\"NoRankingDataUser\": 13, // obsolete\n\t\"RankOutOfRange\": 14, // obsolete\n\n\t// Value-to-name mapping for convenience\n\t\"1\": \"Success\",\n\t\"2\": \"DoesntExist\",\n\t\"3\": \"NotAllowed\",\n\t\"4\": \"Full\",\n\t\"5\": \"Error\",\n\t\"6\": \"Banned\",\n\t\"7\": \"Limited\",\n\t\"8\": \"ClanDisabled\",\n\t\"9\": \"CommunityBan\",\n\t\"10\": \"MemberBlockedYou\",\n\t\"11\": \"YouBlockedMember\",\n\t\"12\": \"NoRankingDataLobby\",\n\t\"13\": \"NoRankingDataUser\",\n\t\"14\": \"RankOutOfRange\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EChatRoomType.js":"/**\n * @enum EChatRoomType\n */\nmodule.exports = {\n\t\"Friend\": 1,\n\t\"MUC\": 2,\n\t\"Lobby\": 3,\n\n\t// Value-to-name mapping for convenience\n\t\"1\": \"Friend\",\n\t\"2\": \"MUC\",\n\t\"3\": \"Lobby\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EClanPermission.js":"/**\n * @enum EClanPermission\n */\nmodule.exports = {\n\t\"Nobody\": 0,\n\t\"Owner\": 1,\n\t\"Officer\": 2,\n\t\"OwnerAndOfficer\": 3,\n\t\"Member\": 4,\n\t\"Moderator\": 8,\n\t\"OGGGameOwner\": 16,\n\t\"NonMember\": 128,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"Nobody\",\n\t\"1\": \"Owner\",\n\t\"2\": \"Officer\",\n\t\"3\": \"OwnerAndOfficer\",\n\t\"4\": \"Member\",\n\t\"8\": \"Moderator\",\n\t\"16\": \"OGGGameOwner\",\n\t\"128\": \"NonMember\",\n};\n\nmodule.exports.OwnerOfficerModerator = module.exports.Owner | module.exports.Officer | module.exports.Moderator;\nmodule.exports.AllMembers = module.exports.Owner | module.exports.Officer | module.exports.Moderator | module.exports.Member;\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EClanRank.js":"/**\n * @enum EClanRank\n */\nmodule.exports = {\n\t\"None\": 0,\n\t\"Owner\": 1,\n\t\"Officer\": 2,\n\t\"Member\": 3,\n\t\"Moderator\": 4,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"None\",\n\t\"1\": \"Owner\",\n\t\"2\": \"Officer\",\n\t\"3\": \"Member\",\n\t\"4\": \"Moderator\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EClanRelationship.js":"/**\n * @enum EClanRelationship\n */\nmodule.exports = {\n\t\"None\": 0,\n\t\"Blocked\": 1,\n\t\"Invited\": 2,\n\t\"Member\": 3,\n\t\"Kicked\": 4,\n\t\"KickAcknowledged\": 5,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"None\",\n\t\"1\": \"Blocked\",\n\t\"2\": \"Invited\",\n\t\"3\": \"Member\",\n\t\"4\": \"Kicked\",\n\t\"5\": \"KickAcknowledged\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EClientPersonaStateFlag.js":"/**\n * @enum EClientPersonaStateFlag\n */\nmodule.exports = {\n\t\"Status\": 1,\n\t\"PlayerName\": 2,\n\t\"QueryPort\": 4,\n\t\"SourceID\": 8,\n\t\"Presence\": 16,\n\t\"Metadata\": 32, // obsolete\n\t\"LastSeen\": 64,\n\t\"ClanInfo\": 128,\n\t\"GameExtraInfo\": 256,\n\t\"GameDataBlob\": 512,\n\t\"ClanTag\": 1024,\n\t\"Facebook\": 2048,\n\n\t// Value-to-name mapping for convenience\n\t\"1\": \"Status\",\n\t\"2\": \"PlayerName\",\n\t\"4\": \"QueryPort\",\n\t\"8\": \"SourceID\",\n\t\"16\": \"Presence\",\n\t\"32\": \"Metadata\",\n\t\"64\": \"LastSeen\",\n\t\"128\": \"ClanInfo\",\n\t\"256\": \"GameExtraInfo\",\n\t\"512\": \"GameDataBlob\",\n\t\"1024\": \"ClanTag\",\n\t\"2048\": \"Facebook\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EClientStatAggregateMethod.js":"/**\n * @enum EClientStatAggregateMethod\n */\nmodule.exports = {\n\t\"LatestOnly\": 0,\n\t\"Sum\": 1,\n\t\"Event\": 2,\n\t\"Scalar\": 3,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"LatestOnly\",\n\t\"1\": \"Sum\",\n\t\"2\": \"Event\",\n\t\"3\": \"Scalar\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EClientStat.js":"/**\n * @enum EClientStat\n */\nmodule.exports = {\n\t\"P2PConnectionsUDP\": 0,\n\t\"P2PConnectionsRelay\": 1,\n\t\"P2PGameConnections\": 2,\n\t\"P2PVoiceConnections\": 3,\n\t\"BytesDownloaded\": 4,\n\t\"Max\": 5,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"P2PConnectionsUDP\",\n\t\"1\": \"P2PConnectionsRelay\",\n\t\"2\": \"P2PGameConnections\",\n\t\"3\": \"P2PVoiceConnections\",\n\t\"4\": \"BytesDownloaded\",\n\t\"5\": \"Max\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EContentDownloadSourceType.js":"/**\n * @enum EContentDownloadSourceType\n */\nmodule.exports = {\n\t\"Invalid\": 0,\n\t\"CS\": 1,\n\t\"CDN\": 2,\n\t\"LCS\": 3,\n\t\"ProxyCache\": 4,\n\t\"LANPeer\": 5,\n\t\"Max\": 5,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"Invalid\",\n\t\"1\": \"CS\",\n\t\"2\": \"CDN\",\n\t\"3\": \"LCS\",\n\t\"4\": \"ProxyCache\",\n\t\"5\": \"Max\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/ECurrencyCode.js":"/**\n * @enum ECurrencyCode\n */\nmodule.exports = {\n\t\"Invalid\": 0,\n\t\"USD\": 1,\n\t\"GBP\": 2,\n\t\"EUR\": 3,\n\t\"CHF\": 4,\n\t\"RUB\": 5,\n\t\"PLN\": 6,\n\t\"BRL\": 7,\n\t\"JPY\": 8,\n\t\"NOK\": 9,\n\t\"IDR\": 10,\n\t\"MYR\": 11,\n\t\"PHP\": 12,\n\t\"SGD\": 13,\n\t\"THB\": 14,\n\t\"VND\": 15,\n\t\"KRW\": 16,\n\t\"TRY\": 17,\n\t\"UAH\": 18,\n\t\"MXN\": 19,\n\t\"CAD\": 20,\n\t\"AUD\": 21,\n\t\"NZD\": 22,\n\t\"CNY\": 23,\n\t\"INR\": 24,\n\t\"CLP\": 25,\n\t\"PEN\": 26,\n\t\"COP\": 27,\n\t\"ZAR\": 28,\n\t\"HKD\": 29,\n\t\"TWD\": 30,\n\t\"SAR\": 31,\n\t\"AED\": 32,\n\t\"SEK\": 33,\n\t\"Max\": 34,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"Invalid\",\n\t\"1\": \"USD\",\n\t\"2\": \"GBP\",\n\t\"3\": \"EUR\",\n\t\"4\": \"CHF\",\n\t\"5\": \"RUB\",\n\t\"6\": \"PLN\",\n\t\"7\": \"BRL\",\n\t\"8\": \"JPY\",\n\t\"9\": \"NOK\",\n\t\"10\": \"IDR\",\n\t\"11\": \"MYR\",\n\t\"12\": \"PHP\",\n\t\"13\": \"SGD\",\n\t\"14\": \"THB\",\n\t\"15\": \"VND\",\n\t\"16\": \"KRW\",\n\t\"17\": \"TRY\",\n\t\"18\": \"UAH\",\n\t\"19\": \"MXN\",\n\t\"20\": \"CAD\",\n\t\"21\": \"AUD\",\n\t\"22\": \"NZD\",\n\t\"23\": \"CNY\",\n\t\"24\": \"INR\",\n\t\"25\": \"CLP\",\n\t\"26\": \"PEN\",\n\t\"27\": \"COP\",\n\t\"28\": \"ZAR\",\n\t\"29\": \"HKD\",\n\t\"30\": \"TWD\",\n\t\"31\": \"SAR\",\n\t\"32\": \"AED\",\n\t\"33\": \"SEK\",\n\t\"34\": \"Max\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EDenyReason.js":"/**\n * @enum EDenyReason\n */\nmodule.exports = {\n\t\"InvalidVersion\": 1,\n\t\"Generic\": 2,\n\t\"NotLoggedOn\": 3,\n\t\"NoLicense\": 4,\n\t\"Cheater\": 5,\n\t\"LoggedInElseWhere\": 6,\n\t\"UnknownText\": 7,\n\t\"IncompatibleAnticheat\": 8,\n\t\"MemoryCorruption\": 9,\n\t\"IncompatibleSoftware\": 10,\n\t\"SteamConnectionLost\": 11,\n\t\"SteamConnectionError\": 12,\n\t\"SteamResponseTimedOut\": 13,\n\t\"SteamValidationStalled\": 14,\n\t\"SteamOwnerLeftGuestUser\": 15,\n\n\t// Value-to-name mapping for convenience\n\t\"1\": \"InvalidVersion\",\n\t\"2\": \"Generic\",\n\t\"3\": \"NotLoggedOn\",\n\t\"4\": \"NoLicense\",\n\t\"5\": \"Cheater\",\n\t\"6\": \"LoggedInElseWhere\",\n\t\"7\": \"UnknownText\",\n\t\"8\": \"IncompatibleAnticheat\",\n\t\"9\": \"MemoryCorruption\",\n\t\"10\": \"IncompatibleSoftware\",\n\t\"11\": \"SteamConnectionLost\",\n\t\"12\": \"SteamConnectionError\",\n\t\"13\": \"SteamResponseTimedOut\",\n\t\"14\": \"SteamValidationStalled\",\n\t\"15\": \"SteamOwnerLeftGuestUser\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EDepotFileFlag.js":"/**\n * @enum EDepotFileFlag\n */\nmodule.exports = {\n\t\"UserConfig\": 1,\n\t\"VersionedUserConfig\": 2,\n\t\"Encrypted\": 4,\n\t\"ReadOnly\": 8,\n\t\"Hidden\": 16,\n\t\"Executable\": 32,\n\t\"Directory\": 64,\n\t\"CustomExecutable\": 128,\n\t\"InstallScript\": 256,\n\t\"Symlink\": 512,\n\n\t// Value-to-name mapping for convenience\n\t\"1\": \"UserConfig\",\n\t\"2\": \"VersionedUserConfig\",\n\t\"4\": \"Encrypted\",\n\t\"8\": \"ReadOnly\",\n\t\"16\": \"Hidden\",\n\t\"32\": \"Executable\",\n\t\"64\": \"Directory\",\n\t\"128\": \"CustomExecutable\",\n\t\"256\": \"InstallScript\",\n\t\"512\": \"Symlink\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EDRMBlobDownloadErrorDetail.js":"/**\n * @enum EDRMBlobDownloadErrorDetail\n */\nmodule.exports = {\n\t\"None\": 0,\n\t\"DownloadFailed\": 1,\n\t\"TargetLocked\": 2,\n\t\"OpenZip\": 3,\n\t\"ReadZipDirectory\": 4,\n\t\"UnexpectedZipEntry\": 5,\n\t\"UnzipFullFile\": 6,\n\t\"UnknownBlobType\": 7,\n\t\"UnzipStrips\": 8,\n\t\"UnzipMergeGuid\": 9,\n\t\"UnzipSignature\": 10,\n\t\"ApplyStrips\": 11,\n\t\"ApplyMergeGuid\": 12,\n\t\"ApplySignature\": 13,\n\t\"AppIdMismatch\": 14,\n\t\"AppIdUnexpected\": 15,\n\t\"AppliedSignatureCorrupt\": 16,\n\t\"ApplyValveSignatureHeader\": 17,\n\t\"UnzipValveSignatureHeader\": 18,\n\t\"PathManipulationError\": 19,\n\t\"TargetLocked_Base\": 65536,\n\t\"TargetLocked_Max\": 131071,\n\t\"NextBase\": 131072,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"None\",\n\t\"1\": \"DownloadFailed\",\n\t\"2\": \"TargetLocked\",\n\t\"3\": \"OpenZip\",\n\t\"4\": \"ReadZipDirectory\",\n\t\"5\": \"UnexpectedZipEntry\",\n\t\"6\": \"UnzipFullFile\",\n\t\"7\": \"UnknownBlobType\",\n\t\"8\": \"UnzipStrips\",\n\t\"9\": \"UnzipMergeGuid\",\n\t\"10\": \"UnzipSignature\",\n\t\"11\": \"ApplyStrips\",\n\t\"12\": \"ApplyMergeGuid\",\n\t\"13\": \"ApplySignature\",\n\t\"14\": \"AppIdMismatch\",\n\t\"15\": \"AppIdUnexpected\",\n\t\"16\": \"AppliedSignatureCorrupt\",\n\t\"17\": \"ApplyValveSignatureHeader\",\n\t\"18\": \"UnzipValveSignatureHeader\",\n\t\"19\": \"PathManipulationError\",\n\t\"65536\": \"TargetLocked_Base\",\n\t\"131071\": \"TargetLocked_Max\",\n\t\"131072\": \"NextBase\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EDRMBlobDownloadType.js":"/**\n * @enum EDRMBlobDownloadType\n */\nmodule.exports = {\n\t\"Error\": 0,\n\t\"File\": 1,\n\t\"Parts\": 2,\n\t\"Compressed\": 4,\n\t\"AllMask\": 7,\n\t\"IsJob\": 8,\n\t\"HighPriority\": 16,\n\t\"AddTimestamp\": 32,\n\t\"LowPriority\": 64,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"Error\",\n\t\"1\": \"File\",\n\t\"2\": \"Parts\",\n\t\"4\": \"Compressed\",\n\t\"7\": \"AllMask\",\n\t\"8\": \"IsJob\",\n\t\"16\": \"HighPriority\",\n\t\"32\": \"AddTimestamp\",\n\t\"64\": \"LowPriority\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EEconTradeResponse.js":"/**\n * @enum EEconTradeResponse\n */\nmodule.exports = {\n\t\"Accepted\": 0,\n\t\"Declined\": 1,\n\t\"TradeBannedInitiator\": 2,\n\t\"TradeBannedTarget\": 3,\n\t\"TargetAlreadyTrading\": 4,\n\t\"Disabled\": 5,\n\t\"NotLoggedIn\": 6,\n\t\"Cancel\": 7,\n\t\"TooSoon\": 8,\n\t\"TooSoonPenalty\": 9,\n\t\"ConnectionFailed\": 10,\n\t\"AlreadyTrading\": 11,\n\t\"AlreadyHasTradeRequest\": 12,\n\t\"NoResponse\": 13,\n\t\"CyberCafeInitiator\": 14,\n\t\"CyberCafeTarget\": 15,\n\t\"SchoolLabInitiator\": 16,\n\t\"SchoolLabTarget\": 16,\n\t\"InitiatorBlockedTarget\": 18,\n\t\"InitiatorNeedsVerifiedEmail\": 20,\n\t\"InitiatorNeedsSteamGuard\": 21,\n\t\"TargetAccountCannotTrade\": 22,\n\t\"InitiatorSteamGuardDuration\": 23,\n\t\"InitiatorPasswordResetProbation\": 24,\n\t\"InitiatorNewDeviceCooldown\": 25,\n\t\"InitiatorSentInvalidCookie\": 26,\n\t\"NeedsEmailConfirmation\": 27,\n\t\"InitiatorRecentEmailChange\": 28,\n\t\"NeedsMobileConfirmation\": 29,\n\t\"TradingHoldForClearedTradeOffersInitiator\": 30,\n\t\"WouldExceedMaxAssetCount\": 31,\n\t\"OKToDeliver\": 50,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"Accepted\",\n\t\"1\": \"Declined\",\n\t\"2\": \"TradeBannedInitiator\",\n\t\"3\": \"TradeBannedTarget\",\n\t\"4\": \"TargetAlreadyTrading\",\n\t\"5\": \"Disabled\",\n\t\"6\": \"NotLoggedIn\",\n\t\"7\": \"Cancel\",\n\t\"8\": \"TooSoon\",\n\t\"9\": \"TooSoonPenalty\",\n\t\"10\": \"ConnectionFailed\",\n\t\"11\": \"AlreadyTrading\",\n\t\"12\": \"AlreadyHasTradeRequest\",\n\t\"13\": \"NoResponse\",\n\t\"14\": \"CyberCafeInitiator\",\n\t\"15\": \"CyberCafeTarget\",\n\t\"16\": \"SchoolLabTarget\",\n\t\"18\": \"InitiatorBlockedTarget\",\n\t\"20\": \"InitiatorNeedsVerifiedEmail\",\n\t\"21\": \"InitiatorNeedsSteamGuard\",\n\t\"22\": \"TargetAccountCannotTrade\",\n\t\"23\": \"InitiatorSteamGuardDuration\",\n\t\"24\": \"InitiatorPasswordResetProbation\",\n\t\"25\": \"InitiatorNewDeviceCooldown\",\n\t\"26\": \"InitiatorSentInvalidCookie\",\n\t\"27\": \"NeedsEmailConfirmation\",\n\t\"28\": \"InitiatorRecentEmailChange\",\n\t\"29\": \"NeedsMobileConfirmation\",\n\t\"30\": \"TradingHoldForClearedTradeOffersInitiator\",\n\t\"31\": \"WouldExceedMaxAssetCount\",\n\t\"50\": \"OKToDeliver\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EFriendFlags.js":"/**\n * @enum EFriendFlags\n */\nmodule.exports = {\n\t\"None\": 0,\n\t\"Blocked\": 1,\n\t\"FriendshipRequested\": 2,\n\t\"Immediate\": 4,\n\t\"ClanMember\": 8,\n\t\"OnGameServer\": 16,\n\t\"RequestingFriendship\": 128,\n\t\"RequestingInfo\": 256,\n\t\"Ignored\": 512,\n\t\"IgnoredFriend\": 1024,\n\t\"Suggested\": 2048,\n\t\"ChatMember\": 4096,\n\t\"FlagAll\": 65535,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"None\",\n\t\"1\": \"Blocked\",\n\t\"2\": \"FriendshipRequested\",\n\t\"4\": \"Immediate\",\n\t\"8\": \"ClanMember\",\n\t\"16\": \"OnGameServer\",\n\t\"128\": \"RequestingFriendship\",\n\t\"256\": \"RequestingInfo\",\n\t\"512\": \"Ignored\",\n\t\"1024\": \"IgnoredFriend\",\n\t\"2048\": \"Suggested\",\n\t\"4096\": \"ChatMember\",\n\t\"65535\": \"FlagAll\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EFriendRelationship.js":"/**\n * @enum EFriendRelationship\n */\nmodule.exports = {\n\t\"None\": 0,\n\t\"Blocked\": 1,\n\t\"RequestRecipient\": 2,\n\t\"Friend\": 3,\n\t\"RequestInitiator\": 4,\n\t\"Ignored\": 5,\n\t\"IgnoredFriend\": 6,\n\t\"SuggestedFriend\": 7,\n\t\"Max\": 8,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"None\",\n\t\"1\": \"Blocked\",\n\t\"2\": \"RequestRecipient\",\n\t\"3\": \"Friend\",\n\t\"4\": \"RequestInitiator\",\n\t\"5\": \"Ignored\",\n\t\"6\": \"IgnoredFriend\",\n\t\"7\": \"SuggestedFriend\",\n\t\"8\": \"Max\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EIntroducerRouting.js":"/**\n * @enum EIntroducerRouting\n */\nmodule.exports = {\n\t\"FileShare\": 0, // obsolete\n\t\"P2PVoiceChat\": 1,\n\t\"P2PNetworking\": 2,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"FileShare\",\n\t\"1\": \"P2PVoiceChat\",\n\t\"2\": \"P2PNetworking\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/ELeaderboardDataRequest.js":"/**\n * @enum ELeaderboardDataRequest\n */\nmodule.exports = {\n\t\"Global\": 0,\n\t\"GlobalAroundUser\": 1,\n\t\"Friends\": 2,\n\t\"Users\": 3,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"Global\",\n\t\"1\": \"GlobalAroundUser\",\n\t\"2\": \"Friends\",\n\t\"3\": \"Users\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/ELeaderboardDisplayType.js":"/**\n * @enum ELeaderboardDisplayType\n */\nmodule.exports = {\n\t\"None\": 0,\n\t\"Numeric\": 1,\n\t\"TimeSeconds\": 2,\n\t\"TimeMilliSeconds\": 3,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"None\",\n\t\"1\": \"Numeric\",\n\t\"2\": \"TimeSeconds\",\n\t\"3\": \"TimeMilliSeconds\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/ELeaderboardSortMethod.js":"/**\n * @enum ELeaderboardSortMethod\n */\nmodule.exports = {\n\t\"None\": 0,\n\t\"Ascending\": 1,\n\t\"Descending\": 2,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"None\",\n\t\"1\": \"Ascending\",\n\t\"2\": \"Descending\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/ELeaderboardUploadScoreMethod.js":"/**\n * @enum ELeaderboardUploadScoreMethod\n */\nmodule.exports = {\n\t\"None\": 0,\n\t\"KeepBest\": 1,\n\t\"ForceUpdate\": 2,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"None\",\n\t\"1\": \"KeepBest\",\n\t\"2\": \"ForceUpdate\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/ELicenseFlags.js":"/**\n * @enum ELicenseFlags\n */\nmodule.exports = {\n\t\"None\": 0,\n\t\"Renew\": 1,\n\t\"RenewalFailed\": 2,\n\t\"Pending\": 4,\n\t\"Expired\": 8,\n\t\"CancelledByUser\": 16,\n\t\"CancelledByAdmin\": 32,\n\t\"LowViolenceContent\": 64,\n\t\"ImportedFromSteam2\": 128,\n\t\"ForceRunRestriction\": 256,\n\t\"RegionRestrictionExpired\": 512,\n\t\"CancelledByFriendlyFraudLock\": 1024,\n\t\"NotActivated\": 2048,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"None\",\n\t\"1\": \"Renew\",\n\t\"2\": \"RenewalFailed\",\n\t\"4\": \"Pending\",\n\t\"8\": \"Expired\",\n\t\"16\": \"CancelledByUser\",\n\t\"32\": \"CancelledByAdmin\",\n\t\"64\": \"LowViolenceContent\",\n\t\"128\": \"ImportedFromSteam2\",\n\t\"256\": \"ForceRunRestriction\",\n\t\"512\": \"RegionRestrictionExpired\",\n\t\"1024\": \"CancelledByFriendlyFraudLock\",\n\t\"2048\": \"NotActivated\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/ELicenseType.js":"/**\n * @enum ELicenseType\n */\nmodule.exports = {\n\t\"NoLicense\": 0,\n\t\"SinglePurchase\": 1,\n\t\"SinglePurchaseLimitedUse\": 2,\n\t\"RecurringCharge\": 3,\n\t\"RecurringChargeLimitedUse\": 4,\n\t\"RecurringChargeLimitedUseWithOverages\": 5,\n\t\"RecurringOption\": 6,\n\t\"LimitedUseDelayedActivation\": 7,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"NoLicense\",\n\t\"1\": \"SinglePurchase\",\n\t\"2\": \"SinglePurchaseLimitedUse\",\n\t\"3\": \"RecurringCharge\",\n\t\"4\": \"RecurringChargeLimitedUse\",\n\t\"5\": \"RecurringChargeLimitedUseWithOverages\",\n\t\"6\": \"RecurringOption\",\n\t\"7\": \"LimitedUseDelayedActivation\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EMarketingMessageFlags.js":"/**\n * @enum EMarketingMessageFlags\n */\nmodule.exports = {\n\t\"None\": 0,\n\t\"HighPriority\": 1,\n\t\"PlatformWindows\": 2,\n\t\"PlatformMac\": 4,\n\t\"PlatformLinux\": 8,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"None\",\n\t\"1\": \"HighPriority\",\n\t\"2\": \"PlatformWindows\",\n\t\"4\": \"PlatformMac\",\n\t\"8\": \"PlatformLinux\",\n};\n\nmodule.exports.PlatformRestrictions = module.exports.PlatformWindows | module.exports.PlatformMac | module.exports.PlatformLinux;\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EMsg.js":"/**\n * @enum EMsg\n */\nmodule.exports = {\n\t\"Invalid\": 0,\n\t\"Multi\": 1,\n\t\"ProtobufWrapped\": 2,\n\t\"BaseGeneral\": 100,\n\t\"GenericReply\": 100,\n\t\"DestJobFailed\": 113,\n\t\"Alert\": 115,\n\t\"SCIDRequest\": 120,\n\t\"SCIDResponse\": 121,\n\t\"JobHeartbeat\": 123,\n\t\"HubConnect\": 124,\n\t\"Subscribe\": 126,\n\t\"RouteMessage\": 127, // obsolete\n\t\"RemoteSysID\": 128, // obsolete\n\t\"AMCreateAccountResponse\": 129,\n\t\"WGRequest\": 130,\n\t\"WGResponse\": 131,\n\t\"KeepAlive\": 132,\n\t\"WebAPIJobRequest\": 133,\n\t\"WebAPIJobResponse\": 134,\n\t\"ClientSessionStart\": 135,\n\t\"ClientSessionEnd\": 136,\n\t\"ClientSessionUpdateAuthTicket\": 137, // obsolete \"renamed to ClientSessionUpdate\"\n\t\"ClientSessionUpdate\": 137,\n\t\"StatsDeprecated\": 138, // obsolete\n\t\"Ping\": 139,\n\t\"PingResponse\": 140,\n\t\"Stats\": 141,\n\t\"RequestFullStatsBlock\": 142,\n\t\"LoadDBOCacheItem\": 143,\n\t\"LoadDBOCacheItemResponse\": 144,\n\t\"InvalidateDBOCacheItems\": 145,\n\t\"ServiceMethod\": 146,\n\t\"ServiceMethodResponse\": 147,\n\t\"ClientPackageVersions\": 148,\n\t\"TimestampRequest\": 149,\n\t\"TimestampResponse\": 150,\n\t\"BaseShell\": 200,\n\t\"AssignSysID\": 200,\n\t\"Exit\": 201,\n\t\"DirRequest\": 202,\n\t\"DirResponse\": 203,\n\t\"ZipRequest\": 204,\n\t\"ZipResponse\": 205,\n\t\"UpdateRecordResponse\": 215,\n\t\"UpdateCreditCardRequest\": 221,\n\t\"UpdateUserBanResponse\": 225,\n\t\"PrepareToExit\": 226,\n\t\"ContentDescriptionUpdate\": 227,\n\t\"TestResetServer\": 228,\n\t\"UniverseChanged\": 229,\n\t\"ShellConfigInfoUpdate\": 230,\n\t\"RequestWindowsEventLogEntries\": 233,\n\t\"ProvideWindowsEventLogEntries\": 234,\n\t\"ShellSearchLogs\": 235,\n\t\"ShellSearchLogsResponse\": 236,\n\t\"ShellCheckWindowsUpdates\": 237,\n\t\"ShellCheckWindowsUpdatesResponse\": 238,\n\t\"ShellFlushUserLicenseCache\": 239, // obsolete\n\t\"BaseGM\": 300,\n\t\"Heartbeat\": 300,\n\t\"ShellFailed\": 301,\n\t\"ExitShells\": 307,\n\t\"ExitShell\": 308,\n\t\"GracefulExitShell\": 309,\n\t\"NotifyWatchdog\": 314,\n\t\"LicenseProcessingComplete\": 316,\n\t\"SetTestFlag\": 317,\n\t\"QueuedEmailsComplete\": 318,\n\t\"GMReportPHPError\": 319,\n\t\"GMDRMSync\": 320,\n\t\"PhysicalBoxInventory\": 321,\n\t\"UpdateConfigFile\": 322,\n\t\"TestInitDB\": 323,\n\t\"GMWriteConfigToSQL\": 324,\n\t\"GMLoadActivationCodes\": 325,\n\t\"GMQueueForFBS\": 326,\n\t\"GMSchemaConversionResults\": 327,\n\t\"GMSchemaConversionResultsResponse\": 328, // obsolete\n\t\"GMWriteShellFailureToSQL\": 329,\n\t\"GMWriteStatsToSOS\": 330,\n\t\"GMGetServiceMethodRouting\": 331,\n\t\"GMGetServiceMethodRoutingResponse\": 332,\n\t\"GMConvertUserWallets\": 333,\n\t\"BaseAIS\": 400,\n\t\"AISRefreshContentDescription\": 401, // obsolete\n\t\"AISRequestContentDescription\": 402,\n\t\"AISUpdateAppInfo\": 403,\n\t\"AISUpdatePackageInfo\": 404, // obsolete \"renamed to AISUpdatePackageCosts\"\n\t\"AISUpdatePackageCosts\": 404,\n\t\"AISGetPackageChangeNumber\": 405,\n\t\"AISGetPackageChangeNumberResponse\": 406,\n\t\"AISAppInfoTableChanged\": 407, // obsolete\n\t\"AISUpdatePackageCostsResponse\": 408,\n\t\"AISCreateMarketingMessage\": 409,\n\t\"AISCreateMarketingMessageResponse\": 410,\n\t\"AISGetMarketingMessage\": 411,\n\t\"AISGetMarketingMessageResponse\": 412,\n\t\"AISUpdateMarketingMessage\": 413,\n\t\"AISUpdateMarketingMessageResponse\": 414,\n\t\"AISRequestMarketingMessageUpdate\": 415,\n\t\"AISDeleteMarketingMessage\": 416,\n\t\"AISGetMarketingTreatments\": 419, // obsolete\n\t\"AISGetMarketingTreatmentsResponse\": 420, // obsolete\n\t\"AISRequestMarketingTreatmentUpdate\": 421, // obsolete\n\t\"AISTestAddPackage\": 422, // obsolete\n\t\"AIGetAppGCFlags\": 423,\n\t\"AIGetAppGCFlagsResponse\": 424,\n\t\"AIGetAppList\": 425,\n\t\"AIGetAppListResponse\": 426,\n\t\"AIGetAppInfo\": 427, // obsolete\n\t\"AIGetAppInfoResponse\": 428, // obsolete\n\t\"AISGetCouponDefinition\": 429,\n\t\"AISGetCouponDefinitionResponse\": 430,\n\t\"AISUpdateSlaveContentDescription\": 431,\n\t\"AISUpdateSlaveContentDescriptionResponse\": 432,\n\t\"AISTestEnableGC\": 433,\n\t\"BaseAM\": 500,\n\t\"AMUpdateUserBanRequest\": 504,\n\t\"AMAddLicense\": 505,\n\t\"AMBeginProcessingLicenses\": 507, // obsolete\n\t\"AMSendSystemIMToUser\": 508,\n\t\"AMExtendLicense\": 509,\n\t\"AMAddMinutesToLicense\": 510,\n\t\"AMCancelLicense\": 511,\n\t\"AMInitPurchase\": 512,\n\t\"AMPurchaseResponse\": 513,\n\t\"AMGetFinalPrice\": 514,\n\t\"AMGetFinalPriceResponse\": 515,\n\t\"AMGetLegacyGameKey\": 516,\n\t\"AMGetLegacyGameKeyResponse\": 517,\n\t\"AMFindHungTransactions\": 518,\n\t\"AMSetAccountTrustedRequest\": 519,\n\t\"AMCompletePurchase\": 521,\n\t\"AMCancelPurchase\": 522,\n\t\"AMNewChallenge\": 523,\n\t\"AMLoadOEMTickets\": 524,\n\t\"AMFixPendingPurchase\": 525,\n\t\"AMFixPendingPurchaseResponse\": 526,\n\t\"AMIsUserBanned\": 527,\n\t\"AMRegisterKey\": 528,\n\t\"AMLoadActivationCodes\": 529,\n\t\"AMLoadActivationCodesResponse\": 530,\n\t\"AMLookupKeyResponse\": 531,\n\t\"AMLookupKey\": 532,\n\t\"AMChatCleanup\": 533,\n\t\"AMClanCleanup\": 534,\n\t\"AMFixPendingRefund\": 535,\n\t\"AMReverseChargeback\": 536,\n\t\"AMReverseChargebackResponse\": 537,\n\t\"AMClanCleanupList\": 538,\n\t\"AMGetLicenses\": 539,\n\t\"AMGetLicensesResponse\": 540,\n\t\"AllowUserToPlayQuery\": 550,\n\t\"AllowUserToPlayResponse\": 551,\n\t\"AMVerfiyUser\": 552,\n\t\"AMClientNotPlaying\": 553,\n\t\"ClientRequestFriendship\": 554,\n\t\"AMRelayPublishStatus\": 555,\n\t\"AMResetCommunityContent\": 556, // obsolete\n\t\"AMPrimePersonaStateCache\": 557, // obsolete\n\t\"AMAllowUserContentQuery\": 558, // obsolete\n\t\"AMAllowUserContentResponse\": 559, // obsolete\n\t\"AMInitPurchaseResponse\": 560,\n\t\"AMRevokePurchaseResponse\": 561,\n\t\"AMLockProfile\": 562, // obsolete\n\t\"AMRefreshGuestPasses\": 563,\n\t\"AMInviteUserToClan\": 564,\n\t\"AMAcknowledgeClanInvite\": 565,\n\t\"AMGrantGuestPasses\": 566,\n\t\"AMClanDataUpdated\": 567,\n\t\"AMReloadAccount\": 568,\n\t\"AMClientChatMsgRelay\": 569,\n\t\"AMChatMulti\": 570,\n\t\"AMClientChatInviteRelay\": 571,\n\t\"AMChatInvite\": 572,\n\t\"AMClientJoinChatRelay\": 573,\n\t\"AMClientChatMemberInfoRelay\": 574,\n\t\"AMPublishChatMemberInfo\": 575,\n\t\"AMClientAcceptFriendInvite\": 576,\n\t\"AMChatEnter\": 577,\n\t\"AMClientPublishRemovalFromSource\": 578,\n\t\"AMChatActionResult\": 579,\n\t\"AMFindAccounts\": 580,\n\t\"AMFindAccountsResponse\": 581,\n\t\"AMRequestAccountData\": 582,\n\t\"AMRequestAccountDataResponse\": 583,\n\t\"AMSetAccountFlags\": 584,\n\t\"AMCreateClan\": 586,\n\t\"AMCreateClanResponse\": 587,\n\t\"AMGetClanDetails\": 588,\n\t\"AMGetClanDetailsResponse\": 589,\n\t\"AMSetPersonaName\": 590,\n\t\"AMSetAvatar\": 591,\n\t\"AMAuthenticateUser\": 592,\n\t\"AMAuthenticateUserResponse\": 593,\n\t\"AMGetAccountFriendsCount\": 594, // obsolete\n\t\"AMGetAccountFriendsCountResponse\": 595, // obsolete\n\t\"AMP2PIntroducerMessage\": 596,\n\t\"ClientChatAction\": 597,\n\t\"AMClientChatActionRelay\": 598,\n\t\"BaseVS\": 600,\n\t\"ReqChallenge\": 600,\n\t\"VACResponse\": 601,\n\t\"ReqChallengeTest\": 602,\n\t\"VSMarkCheat\": 604,\n\t\"VSAddCheat\": 605,\n\t\"VSPurgeCodeModDB\": 606,\n\t\"VSGetChallengeResults\": 607,\n\t\"VSChallengeResultText\": 608,\n\t\"VSReportLingerer\": 609,\n\t\"VSRequestManagedChallenge\": 610,\n\t\"VSLoadDBFinished\": 611,\n\t\"BaseDRMS\": 625,\n\t\"DRMBuildBlobRequest\": 628,\n\t\"DRMBuildBlobResponse\": 629,\n\t\"DRMResolveGuidRequest\": 630,\n\t\"DRMResolveGuidResponse\": 631,\n\t\"DRMVariabilityReport\": 633,\n\t\"DRMVariabilityReportResponse\": 634,\n\t\"DRMStabilityReport\": 635,\n\t\"DRMStabilityReportResponse\": 636,\n\t\"DRMDetailsReportRequest\": 637,\n\t\"DRMDetailsReportResponse\": 638,\n\t\"DRMProcessFile\": 639,\n\t\"DRMAdminUpdate\": 640,\n\t\"DRMAdminUpdateResponse\": 641,\n\t\"DRMSync\": 642,\n\t\"DRMSyncResponse\": 643,\n\t\"DRMProcessFileResponse\": 644,\n\t\"DRMEmptyGuidCache\": 645,\n\t\"DRMEmptyGuidCacheResponse\": 646,\n\t\"BaseCS\": 650,\n\t\"CSUserContentRequest\": 652, // obsolete\n\t\"BaseClient\": 700,\n\t\"ClientLogOn_Deprecated\": 701, // obsolete\n\t\"ClientAnonLogOn_Deprecated\": 702, // obsolete\n\t\"ClientHeartBeat\": 703,\n\t\"ClientVACResponse\": 704,\n\t\"ClientGamesPlayed_obsolete\": 705, // obsolete\n\t\"ClientLogOff\": 706,\n\t\"ClientNoUDPConnectivity\": 707,\n\t\"ClientInformOfCreateAccount\": 708,\n\t\"ClientAckVACBan\": 709,\n\t\"ClientConnectionStats\": 710,\n\t\"ClientInitPurchase\": 711, // obsolete\n\t\"ClientPingResponse\": 712,\n\t\"ClientRemoveFriend\": 714,\n\t\"ClientGamesPlayedNoDataBlob\": 715,\n\t\"ClientChangeStatus\": 716,\n\t\"ClientVacStatusResponse\": 717,\n\t\"ClientFriendMsg\": 718,\n\t\"ClientGameConnect_obsolete\": 719, // obsolete\n\t\"ClientGamesPlayed2_obsolete\": 720, // obsolete\n\t\"ClientGameEnded_obsolete\": 721, // obsolete\n\t\"ClientGetFinalPrice\": 722, // obsolete\n\t\"ClientSystemIM\": 726,\n\t\"ClientSystemIMAck\": 727,\n\t\"ClientGetLicenses\": 728,\n\t\"ClientCancelLicense\": 729, // obsolete\n\t\"ClientGetLegacyGameKey\": 730,\n\t\"ClientContentServerLogOn_Deprecated\": 731, // obsolete\n\t\"ClientAckVACBan2\": 732,\n\t\"ClientAckMessageByGID\": 735, // obsolete\n\t\"ClientGetPurchaseReceipts\": 736,\n\t\"ClientAckPurchaseReceipt\": 737, // obsolete\n\t\"ClientGamesPlayed3_obsolete\": 738, // obsolete\n\t\"ClientSendGuestPass\": 739, // obsolete\n\t\"ClientAckGuestPass\": 740,\n\t\"ClientRedeemGuestPass\": 741,\n\t\"ClientGamesPlayed\": 742,\n\t\"ClientRegisterKey\": 743,\n\t\"ClientInviteUserToClan\": 744,\n\t\"ClientAcknowledgeClanInvite\": 745,\n\t\"ClientPurchaseWithMachineID\": 746,\n\t\"ClientAppUsageEvent\": 747,\n\t\"ClientGetGiftTargetList\": 748, // obsolete\n\t\"ClientGetGiftTargetListResponse\": 749, // obsolete\n\t\"ClientLogOnResponse\": 751,\n\t\"ClientVACChallenge\": 753,\n\t\"ClientSetHeartbeatRate\": 755,\n\t\"ClientNotLoggedOnDeprecated\": 756, // obsolete\n\t\"ClientLoggedOff\": 757,\n\t\"GSApprove\": 758,\n\t\"GSDeny\": 759,\n\t\"GSKick\": 760,\n\t\"ClientCreateAcctResponse\": 761,\n\t\"ClientPurchaseResponse\": 763,\n\t\"ClientPing\": 764,\n\t\"ClientNOP\": 765,\n\t\"ClientPersonaState\": 766,\n\t\"ClientFriendsList\": 767,\n\t\"ClientAccountInfo\": 768,\n\t\"ClientVacStatusQuery\": 770,\n\t\"ClientNewsUpdate\": 771,\n\t\"ClientGameConnectDeny\": 773,\n\t\"GSStatusReply\": 774,\n\t\"ClientGetFinalPriceResponse\": 775, // obsolete\n\t\"ClientGameConnectTokens\": 779,\n\t\"ClientLicenseList\": 780,\n\t\"ClientCancelLicenseResponse\": 781, // obsolete\n\t\"ClientVACBanStatus\": 782,\n\t\"ClientCMList\": 783,\n\t\"ClientEncryptPct\": 784,\n\t\"ClientGetLegacyGameKeyResponse\": 785,\n\t\"ClientFavoritesList\": 786, // obsolete\n\t\"CSUserContentApprove\": 787, // obsolete\n\t\"CSUserContentDeny\": 788, // obsolete\n\t\"ClientInitPurchaseResponse\": 789, // obsolete\n\t\"ClientAddFriend\": 791,\n\t\"ClientAddFriendResponse\": 792,\n\t\"ClientInviteFriend\": 793, // obsolete\n\t\"ClientInviteFriendResponse\": 794, // obsolete\n\t\"ClientSendGuestPassResponse\": 795, // obsolete\n\t\"ClientAckGuestPassResponse\": 796,\n\t\"ClientRedeemGuestPassResponse\": 797,\n\t\"ClientUpdateGuestPassesList\": 798,\n\t\"ClientChatMsg\": 799,\n\t\"ClientChatInvite\": 800,\n\t\"ClientJoinChat\": 801,\n\t\"ClientChatMemberInfo\": 802,\n\t\"ClientLogOnWithCredentials_Deprecated\": 803, // obsolete\n\t\"ClientPasswordChangeResponse\": 805,\n\t\"ClientChatEnter\": 807,\n\t\"ClientFriendRemovedFromSource\": 808,\n\t\"ClientCreateChat\": 809,\n\t\"ClientCreateChatResponse\": 810,\n\t\"ClientUpdateChatMetadata\": 811, // obsolete\n\t\"ClientP2PIntroducerMessage\": 813,\n\t\"ClientChatActionResult\": 814,\n\t\"ClientRequestFriendData\": 815,\n\t\"ClientGetUserStats\": 818,\n\t\"ClientGetUserStatsResponse\": 819,\n\t\"ClientStoreUserStats\": 820,\n\t\"ClientStoreUserStatsResponse\": 821,\n\t\"ClientClanState\": 822,\n\t\"ClientServiceModule\": 830,\n\t\"ClientServiceCall\": 831,\n\t\"ClientServiceCallResponse\": 832,\n\t\"ClientPackageInfoRequest\": 833,\n\t\"ClientPackageInfoResponse\": 834,\n\t\"ClientNatTraversalStatEvent\": 839,\n\t\"ClientAppInfoRequest\": 840,\n\t\"ClientAppInfoResponse\": 841,\n\t\"ClientSteamUsageEvent\": 842,\n\t\"ClientCheckPassword\": 845,\n\t\"ClientResetPassword\": 846,\n\t\"ClientCheckPasswordResponse\": 848,\n\t\"ClientResetPasswordResponse\": 849,\n\t\"ClientSessionToken\": 850,\n\t\"ClientDRMProblemReport\": 851,\n\t\"ClientSetIgnoreFriend\": 855,\n\t\"ClientSetIgnoreFriendResponse\": 856,\n\t\"ClientGetAppOwnershipTicket\": 857,\n\t\"ClientGetAppOwnershipTicketResponse\": 858,\n\t\"ClientGetLobbyListResponse\": 860,\n\t\"ClientGetLobbyMetadata\": 861, // obsolete\n\t\"ClientGetLobbyMetadataResponse\": 862, // obsolete\n\t\"ClientVTTCert\": 863,\n\t\"ClientAppInfoUpdate\": 866,\n\t\"ClientAppInfoChanges\": 867,\n\t\"ClientServerList\": 880,\n\t\"ClientEmailChangeResponse\": 891,\n\t\"ClientSecretQAChangeResponse\": 892,\n\t\"ClientDRMBlobRequest\": 896,\n\t\"ClientDRMBlobResponse\": 897,\n\t\"ClientLookupKey\": 898, // obsolete\n\t\"ClientLookupKeyResponse\": 899, // obsolete\n\t\"BaseGameServer\": 900,\n\t\"GSDisconnectNotice\": 901,\n\t\"GSStatus\": 903,\n\t\"GSUserPlaying\": 905,\n\t\"GSStatus2\": 906,\n\t\"GSStatusUpdate_Unused\": 907,\n\t\"GSServerType\": 908,\n\t\"GSPlayerList\": 909,\n\t\"GSGetUserAchievementStatus\": 910,\n\t\"GSGetUserAchievementStatusResponse\": 911,\n\t\"GSGetPlayStats\": 918,\n\t\"GSGetPlayStatsResponse\": 919,\n\t\"GSGetUserGroupStatus\": 920,\n\t\"AMGetUserGroupStatus\": 921,\n\t\"AMGetUserGroupStatusResponse\": 922,\n\t\"GSGetUserGroupStatusResponse\": 923,\n\t\"GSGetReputation\": 936,\n\t\"GSGetReputationResponse\": 937,\n\t\"GSAssociateWithClan\": 938,\n\t\"GSAssociateWithClanResponse\": 939,\n\t\"GSComputeNewPlayerCompatibility\": 940,\n\t\"GSComputeNewPlayerCompatibilityResponse\": 941,\n\t\"BaseAdmin\": 1000,\n\t\"AdminCmd\": 1000,\n\t\"AdminCmdResponse\": 1004,\n\t\"AdminLogListenRequest\": 1005,\n\t\"AdminLogEvent\": 1006,\n\t\"LogSearchRequest\": 1007, // obsolete\n\t\"LogSearchResponse\": 1008, // obsolete\n\t\"LogSearchCancel\": 1009, // obsolete\n\t\"UniverseData\": 1010,\n\t\"RequestStatHistory\": 1014, // obsolete\n\t\"StatHistory\": 1015, // obsolete\n\t\"AdminPwLogon\": 1017, // obsolete\n\t\"AdminPwLogonResponse\": 1018, // obsolete\n\t\"AdminSpew\": 1019,\n\t\"AdminConsoleTitle\": 1020,\n\t\"AdminGCSpew\": 1023,\n\t\"AdminGCCommand\": 1024,\n\t\"AdminGCGetCommandList\": 1025,\n\t\"AdminGCGetCommandListResponse\": 1026,\n\t\"FBSConnectionData\": 1027,\n\t\"AdminMsgSpew\": 1028,\n\t\"BaseFBS\": 1100,\n\t\"FBSReqVersion\": 1100,\n\t\"FBSVersionInfo\": 1101,\n\t\"FBSForceRefresh\": 1102,\n\t\"FBSForceBounce\": 1103,\n\t\"FBSDeployPackage\": 1104,\n\t\"FBSDeployResponse\": 1105,\n\t\"FBSUpdateBootstrapper\": 1106,\n\t\"FBSSetState\": 1107,\n\t\"FBSApplyOSUpdates\": 1108,\n\t\"FBSRunCMDScript\": 1109,\n\t\"FBSRebootBox\": 1110,\n\t\"FBSSetBigBrotherMode\": 1111,\n\t\"FBSMinidumpServer\": 1112,\n\t\"FBSSetShellCount_obsolete\": 1113, // obsolete\n\t\"FBSDeployHotFixPackage\": 1114,\n\t\"FBSDeployHotFixResponse\": 1115,\n\t\"FBSDownloadHotFix\": 1116,\n\t\"FBSDownloadHotFixResponse\": 1117,\n\t\"FBSUpdateTargetConfigFile\": 1118,\n\t\"FBSApplyAccountCred\": 1119,\n\t\"FBSApplyAccountCredResponse\": 1120,\n\t\"FBSSetShellCount\": 1121,\n\t\"FBSTerminateShell\": 1122,\n\t\"FBSQueryGMForRequest\": 1123,\n\t\"FBSQueryGMResponse\": 1124,\n\t\"FBSTerminateZombies\": 1125,\n\t\"FBSInfoFromBootstrapper\": 1126,\n\t\"FBSRebootBoxResponse\": 1127,\n\t\"FBSBootstrapperPackageRequest\": 1128,\n\t\"FBSBootstrapperPackageResponse\": 1129,\n\t\"FBSBootstrapperGetPackageChunk\": 1130,\n\t\"FBSBootstrapperGetPackageChunkResponse\": 1131,\n\t\"FBSBootstrapperPackageTransferProgress\": 1132,\n\t\"FBSRestartBootstrapper\": 1133,\n\t\"BaseFileXfer\": 1200,\n\t\"FileXferRequest\": 1200,\n\t\"FileXferResponse\": 1201,\n\t\"FileXferData\": 1202,\n\t\"FileXferEnd\": 1203,\n\t\"FileXferDataAck\": 1204,\n\t\"BaseChannelAuth\": 1300,\n\t\"ChannelAuthChallenge\": 1300,\n\t\"ChannelAuthResponse\": 1301,\n\t\"ChannelAuthResult\": 1302,\n\t\"ChannelEncryptRequest\": 1303,\n\t\"ChannelEncryptResponse\": 1304,\n\t\"ChannelEncryptResult\": 1305,\n\t\"BaseBS\": 1400,\n\t\"BSPurchaseStart\": 1401,\n\t\"BSPurchaseResponse\": 1402, // obsolete\n\t\"BSSettleNOVA\": 1404, // obsolete\n\t\"BSSettleComplete\": 1406,\n\t\"BSBannedRequest\": 1407, // obsolete\n\t\"BSInitPayPalTxn\": 1408,\n\t\"BSInitPayPalTxnResponse\": 1409,\n\t\"BSGetPayPalUserInfo\": 1410,\n\t\"BSGetPayPalUserInfoResponse\": 1411,\n\t\"BSRefundTxn\": 1413, // obsolete\n\t\"BSRefundTxnResponse\": 1414, // obsolete\n\t\"BSGetEvents\": 1415, // obsolete\n\t\"BSChaseRFRRequest\": 1416, // obsolete\n\t\"BSPaymentInstrBan\": 1417,\n\t\"BSPaymentInstrBanResponse\": 1418,\n\t\"BSProcessGCReports\": 1419, // obsolete\n\t\"BSProcessPPReports\": 1420, // obsolete\n\t\"BSInitGCBankXferTxn\": 1421,\n\t\"BSInitGCBankXferTxnResponse\": 1422,\n\t\"BSQueryGCBankXferTxn\": 1423, // obsolete\n\t\"BSQueryGCBankXferTxnResponse\": 1424, // obsolete\n\t\"BSCommitGCTxn\": 1425,\n\t\"BSQueryTransactionStatus\": 1426,\n\t\"BSQueryTransactionStatusResponse\": 1427,\n\t\"BSQueryCBOrderStatus\": 1428, // obsolete\n\t\"BSQueryCBOrderStatusResponse\": 1429, // obsolete\n\t\"BSRunRedFlagReport\": 1430, // obsolete\n\t\"BSQueryPaymentInstUsage\": 1431,\n\t\"BSQueryPaymentInstResponse\": 1432,\n\t\"BSQueryTxnExtendedInfo\": 1433,\n\t\"BSQueryTxnExtendedInfoResponse\": 1434,\n\t\"BSUpdateConversionRates\": 1435,\n\t\"BSProcessUSBankReports\": 1436, // obsolete\n\t\"BSPurchaseRunFraudChecks\": 1437,\n\t\"BSPurchaseRunFraudChecksResponse\": 1438,\n\t\"BSStartShippingJobs\": 1439, // obsolete\n\t\"BSQueryBankInformation\": 1440,\n\t\"BSQueryBankInformationResponse\": 1441,\n\t\"BSValidateXsollaSignature\": 1445,\n\t\"BSValidateXsollaSignatureResponse\": 1446,\n\t\"BSQiwiWalletInvoice\": 1448,\n\t\"BSQiwiWalletInvoiceResponse\": 1449,\n\t\"BSUpdateInventoryFromProPack\": 1450,\n\t\"BSUpdateInventoryFromProPackResponse\": 1451,\n\t\"BSSendShippingRequest\": 1452,\n\t\"BSSendShippingRequestResponse\": 1453,\n\t\"BSGetProPackOrderStatus\": 1454,\n\t\"BSGetProPackOrderStatusResponse\": 1455,\n\t\"BSCheckJobRunning\": 1456,\n\t\"BSCheckJobRunningResponse\": 1457,\n\t\"BSResetPackagePurchaseRateLimit\": 1458,\n\t\"BSResetPackagePurchaseRateLimitResponse\": 1459,\n\t\"BSUpdatePaymentData\": 1460,\n\t\"BSUpdatePaymentDataResponse\": 1461,\n\t\"BSGetBillingAddress\": 1462,\n\t\"BSGetBillingAddressResponse\": 1463,\n\t\"BSGetCreditCardInfo\": 1464,\n\t\"BSGetCreditCardInfoResponse\": 1465,\n\t\"BSRemoveExpiredPaymentData\": 1468,\n\t\"BSRemoveExpiredPaymentDataResponse\": 1469,\n\t\"BSConvertToCurrentKeys\": 1470,\n\t\"BSConvertToCurrentKeysResponse\": 1471,\n\t\"BSInitPurchase\": 1472,\n\t\"BSInitPurchaseResponse\": 1473,\n\t\"BSCompletePurchase\": 1474,\n\t\"BSCompletePurchaseResponse\": 1475,\n\t\"BSPruneCardUsageStats\": 1476,\n\t\"BSPruneCardUsageStatsResponse\": 1477,\n\t\"BSStoreBankInformation\": 1478,\n\t\"BSStoreBankInformationResponse\": 1479,\n\t\"BSVerifyPOSAKey\": 1480,\n\t\"BSVerifyPOSAKeyResponse\": 1481,\n\t\"BSReverseRedeemPOSAKey\": 1482,\n\t\"BSReverseRedeemPOSAKeyResponse\": 1483,\n\t\"BSQueryFindCreditCard\": 1484,\n\t\"BSQueryFindCreditCardResponse\": 1485,\n\t\"BSStatusInquiryPOSAKey\": 1486,\n\t\"BSStatusInquiryPOSAKeyResponse\": 1487,\n\t\"BSValidateMoPaySignature\": 1488,\n\t\"BSValidateMoPaySignatureResponse\": 1489,\n\t\"BSMoPayConfirmProductDelivery\": 1490,\n\t\"BSMoPayConfirmProductDeliveryResponse\": 1491,\n\t\"BSGenerateMoPayMD5\": 1492,\n\t\"BSGenerateMoPayMD5Response\": 1493,\n\t\"BSBoaCompraConfirmProductDelivery\": 1494,\n\t\"BSBoaCompraConfirmProductDeliveryResponse\": 1495,\n\t\"BSGenerateBoaCompraMD5\": 1496,\n\t\"BSGenerateBoaCompraMD5Response\": 1497,\n\t\"BSCommitWPTxn\": 1498,\n\t\"BaseATS\": 1500,\n\t\"ATSStartStressTest\": 1501,\n\t\"ATSStopStressTest\": 1502,\n\t\"ATSRunFailServerTest\": 1503,\n\t\"ATSUFSPerfTestTask\": 1504,\n\t\"ATSUFSPerfTestResponse\": 1505,\n\t\"ATSCycleTCM\": 1506,\n\t\"ATSInitDRMSStressTest\": 1507,\n\t\"ATSCallTest\": 1508,\n\t\"ATSCallTestReply\": 1509,\n\t\"ATSStartExternalStress\": 1510,\n\t\"ATSExternalStressJobStart\": 1511,\n\t\"ATSExternalStressJobQueued\": 1512,\n\t\"ATSExternalStressJobRunning\": 1513,\n\t\"ATSExternalStressJobStopped\": 1514,\n\t\"ATSExternalStressJobStopAll\": 1515,\n\t\"ATSExternalStressActionResult\": 1516,\n\t\"ATSStarted\": 1517,\n\t\"ATSCSPerfTestTask\": 1518,\n\t\"ATSCSPerfTestResponse\": 1519,\n\t\"BaseDP\": 1600,\n\t\"DPSetPublishingState\": 1601,\n\t\"DPGamePlayedStats\": 1602, // obsolete\n\t\"DPUniquePlayersStat\": 1603,\n\t\"DPStreamingUniquePlayersStat\": 1604,\n\t\"DPVacInfractionStats\": 1605,\n\t\"DPVacBanStats\": 1606,\n\t\"DPBlockingStats\": 1607,\n\t\"DPNatTraversalStats\": 1608,\n\t\"DPSteamUsageEvent\": 1609, // obsolete\n\t\"DPVacCertBanStats\": 1610,\n\t\"DPVacCafeBanStats\": 1611,\n\t\"DPCloudStats\": 1612,\n\t\"DPAchievementStats\": 1613,\n\t\"DPAccountCreationStats\": 1614,\n\t\"DPGetPlayerCount\": 1615,\n\t\"DPGetPlayerCountResponse\": 1616,\n\t\"DPGameServersPlayersStats\": 1617,\n\t\"DPDownloadRateStatistics\": 1618, // obsolete\n\t\"DPFacebookStatistics\": 1619,\n\t\"ClientDPCheckSpecialSurvey\": 1620,\n\t\"ClientDPCheckSpecialSurveyResponse\": 1621,\n\t\"ClientDPSendSpecialSurveyResponse\": 1622,\n\t\"ClientDPSendSpecialSurveyResponseReply\": 1623,\n\t\"DPStoreSaleStatistics\": 1624,\n\t\"ClientDPUpdateAppJobReport\": 1625,\n\t\"ClientDPSteam2AppStarted\": 1627, // obsolete obsolete\n\t\"DPUpdateContentEvent\": 1626,\n\t\"DPPartnerMicroTxns\": 1628,\n\t\"DPPartnerMicroTxnsResponse\": 1629,\n\t\"ClientDPContentStatsReport\": 1630,\n\t\"DPVRUniquePlayersStat\": 1631,\n\t\"BaseCM\": 1700,\n\t\"CMSetAllowState\": 1701,\n\t\"CMSpewAllowState\": 1702,\n\t\"CMAppInfoResponseDeprecated\": 1703, // obsolete\n\t\"BaseDSS\": 1800, // obsolete\n\t\"DSSNewFile\": 1801, // obsolete\n\t\"DSSCurrentFileList\": 1802, // obsolete\n\t\"DSSSynchList\": 1803, // obsolete\n\t\"DSSSynchListResponse\": 1804, // obsolete\n\t\"DSSSynchSubscribe\": 1805, // obsolete\n\t\"DSSSynchUnsubscribe\": 1806, // obsolete\n\t\"BaseEPM\": 1900, // obsolete\n\t\"EPMStartProcess\": 1901, // obsolete\n\t\"EPMStopProcess\": 1902, // obsolete\n\t\"EPMRestartProcess\": 1903, // obsolete\n\t\"BaseGC\": 2200,\n\t\"GCSendClient\": 2200, // obsolete\n\t\"AMRelayToGC\": 2201, // obsolete\n\t\"GCUpdatePlayedState\": 2202, // obsolete\n\t\"GCCmdRevive\": 2203,\n\t\"GCCmdBounce\": 2204, // obsolete\n\t\"GCCmdForceBounce\": 2205, // obsolete\n\t\"GCCmdDown\": 2206,\n\t\"GCCmdDeploy\": 2207,\n\t\"GCCmdDeployResponse\": 2208,\n\t\"GCCmdSwitch\": 2209,\n\t\"AMRefreshSessions\": 2210,\n\t\"GCUpdateGSState\": 2211, // obsolete\n\t\"GCAchievementAwarded\": 2212,\n\t\"GCSystemMessage\": 2213,\n\t\"GCValidateSession\": 2214, // obsolete\n\t\"GCValidateSessionResponse\": 2215, // obsolete\n\t\"GCCmdStatus\": 2216,\n\t\"GCRegisterWebInterfaces\": 2217, // obsolete\n\t\"GCRegisterWebInterfaces_Deprecated\": 2217, // obsolete\n\t\"GCGetAccountDetails\": 2218, // obsolete\n\t\"GCGetAccountDetails_DEPRECATED\": 2218, // obsolete\n\t\"GCInterAppMessage\": 2219,\n\t\"GCGetEmailTemplate\": 2220,\n\t\"GCGetEmailTemplateResponse\": 2221,\n\t\"ISRelayToGCH\": 2222, // obsolete \"renamed to GCHRelay\"\n\t\"GCHRelay\": 2222,\n\t\"GCHRelayClientToIS\": 2223, // obsolete \"renamed to GCHRelayToClient\"\n\t\"GCHRelayToClient\": 2223,\n\t\"GCHUpdateSession\": 2224,\n\t\"GCHRequestUpdateSession\": 2225,\n\t\"GCHRequestStatus\": 2226,\n\t\"GCHRequestStatusResponse\": 2227,\n\t\"GCHAccountVacStatusChange\": 2228,\n\t\"GCHSpawnGC\": 2229,\n\t\"GCHSpawnGCResponse\": 2230,\n\t\"GCHKillGC\": 2231,\n\t\"GCHKillGCResponse\": 2232,\n\t\"GCHAccountTradeBanStatusChange\": 2233,\n\t\"GCHAccountLockStatusChange\": 2234,\n\t\"GCHVacVerificationChange\": 2235,\n\t\"GCHAccountPhoneNumberChange\": 2236,\n\t\"GCHAccountTwoFactorChange\": 2237,\n\t\"BaseP2P\": 2500,\n\t\"P2PIntroducerMessage\": 2502,\n\t\"BaseSM\": 2900,\n\t\"SMExpensiveReport\": 2902,\n\t\"SMHourlyReport\": 2903,\n\t\"SMFishingReport\": 2904,\n\t\"SMPartitionRenames\": 2905,\n\t\"SMMonitorSpace\": 2906,\n\t\"SMGetSchemaConversionResults\": 2907, // obsolete\n\t\"SMGetSchemaConversionResultsResponse\": 2908, // obsolete\n\t\"BaseTest\": 3000,\n\t\"FailServer\": 3000,\n\t\"JobHeartbeatTest\": 3001,\n\t\"JobHeartbeatTestResponse\": 3002,\n\t\"BaseFTSRange\": 3100,\n\t\"FTSGetBrowseCounts\": 3101, // obsolete\n\t\"FTSGetBrowseCountsResponse\": 3102, // obsolete\n\t\"FTSBrowseClans\": 3103, // obsolete\n\t\"FTSBrowseClansResponse\": 3104, // obsolete\n\t\"FTSSearchClansByLocation\": 3105, // obsolete\n\t\"FTSSearchClansByLocationResponse\": 3106, // obsolete\n\t\"FTSSearchPlayersByLocation\": 3107, // obsolete\n\t\"FTSSearchPlayersByLocationResponse\": 3108, // obsolete\n\t\"FTSClanDeleted\": 3109, // obsolete\n\t\"FTSSearch\": 3110, // obsolete\n\t\"FTSSearchResponse\": 3111, // obsolete\n\t\"FTSSearchStatus\": 3112, // obsolete\n\t\"FTSSearchStatusResponse\": 3113, // obsolete\n\t\"FTSGetGSPlayStats\": 3114, // obsolete\n\t\"FTSGetGSPlayStatsResponse\": 3115, // obsolete\n\t\"FTSGetGSPlayStatsForServer\": 3116, // obsolete\n\t\"FTSGetGSPlayStatsForServerResponse\": 3117, // obsolete\n\t\"FTSReportIPUpdates\": 3118, // obsolete\n\t\"BaseCCSRange\": 3150,\n\t\"CCSGetComments\": 3151, // obsolete\n\t\"CCSGetCommentsResponse\": 3152, // obsolete\n\t\"CCSAddComment\": 3153, // obsolete\n\t\"CCSAddCommentResponse\": 3154, // obsolete\n\t\"CCSDeleteComment\": 3155, // obsolete\n\t\"CCSDeleteCommentResponse\": 3156, // obsolete\n\t\"CCSPreloadComments\": 3157, // obsolete\n\t\"CCSNotifyCommentCount\": 3158, // obsolete\n\t\"CCSGetCommentsForNews\": 3159, // obsolete\n\t\"CCSGetCommentsForNewsResponse\": 3160, // obsolete\n\t\"CCSDeleteAllCommentsByAuthor\": 3161,\n\t\"CCSDeleteAllCommentsByAuthorResponse\": 3162,\n\t\"BaseLBSRange\": 3200,\n\t\"LBSSetScore\": 3201,\n\t\"LBSSetScoreResponse\": 3202,\n\t\"LBSFindOrCreateLB\": 3203,\n\t\"LBSFindOrCreateLBResponse\": 3204,\n\t\"LBSGetLBEntries\": 3205,\n\t\"LBSGetLBEntriesResponse\": 3206,\n\t\"LBSGetLBList\": 3207,\n\t\"LBSGetLBListResponse\": 3208,\n\t\"LBSSetLBDetails\": 3209,\n\t\"LBSDeleteLB\": 3210,\n\t\"LBSDeleteLBEntry\": 3211,\n\t\"LBSResetLB\": 3212,\n\t\"LBSResetLBResponse\": 3213,\n\t\"LBSDeleteLBResponse\": 3214,\n\t\"BaseOGS\": 3400,\n\t\"OGSBeginSession\": 3401,\n\t\"OGSBeginSessionResponse\": 3402,\n\t\"OGSEndSession\": 3403,\n\t\"OGSEndSessionResponse\": 3404,\n\t\"OGSWriteAppSessionRow\": 3406,\n\t\"BaseBRP\": 3600,\n\t\"BRPStartShippingJobs\": 3601,\n\t\"BRPProcessUSBankReports\": 3602,\n\t\"BRPProcessGCReports\": 3603,\n\t\"BRPProcessPPReports\": 3604,\n\t\"BRPSettleNOVA\": 3605, // obsolete\n\t\"BRPSettleCB\": 3606, // obsolete\n\t\"BRPCommitGC\": 3607,\n\t\"BRPCommitGCResponse\": 3608,\n\t\"BRPFindHungTransactions\": 3609,\n\t\"BRPCheckFinanceCloseOutDate\": 3610,\n\t\"BRPProcessLicenses\": 3611,\n\t\"BRPProcessLicensesResponse\": 3612,\n\t\"BRPRemoveExpiredPaymentData\": 3613,\n\t\"BRPRemoveExpiredPaymentDataResponse\": 3614,\n\t\"BRPConvertToCurrentKeys\": 3615,\n\t\"BRPConvertToCurrentKeysResponse\": 3616,\n\t\"BRPPruneCardUsageStats\": 3617,\n\t\"BRPPruneCardUsageStatsResponse\": 3618,\n\t\"BRPCheckActivationCodes\": 3619,\n\t\"BRPCheckActivationCodesResponse\": 3620,\n\t\"BRPCommitWP\": 3621,\n\t\"BRPCommitWPResponse\": 3622,\n\t\"BRPProcessWPReports\": 3623,\n\t\"BRPProcessPaymentRules\": 3624,\n\t\"BRPProcessPartnerPayments\": 3625,\n\t\"BRPCheckSettlementReports\": 3626,\n\t\"BRPPostTaxToAvalara\": 3628,\n\t\"BRPPostTransactionTax\": 3629,\n\t\"BRPPostTransactionTaxResponse\": 3630,\n\t\"BRPProcessIMReports\": 3631,\n\t\"BaseAMRange2\": 4000,\n\t\"AMCreateChat\": 4001,\n\t\"AMCreateChatResponse\": 4002,\n\t\"AMUpdateChatMetadata\": 4003, // obsolete\n\t\"AMPublishChatMetadata\": 4004, // obsolete\n\t\"AMSetProfileURL\": 4005,\n\t\"AMGetAccountEmailAddress\": 4006,\n\t\"AMGetAccountEmailAddressResponse\": 4007,\n\t\"AMRequestFriendData\": 4008, // obsolete \"renamed to AMRequestClanData\"\n\t\"AMRequestClanData\": 4008,\n\t\"AMRouteToClients\": 4009,\n\t\"AMLeaveClan\": 4010,\n\t\"AMClanPermissions\": 4011,\n\t\"AMClanPermissionsResponse\": 4012,\n\t\"AMCreateClanEvent\": 4013,\n\t\"AMCreateClanEventResponse\": 4014,\n\t\"AMUpdateClanEvent\": 4015,\n\t\"AMUpdateClanEventResponse\": 4016,\n\t\"AMGetClanEvents\": 4017,\n\t\"AMGetClanEventsResponse\": 4018,\n\t\"AMDeleteClanEvent\": 4019,\n\t\"AMDeleteClanEventResponse\": 4020,\n\t\"AMSetClanPermissionSettings\": 4021,\n\t\"AMSetClanPermissionSettingsResponse\": 4022,\n\t\"AMGetClanPermissionSettings\": 4023,\n\t\"AMGetClanPermissionSettingsResponse\": 4024,\n\t\"AMPublishChatRoomInfo\": 4025,\n\t\"ClientChatRoomInfo\": 4026,\n\t\"AMCreateClanAnnouncement\": 4027, // obsolete\n\t\"AMCreateClanAnnouncementResponse\": 4028, // obsolete\n\t\"AMUpdateClanAnnouncement\": 4029, // obsolete\n\t\"AMUpdateClanAnnouncementResponse\": 4030, // obsolete\n\t\"AMGetClanAnnouncementsCount\": 4031, // obsolete\n\t\"AMGetClanAnnouncementsCountResponse\": 4032, // obsolete\n\t\"AMGetClanAnnouncements\": 4033, // obsolete\n\t\"AMGetClanAnnouncementsResponse\": 4034, // obsolete\n\t\"AMDeleteClanAnnouncement\": 4035, // obsolete\n\t\"AMDeleteClanAnnouncementResponse\": 4036, // obsolete\n\t\"AMGetSingleClanAnnouncement\": 4037, // obsolete\n\t\"AMGetSingleClanAnnouncementResponse\": 4038, // obsolete\n\t\"AMGetClanHistory\": 4039,\n\t\"AMGetClanHistoryResponse\": 4040,\n\t\"AMGetClanPermissionBits\": 4041,\n\t\"AMGetClanPermissionBitsResponse\": 4042,\n\t\"AMSetClanPermissionBits\": 4043,\n\t\"AMSetClanPermissionBitsResponse\": 4044,\n\t\"AMSessionInfoRequest\": 4045,\n\t\"AMSessionInfoResponse\": 4046,\n\t\"AMValidateWGToken\": 4047,\n\t\"AMGetSingleClanEvent\": 4048,\n\t\"AMGetSingleClanEventResponse\": 4049,\n\t\"AMGetClanRank\": 4050,\n\t\"AMGetClanRankResponse\": 4051,\n\t\"AMSetClanRank\": 4052,\n\t\"AMSetClanRankResponse\": 4053,\n\t\"AMGetClanPOTW\": 4054,\n\t\"AMGetClanPOTWResponse\": 4055,\n\t\"AMSetClanPOTW\": 4056,\n\t\"AMSetClanPOTWResponse\": 4057,\n\t\"AMRequestChatMetadata\": 4058, // obsolete\n\t\"AMDumpUser\": 4059,\n\t\"AMKickUserFromClan\": 4060,\n\t\"AMAddFounderToClan\": 4061,\n\t\"AMValidateWGTokenResponse\": 4062,\n\t\"AMSetCommunityState\": 4063,\n\t\"AMSetAccountDetails\": 4064,\n\t\"AMGetChatBanList\": 4065,\n\t\"AMGetChatBanListResponse\": 4066,\n\t\"AMUnBanFromChat\": 4067,\n\t\"AMSetClanDetails\": 4068,\n\t\"AMGetAccountLinks\": 4069,\n\t\"AMGetAccountLinksResponse\": 4070,\n\t\"AMSetAccountLinks\": 4071,\n\t\"AMSetAccountLinksResponse\": 4072,\n\t\"AMGetUserGameStats\": 4073,\n\t\"AMGetUserGameStatsResponse\": 4074,\n\t\"AMCheckClanMembership\": 4075,\n\t\"AMGetClanMembers\": 4076,\n\t\"AMGetClanMembersResponse\": 4077,\n\t\"AMJoinPublicClan\": 4078,\n\t\"AMNotifyChatOfClanChange\": 4079,\n\t\"AMResubmitPurchase\": 4080,\n\t\"AMAddFriend\": 4081,\n\t\"AMAddFriendResponse\": 4082,\n\t\"AMRemoveFriend\": 4083,\n\t\"AMDumpClan\": 4084,\n\t\"AMChangeClanOwner\": 4085,\n\t\"AMCancelEasyCollect\": 4086,\n\t\"AMCancelEasyCollectResponse\": 4087,\n\t\"AMGetClanMembershipList\": 4088, // obsolete\n\t\"AMGetClanMembershipListResponse\": 4089, // obsolete\n\t\"AMClansInCommon\": 4090,\n\t\"AMClansInCommonResponse\": 4091,\n\t\"AMIsValidAccountID\": 4092,\n\t\"AMConvertClan\": 4093,\n\t\"AMGetGiftTargetListRelay\": 4094, // obsolete\n\t\"AMWipeFriendsList\": 4095,\n\t\"AMSetIgnored\": 4096,\n\t\"AMClansInCommonCountResponse\": 4097,\n\t\"AMFriendsList\": 4098,\n\t\"AMFriendsListResponse\": 4099,\n\t\"AMFriendsInCommon\": 4100,\n\t\"AMFriendsInCommonResponse\": 4101,\n\t\"AMFriendsInCommonCountResponse\": 4102,\n\t\"AMClansInCommonCount\": 4103,\n\t\"AMChallengeVerdict\": 4104,\n\t\"AMChallengeNotification\": 4105,\n\t\"AMFindGSByIP\": 4106,\n\t\"AMFoundGSByIP\": 4107,\n\t\"AMGiftRevoked\": 4108,\n\t\"AMCreateAccountRecord\": 4109,\n\t\"AMUserClanList\": 4110,\n\t\"AMUserClanListResponse\": 4111,\n\t\"AMGetAccountDetails2\": 4112,\n\t\"AMGetAccountDetailsResponse2\": 4113,\n\t\"AMSetCommunityProfileSettings\": 4114,\n\t\"AMSetCommunityProfileSettingsResponse\": 4115,\n\t\"AMGetCommunityPrivacyState\": 4116,\n\t\"AMGetCommunityPrivacyStateResponse\": 4117,\n\t\"AMCheckClanInviteRateLimiting\": 4118,\n\t\"AMGetUserAchievementStatus\": 4119,\n\t\"AMGetIgnored\": 4120,\n\t\"AMGetIgnoredResponse\": 4121,\n\t\"AMSetIgnoredResponse\": 4122,\n\t\"AMSetFriendRelationshipNone\": 4123,\n\t\"AMGetFriendRelationship\": 4124,\n\t\"AMGetFriendRelationshipResponse\": 4125,\n\t\"AMServiceModulesCache\": 4126,\n\t\"AMServiceModulesCall\": 4127,\n\t\"AMServiceModulesCallResponse\": 4128,\n\t\"AMGetCaptchaDataForIP\": 4129,\n\t\"AMGetCaptchaDataForIPResponse\": 4130,\n\t\"AMValidateCaptchaDataForIP\": 4131,\n\t\"AMValidateCaptchaDataForIPResponse\": 4132,\n\t\"AMTrackFailedAuthByIP\": 4133,\n\t\"AMGetCaptchaDataByGID\": 4134,\n\t\"AMGetCaptchaDataByGIDResponse\": 4135,\n\t\"AMGetLobbyList\": 4136, // obsolete\n\t\"AMGetLobbyListResponse\": 4137, // obsolete\n\t\"AMGetLobbyMetadata\": 4138, // obsolete\n\t\"AMGetLobbyMetadataResponse\": 4139, // obsolete\n\t\"CommunityAddFriendNews\": 4140,\n\t\"AMAddClanNews\": 4141, // obsolete\n\t\"AMWriteNews\": 4142, // obsolete\n\t\"AMFindClanUser\": 4143,\n\t\"AMFindClanUserResponse\": 4144,\n\t\"AMBanFromChat\": 4145,\n\t\"AMGetUserHistoryResponse\": 4146, // obsolete\n\t\"AMGetUserNewsSubscriptions\": 4147,\n\t\"AMGetUserNewsSubscriptionsResponse\": 4148,\n\t\"AMSetUserNewsSubscriptions\": 4149,\n\t\"AMGetUserNews\": 4150, // obsolete\n\t\"AMGetUserNewsResponse\": 4151, // obsolete\n\t\"AMSendQueuedEmails\": 4152,\n\t\"AMSetLicenseFlags\": 4153,\n\t\"AMGetUserHistory\": 4154, // obsolete\n\t\"CommunityDeleteUserNews\": 4155,\n\t\"AMAllowUserFilesRequest\": 4156,\n\t\"AMAllowUserFilesResponse\": 4157,\n\t\"AMGetAccountStatus\": 4158,\n\t\"AMGetAccountStatusResponse\": 4159,\n\t\"AMEditBanReason\": 4160,\n\t\"AMCheckClanMembershipResponse\": 4161,\n\t\"AMProbeClanMembershipList\": 4162,\n\t\"AMProbeClanMembershipListResponse\": 4163,\n\t\"AMGetFriendsLobbies\": 4165,\n\t\"AMGetFriendsLobbiesResponse\": 4166,\n\t\"AMGetUserFriendNewsResponse\": 4172,\n\t\"CommunityGetUserFriendNews\": 4173,\n\t\"AMGetUserClansNewsResponse\": 4174,\n\t\"AMGetUserClansNews\": 4175,\n\t\"AMStoreInitPurchase\": 4176, // obsolete\n\t\"AMStoreInitPurchaseResponse\": 4177, // obsolete\n\t\"AMStoreGetFinalPrice\": 4178, // obsolete\n\t\"AMStoreGetFinalPriceResponse\": 4179, // obsolete\n\t\"AMStoreCompletePurchase\": 4180, // obsolete\n\t\"AMStoreCancelPurchase\": 4181, // obsolete\n\t\"AMStorePurchaseResponse\": 4182, // obsolete\n\t\"AMCreateAccountRecordInSteam3\": 4183, // obsolete\n\t\"AMGetPreviousCBAccount\": 4184,\n\t\"AMGetPreviousCBAccountResponse\": 4185,\n\t\"AMUpdateBillingAddress\": 4186, // obsolete\n\t\"AMUpdateBillingAddressResponse\": 4187, // obsolete\n\t\"AMGetBillingAddress\": 4188, // obsolete\n\t\"AMGetBillingAddressResponse\": 4189, // obsolete\n\t\"AMGetUserLicenseHistory\": 4190,\n\t\"AMGetUserLicenseHistoryResponse\": 4191,\n\t\"AMSupportChangePassword\": 4194,\n\t\"AMSupportChangeEmail\": 4195,\n\t\"AMSupportChangeSecretQA\": 4196, // obsolete\n\t\"AMResetUserVerificationGSByIP\": 4197,\n\t\"AMUpdateGSPlayStats\": 4198,\n\t\"AMSupportEnableOrDisable\": 4199,\n\t\"AMGetComments\": 4200, // obsolete\n\t\"AMGetCommentsResponse\": 4201, // obsolete\n\t\"AMAddComment\": 4202, // obsolete\n\t\"AMAddCommentResponse\": 4203, // obsolete\n\t\"AMDeleteComment\": 4204, // obsolete\n\t\"AMDeleteCommentResponse\": 4205, // obsolete\n\t\"AMGetPurchaseStatus\": 4206,\n\t\"AMSupportIsAccountEnabled\": 4209,\n\t\"AMSupportIsAccountEnabledResponse\": 4210,\n\t\"AMGetUserStats\": 4211,\n\t\"AMSupportKickSession\": 4212,\n\t\"AMGSSearch\": 4213,\n\t\"MarketingMessageUpdate\": 4216,\n\t\"AMRouteFriendMsg\": 4219,\n\t\"AMTicketAuthRequestOrResponse\": 4220,\n\t\"AMVerifyDepotManagementRights\": 4222,\n\t\"AMVerifyDepotManagementRightsResponse\": 4223,\n\t\"AMAddFreeLicense\": 4224,\n\t\"AMGetUserFriendsMinutesPlayed\": 4225, // obsolete\n\t\"AMGetUserFriendsMinutesPlayedResponse\": 4226, // obsolete\n\t\"AMGetUserMinutesPlayed\": 4227, // obsolete\n\t\"AMGetUserMinutesPlayedResponse\": 4228, // obsolete\n\t\"AMValidateEmailLink\": 4231,\n\t\"AMValidateEmailLinkResponse\": 4232,\n\t\"AMAddUsersToMarketingTreatment\": 4234, // obsolete\n\t\"AMStoreUserStats\": 4236,\n\t\"AMGetUserGameplayInfo\": 4237, // obsolete\n\t\"AMGetUserGameplayInfoResponse\": 4238, // obsolete\n\t\"AMGetCardList\": 4239, // obsolete\n\t\"AMGetCardListResponse\": 4240, // obsolete\n\t\"AMDeleteStoredCard\": 4241,\n\t\"AMRevokeLegacyGameKeys\": 4242,\n\t\"AMGetWalletDetails\": 4244,\n\t\"AMGetWalletDetailsResponse\": 4245,\n\t\"AMDeleteStoredPaymentInfo\": 4246,\n\t\"AMGetStoredPaymentSummary\": 4247,\n\t\"AMGetStoredPaymentSummaryResponse\": 4248,\n\t\"AMGetWalletConversionRate\": 4249,\n\t\"AMGetWalletConversionRateResponse\": 4250,\n\t\"AMConvertWallet\": 4251,\n\t\"AMConvertWalletResponse\": 4252,\n\t\"AMRelayGetFriendsWhoPlayGame\": 4253, // obsolete\n\t\"AMRelayGetFriendsWhoPlayGameResponse\": 4254, // obsolete\n\t\"AMSetPreApproval\": 4255,\n\t\"AMSetPreApprovalResponse\": 4256,\n\t\"AMMarketingTreatmentUpdate\": 4257, // obsolete\n\t\"AMCreateRefund\": 4258,\n\t\"AMCreateRefundResponse\": 4259,\n\t\"AMCreateChargeback\": 4260,\n\t\"AMCreateChargebackResponse\": 4261,\n\t\"AMCreateDispute\": 4262,\n\t\"AMCreateDisputeResponse\": 4263,\n\t\"AMClearDispute\": 4264,\n\t\"AMClearDisputeResponse\": 4265,\n\t\"AMPlayerNicknameList\": 4266,\n\t\"AMPlayerNicknameListResponse\": 4267,\n\t\"AMSetDRMTestConfig\": 4268,\n\t\"AMGetUserCurrentGameInfo\": 4269,\n\t\"AMGetUserCurrentGameInfoResponse\": 4270,\n\t\"AMGetGSPlayerList\": 4271,\n\t\"AMGetGSPlayerListResponse\": 4272,\n\t\"AMUpdatePersonaStateCache\": 4275, // obsolete\n\t\"AMGetGameMembers\": 4276,\n\t\"AMGetGameMembersResponse\": 4277,\n\t\"AMGetSteamIDForMicroTxn\": 4278,\n\t\"AMGetSteamIDForMicroTxnResponse\": 4279,\n\t\"AMAddPublisherUser\": 4280,\n\t\"AMRemovePublisherUser\": 4281,\n\t\"AMGetUserLicenseList\": 4282,\n\t\"AMGetUserLicenseListResponse\": 4283,\n\t\"AMReloadGameGroupPolicy\": 4284,\n\t\"AMAddFreeLicenseResponse\": 4285,\n\t\"AMVACStatusUpdate\": 4286,\n\t\"AMGetAccountDetails\": 4287,\n\t\"AMGetAccountDetailsResponse\": 4288,\n\t\"AMGetPlayerLinkDetails\": 4289,\n\t\"AMGetPlayerLinkDetailsResponse\": 4290,\n\t\"AMSubscribeToPersonaFeed\": 4291, // obsolete\n\t\"AMGetUserVacBanList\": 4292, // obsolete\n\t\"AMGetUserVacBanListResponse\": 4293, // obsolete\n\t\"AMGetAccountFlagsForWGSpoofing\": 4294,\n\t\"AMGetAccountFlagsForWGSpoofingResponse\": 4295,\n\t\"AMGetFriendsWishlistInfo\": 4296, // obsolete\n\t\"AMGetFriendsWishlistInfoResponse\": 4297, // obsolete\n\t\"AMGetClanOfficers\": 4298,\n\t\"AMGetClanOfficersResponse\": 4299,\n\t\"AMNameChange\": 4300,\n\t\"AMGetNameHistory\": 4301,\n\t\"AMGetNameHistoryResponse\": 4302,\n\t\"AMUpdateProviderStatus\": 4305,\n\t\"AMClearPersonaMetadataBlob\": 4306, // obsolete\n\t\"AMSupportRemoveAccountSecurity\": 4307,\n\t\"AMIsAccountInCaptchaGracePeriod\": 4308,\n\t\"AMIsAccountInCaptchaGracePeriodResponse\": 4309,\n\t\"AMAccountPS3Unlink\": 4310,\n\t\"AMAccountPS3UnlinkResponse\": 4311,\n\t\"AMStoreUserStatsResponse\": 4312,\n\t\"AMGetAccountPSNInfo\": 4313,\n\t\"AMGetAccountPSNInfoResponse\": 4314,\n\t\"AMAuthenticatedPlayerList\": 4315,\n\t\"AMGetUserGifts\": 4316,\n\t\"AMGetUserGiftsResponse\": 4317,\n\t\"AMTransferLockedGifts\": 4320,\n\t\"AMTransferLockedGiftsResponse\": 4321,\n\t\"AMPlayerHostedOnGameServer\": 4322,\n\t\"AMGetAccountBanInfo\": 4323,\n\t\"AMGetAccountBanInfoResponse\": 4324,\n\t\"AMRecordBanEnforcement\": 4325,\n\t\"AMRollbackGiftTransfer\": 4326,\n\t\"AMRollbackGiftTransferResponse\": 4327,\n\t\"AMHandlePendingTransaction\": 4328,\n\t\"AMRequestClanDetails\": 4329,\n\t\"AMDeleteStoredPaypalAgreement\": 4330,\n\t\"AMGameServerUpdate\": 4331,\n\t\"AMGameServerRemove\": 4332,\n\t\"AMGetPaypalAgreements\": 4333,\n\t\"AMGetPaypalAgreementsResponse\": 4334,\n\t\"AMGameServerPlayerCompatibilityCheck\": 4335,\n\t\"AMGameServerPlayerCompatibilityCheckResponse\": 4336,\n\t\"AMRenewLicense\": 4337,\n\t\"AMGetAccountCommunityBanInfo\": 4338,\n\t\"AMGetAccountCommunityBanInfoResponse\": 4339,\n\t\"AMGameServerAccountChangePassword\": 4340,\n\t\"AMGameServerAccountDeleteAccount\": 4341,\n\t\"AMRenewAgreement\": 4342,\n\t\"AMSendEmail\": 4343, // obsolete\n\t\"AMXsollaPayment\": 4344,\n\t\"AMXsollaPaymentResponse\": 4345,\n\t\"AMAcctAllowedToPurchase\": 4346,\n\t\"AMAcctAllowedToPurchaseResponse\": 4347,\n\t\"AMSwapKioskDeposit\": 4348,\n\t\"AMSwapKioskDepositResponse\": 4349,\n\t\"AMSetUserGiftUnowned\": 4350,\n\t\"AMSetUserGiftUnownedResponse\": 4351,\n\t\"AMClaimUnownedUserGift\": 4352,\n\t\"AMClaimUnownedUserGiftResponse\": 4353,\n\t\"AMSetClanName\": 4354,\n\t\"AMSetClanNameResponse\": 4355,\n\t\"AMGrantCoupon\": 4356,\n\t\"AMGrantCouponResponse\": 4357,\n\t\"AMIsPackageRestrictedInUserCountry\": 4358,\n\t\"AMIsPackageRestrictedInUserCountryResponse\": 4359,\n\t\"AMHandlePendingTransactionResponse\": 4360,\n\t\"AMGrantGuestPasses2\": 4361,\n\t\"AMGrantGuestPasses2Response\": 4362,\n\t\"AMSessionQuery\": 4363,\n\t\"AMSessionQueryResponse\": 4364,\n\t\"AMGetPlayerBanDetails\": 4365,\n\t\"AMGetPlayerBanDetailsResponse\": 4366,\n\t\"AMFinalizePurchase\": 4367,\n\t\"AMFinalizePurchaseResponse\": 4368,\n\t\"AMPersonaChangeResponse\": 4372,\n\t\"AMGetClanDetailsForForumCreation\": 4373,\n\t\"AMGetClanDetailsForForumCreationResponse\": 4374,\n\t\"AMGetPendingNotificationCount\": 4375,\n\t\"AMGetPendingNotificationCountResponse\": 4376,\n\t\"AMPasswordHashUpgrade\": 4377,\n\t\"AMMoPayPayment\": 4378,\n\t\"AMMoPayPaymentResponse\": 4379,\n\t\"AMBoaCompraPayment\": 4380,\n\t\"AMBoaCompraPaymentResponse\": 4381,\n\t\"AMExpireCaptchaByGID\": 4382,\n\t\"AMCompleteExternalPurchase\": 4383,\n\t\"AMCompleteExternalPurchaseResponse\": 4384,\n\t\"AMResolveNegativeWalletCredits\": 4385,\n\t\"AMResolveNegativeWalletCreditsResponse\": 4386,\n\t\"AMPayelpPayment\": 4387,\n\t\"AMPayelpPaymentResponse\": 4388,\n\t\"AMPlayerGetClanBasicDetails\": 4389,\n\t\"AMPlayerGetClanBasicDetailsResponse\": 4390,\n\t\"AMMOLPayment\": 4391,\n\t\"AMMOLPaymentResponse\": 4392,\n\t\"GetUserIPCountry\": 4393,\n\t\"GetUserIPCountryResponse\": 4394,\n\t\"NotificationOfSuspiciousActivity\": 4395,\n\t\"AMDegicaPayment\": 4396,\n\t\"AMDegicaPaymentResponse\": 4397,\n\t\"AMEClubPayment\": 4398,\n\t\"AMEClubPaymentResponse\": 4399,\n\t\"AMPayPalPaymentsHubPayment\": 4400,\n\t\"AMPayPalPaymentsHubPaymentResponse\": 4401,\n\t\"AMTwoFactorRecoverAuthenticatorRequest\": 4402,\n\t\"AMTwoFactorRecoverAuthenticatorResponse\": 4403,\n\t\"AMSmart2PayPayment\": 4404,\n\t\"AMSmart2PayPaymentResponse\": 4405,\n\t\"AMValidatePasswordResetCodeAndSendSmsRequest\": 4406,\n\t\"AMValidatePasswordResetCodeAndSendSmsResponse\": 4407,\n\t\"AMGetAccountResetDetailsRequest\": 4408,\n\t\"AMGetAccountResetDetailsResponse\": 4409,\n\t\"AMBitPayPayment\": 4410,\n\t\"AMBitPayPaymentResponse\": 4411,\n\t\"AMSendAccountInfoUpdate\": 4412,\n\t\"BasePSRange\": 5000,\n\t\"PSCreateShoppingCart\": 5001,\n\t\"PSCreateShoppingCartResponse\": 5002,\n\t\"PSIsValidShoppingCart\": 5003,\n\t\"PSIsValidShoppingCartResponse\": 5004,\n\t\"PSAddPackageToShoppingCart\": 5005,\n\t\"PSAddPackageToShoppingCartResponse\": 5006,\n\t\"PSRemoveLineItemFromShoppingCart\": 5007,\n\t\"PSRemoveLineItemFromShoppingCartResponse\": 5008,\n\t\"PSGetShoppingCartContents\": 5009,\n\t\"PSGetShoppingCartContentsResponse\": 5010,\n\t\"PSAddWalletCreditToShoppingCart\": 5011,\n\t\"PSAddWalletCreditToShoppingCartResponse\": 5012,\n\t\"BaseUFSRange\": 5200,\n\t\"ClientUFSUploadFileRequest\": 5202,\n\t\"ClientUFSUploadFileResponse\": 5203,\n\t\"ClientUFSUploadFileChunk\": 5204,\n\t\"ClientUFSUploadFileFinished\": 5205,\n\t\"ClientUFSGetFileListForApp\": 5206,\n\t\"ClientUFSGetFileListForAppResponse\": 5207,\n\t\"ClientUFSDownloadRequest\": 5210,\n\t\"ClientUFSDownloadResponse\": 5211,\n\t\"ClientUFSDownloadChunk\": 5212,\n\t\"ClientUFSLoginRequest\": 5213,\n\t\"ClientUFSLoginResponse\": 5214,\n\t\"UFSReloadPartitionInfo\": 5215,\n\t\"ClientUFSTransferHeartbeat\": 5216,\n\t\"UFSSynchronizeFile\": 5217,\n\t\"UFSSynchronizeFileResponse\": 5218,\n\t\"ClientUFSDeleteFileRequest\": 5219,\n\t\"ClientUFSDeleteFileResponse\": 5220,\n\t\"UFSDownloadRequest\": 5221, // obsolete\n\t\"UFSDownloadResponse\": 5222, // obsolete\n\t\"UFSDownloadChunk\": 5223, // obsolete\n\t\"ClientUFSGetUGCDetails\": 5226,\n\t\"ClientUFSGetUGCDetailsResponse\": 5227,\n\t\"UFSUpdateFileFlags\": 5228,\n\t\"UFSUpdateFileFlagsResponse\": 5229,\n\t\"ClientUFSGetSingleFileInfo\": 5230,\n\t\"ClientUFSGetSingleFileInfoResponse\": 5231,\n\t\"ClientUFSShareFile\": 5232,\n\t\"ClientUFSShareFileResponse\": 5233,\n\t\"UFSReloadAccount\": 5234,\n\t\"UFSReloadAccountResponse\": 5235,\n\t\"UFSUpdateRecordBatched\": 5236,\n\t\"UFSUpdateRecordBatchedResponse\": 5237,\n\t\"UFSMigrateFile\": 5238,\n\t\"UFSMigrateFileResponse\": 5239,\n\t\"UFSGetUGCURLs\": 5240,\n\t\"UFSGetUGCURLsResponse\": 5241,\n\t\"UFSHttpUploadFileFinishRequest\": 5242,\n\t\"UFSHttpUploadFileFinishResponse\": 5243,\n\t\"UFSDownloadStartRequest\": 5244,\n\t\"UFSDownloadStartResponse\": 5245,\n\t\"UFSDownloadChunkRequest\": 5246,\n\t\"UFSDownloadChunkResponse\": 5247,\n\t\"UFSDownloadFinishRequest\": 5248,\n\t\"UFSDownloadFinishResponse\": 5249,\n\t\"UFSFlushURLCache\": 5250,\n\t\"UFSUploadCommit\": 5251,\n\t\"UFSUploadCommitResponse\": 5252,\n\t\"UFSMigrateFileAppID\": 5253,\n\t\"UFSMigrateFileAppIDResponse\": 5254,\n\t\"BaseClient2\": 5400,\n\t\"ClientRequestForgottenPasswordEmail\": 5401,\n\t\"ClientRequestForgottenPasswordEmailResponse\": 5402,\n\t\"ClientCreateAccountResponse\": 5403,\n\t\"ClientResetForgottenPassword\": 5404,\n\t\"ClientResetForgottenPasswordResponse\": 5405,\n\t\"ClientCreateAccount2\": 5406,\n\t\"ClientInformOfResetForgottenPassword\": 5407,\n\t\"ClientInformOfResetForgottenPasswordResponse\": 5408,\n\t\"ClientAnonUserLogOn_Deprecated\": 5409, // obsolete\n\t\"ClientGamesPlayedWithDataBlob\": 5410,\n\t\"ClientUpdateUserGameInfo\": 5411,\n\t\"ClientFileToDownload\": 5412,\n\t\"ClientFileToDownloadResponse\": 5413,\n\t\"ClientLBSSetScore\": 5414,\n\t\"ClientLBSSetScoreResponse\": 5415,\n\t\"ClientLBSFindOrCreateLB\": 5416,\n\t\"ClientLBSFindOrCreateLBResponse\": 5417,\n\t\"ClientLBSGetLBEntries\": 5418,\n\t\"ClientLBSGetLBEntriesResponse\": 5419,\n\t\"ClientMarketingMessageUpdate\": 5420, // obsolete\n\t\"ClientChatDeclined\": 5426,\n\t\"ClientFriendMsgIncoming\": 5427,\n\t\"ClientAuthList_Deprecated\": 5428, // obsolete\n\t\"ClientTicketAuthComplete\": 5429,\n\t\"ClientIsLimitedAccount\": 5430,\n\t\"ClientRequestAuthList\": 5431,\n\t\"ClientAuthList\": 5432,\n\t\"ClientStat\": 5433,\n\t\"ClientP2PConnectionInfo\": 5434,\n\t\"ClientP2PConnectionFailInfo\": 5435,\n\t\"ClientGetNumberOfCurrentPlayers\": 5436, // obsolete\n\t\"ClientGetNumberOfCurrentPlayersResponse\": 5437, // obsolete\n\t\"ClientGetDepotDecryptionKey\": 5438,\n\t\"ClientGetDepotDecryptionKeyResponse\": 5439,\n\t\"GSPerformHardwareSurvey\": 5440,\n\t\"ClientGetAppBetaPasswords\": 5441,\n\t\"ClientGetAppBetaPasswordsResponse\": 5442,\n\t\"ClientEnableTestLicense\": 5443,\n\t\"ClientEnableTestLicenseResponse\": 5444,\n\t\"ClientDisableTestLicense\": 5445,\n\t\"ClientDisableTestLicenseResponse\": 5446,\n\t\"ClientRequestValidationMail\": 5448,\n\t\"ClientRequestValidationMailResponse\": 5449,\n\t\"ClientCheckAppBetaPassword\": 5450,\n\t\"ClientCheckAppBetaPasswordResponse\": 5451,\n\t\"ClientToGC\": 5452,\n\t\"ClientFromGC\": 5453,\n\t\"ClientRequestChangeMail\": 5454,\n\t\"ClientRequestChangeMailResponse\": 5455,\n\t\"ClientEmailAddrInfo\": 5456,\n\t\"ClientPasswordChange3\": 5457,\n\t\"ClientEmailChange3\": 5458,\n\t\"ClientPersonalQAChange3\": 5459,\n\t\"ClientResetForgottenPassword3\": 5460,\n\t\"ClientRequestForgottenPasswordEmail3\": 5461,\n\t\"ClientCreateAccount3\": 5462, // obsolete\n\t\"ClientNewLoginKey\": 5463,\n\t\"ClientNewLoginKeyAccepted\": 5464,\n\t\"ClientLogOnWithHash_Deprecated\": 5465, // obsolete\n\t\"ClientStoreUserStats2\": 5466,\n\t\"ClientStatsUpdated\": 5467,\n\t\"ClientActivateOEMLicense\": 5468,\n\t\"ClientRegisterOEMMachine\": 5469,\n\t\"ClientRegisterOEMMachineResponse\": 5470,\n\t\"ClientRequestedClientStats\": 5480,\n\t\"ClientStat2Int32\": 5481,\n\t\"ClientStat2\": 5482,\n\t\"ClientVerifyPassword\": 5483,\n\t\"ClientVerifyPasswordResponse\": 5484,\n\t\"ClientDRMDownloadRequest\": 5485,\n\t\"ClientDRMDownloadResponse\": 5486,\n\t\"ClientDRMFinalResult\": 5487,\n\t\"ClientGetFriendsWhoPlayGame\": 5488,\n\t\"ClientGetFriendsWhoPlayGameResponse\": 5489,\n\t\"ClientOGSBeginSession\": 5490,\n\t\"ClientOGSBeginSessionResponse\": 5491,\n\t\"ClientOGSEndSession\": 5492,\n\t\"ClientOGSEndSessionResponse\": 5493,\n\t\"ClientOGSWriteRow\": 5494,\n\t\"ClientDRMTest\": 5495,\n\t\"ClientDRMTestResult\": 5496,\n\t\"ClientServerUnavailable\": 5500,\n\t\"ClientServersAvailable\": 5501,\n\t\"ClientRegisterAuthTicketWithCM\": 5502,\n\t\"ClientGCMsgFailed\": 5503,\n\t\"ClientMicroTxnAuthRequest\": 5504,\n\t\"ClientMicroTxnAuthorize\": 5505,\n\t\"ClientMicroTxnAuthorizeResponse\": 5506,\n\t\"ClientAppMinutesPlayedData\": 5507,\n\t\"ClientGetMicroTxnInfo\": 5508,\n\t\"ClientGetMicroTxnInfoResponse\": 5509,\n\t\"ClientMarketingMessageUpdate2\": 5510,\n\t\"ClientDeregisterWithServer\": 5511,\n\t\"ClientSubscribeToPersonaFeed\": 5512,\n\t\"ClientLogon\": 5514,\n\t\"ClientGetClientDetails\": 5515,\n\t\"ClientGetClientDetailsResponse\": 5516,\n\t\"ClientReportOverlayDetourFailure\": 5517,\n\t\"ClientGetClientAppList\": 5518,\n\t\"ClientGetClientAppListResponse\": 5519,\n\t\"ClientInstallClientApp\": 5520,\n\t\"ClientInstallClientAppResponse\": 5521,\n\t\"ClientUninstallClientApp\": 5522,\n\t\"ClientUninstallClientAppResponse\": 5523,\n\t\"ClientSetClientAppUpdateState\": 5524,\n\t\"ClientSetClientAppUpdateStateResponse\": 5525,\n\t\"ClientRequestEncryptedAppTicket\": 5526,\n\t\"ClientRequestEncryptedAppTicketResponse\": 5527,\n\t\"ClientWalletInfoUpdate\": 5528,\n\t\"ClientLBSSetUGC\": 5529,\n\t\"ClientLBSSetUGCResponse\": 5530,\n\t\"ClientAMGetClanOfficers\": 5531,\n\t\"ClientAMGetClanOfficersResponse\": 5532,\n\t\"ClientCheckFileSignature\": 5533,\n\t\"ClientCheckFileSignatureResponse\": 5534,\n\t\"ClientFriendProfileInfo\": 5535,\n\t\"ClientFriendProfileInfoResponse\": 5536,\n\t\"ClientUpdateMachineAuth\": 5537,\n\t\"ClientUpdateMachineAuthResponse\": 5538,\n\t\"ClientReadMachineAuth\": 5539,\n\t\"ClientReadMachineAuthResponse\": 5540,\n\t\"ClientRequestMachineAuth\": 5541,\n\t\"ClientRequestMachineAuthResponse\": 5542,\n\t\"ClientScreenshotsChanged\": 5543,\n\t\"ClientEmailChange4\": 5544,\n\t\"ClientEmailChangeResponse4\": 5545,\n\t\"ClientGetCDNAuthToken\": 5546,\n\t\"ClientGetCDNAuthTokenResponse\": 5547,\n\t\"ClientDownloadRateStatistics\": 5548,\n\t\"ClientRequestAccountData\": 5549,\n\t\"ClientRequestAccountDataResponse\": 5550,\n\t\"ClientResetForgottenPassword4\": 5551,\n\t\"ClientHideFriend\": 5552,\n\t\"ClientFriendsGroupsList\": 5553,\n\t\"ClientGetClanActivityCounts\": 5554,\n\t\"ClientGetClanActivityCountsResponse\": 5555,\n\t\"ClientOGSReportString\": 5556,\n\t\"ClientOGSReportBug\": 5557,\n\t\"ClientSentLogs\": 5558,\n\t\"ClientLogonGameServer\": 5559,\n\t\"AMClientCreateFriendsGroup\": 5560,\n\t\"AMClientCreateFriendsGroupResponse\": 5561,\n\t\"AMClientDeleteFriendsGroup\": 5562,\n\t\"AMClientDeleteFriendsGroupResponse\": 5563,\n\t\"AMClientRenameFriendsGroup\": 5564,\n\t\"AMClientRenameFriendsGroupResponse\": 5565,\n\t\"AMClientAddFriendToGroup\": 5566,\n\t\"AMClientAddFriendToGroupResponse\": 5567,\n\t\"AMClientRemoveFriendFromGroup\": 5568,\n\t\"AMClientRemoveFriendFromGroupResponse\": 5569,\n\t\"ClientAMGetPersonaNameHistory\": 5570,\n\t\"ClientAMGetPersonaNameHistoryResponse\": 5571,\n\t\"ClientRequestFreeLicense\": 5572,\n\t\"ClientRequestFreeLicenseResponse\": 5573,\n\t\"ClientDRMDownloadRequestWithCrashData\": 5574,\n\t\"ClientAuthListAck\": 5575,\n\t\"ClientItemAnnouncements\": 5576,\n\t\"ClientRequestItemAnnouncements\": 5577,\n\t\"ClientFriendMsgEchoToSender\": 5578,\n\t\"ClientChangeSteamGuardOptions\": 5579, // obsolete\n\t\"ClientChangeSteamGuardOptionsResponse\": 5580, // obsolete\n\t\"ClientOGSGameServerPingSample\": 5581,\n\t\"ClientCommentNotifications\": 5582,\n\t\"ClientRequestCommentNotifications\": 5583,\n\t\"ClientPersonaChangeResponse\": 5584,\n\t\"ClientRequestWebAPIAuthenticateUserNonce\": 5585,\n\t\"ClientRequestWebAPIAuthenticateUserNonceResponse\": 5586,\n\t\"ClientPlayerNicknameList\": 5587,\n\t\"AMClientSetPlayerNickname\": 5588,\n\t\"AMClientSetPlayerNicknameResponse\": 5589,\n\t\"ClientRequestOAuthTokenForApp\": 5590, // obsolete\n\t\"ClientRequestOAuthTokenForAppResponse\": 5591, // obsolete\n\t\"ClientCreateAccountProto\": 5590,\n\t\"ClientCreateAccountProtoResponse\": 5591,\n\t\"ClientGetNumberOfCurrentPlayersDP\": 5592,\n\t\"ClientGetNumberOfCurrentPlayersDPResponse\": 5593,\n\t\"ClientServiceMethod\": 5594,\n\t\"ClientServiceMethodResponse\": 5595,\n\t\"ClientFriendUserStatusPublished\": 5596,\n\t\"ClientCurrentUIMode\": 5597,\n\t\"ClientVanityURLChangedNotification\": 5598,\n\t\"ClientUserNotifications\": 5599,\n\t\"BaseDFS\": 5600,\n\t\"DFSGetFile\": 5601,\n\t\"DFSInstallLocalFile\": 5602,\n\t\"DFSConnection\": 5603,\n\t\"DFSConnectionReply\": 5604,\n\t\"ClientDFSAuthenticateRequest\": 5605,\n\t\"ClientDFSAuthenticateResponse\": 5606,\n\t\"ClientDFSEndSession\": 5607,\n\t\"DFSPurgeFile\": 5608,\n\t\"DFSRouteFile\": 5609,\n\t\"DFSGetFileFromServer\": 5610,\n\t\"DFSAcceptedResponse\": 5611,\n\t\"DFSRequestPingback\": 5612,\n\t\"DFSRecvTransmitFile\": 5613,\n\t\"DFSSendTransmitFile\": 5614,\n\t\"DFSRequestPingback2\": 5615,\n\t\"DFSResponsePingback2\": 5616,\n\t\"ClientDFSDownloadStatus\": 5617,\n\t\"DFSStartTransfer\": 5618,\n\t\"DFSTransferComplete\": 5619,\n\t\"DFSRouteFileResponse\": 5620,\n\t\"BaseMDS\": 5800,\n\t\"ClientMDSLoginRequest\": 5801, // obsolete\n\t\"ClientMDSLoginResponse\": 5802, // obsolete\n\t\"ClientMDSUploadManifestRequest\": 5803, // obsolete\n\t\"ClientMDSUploadManifestResponse\": 5804, // obsolete\n\t\"ClientMDSTransmitManifestDataChunk\": 5805, // obsolete\n\t\"ClientMDSHeartbeat\": 5806, // obsolete\n\t\"ClientMDSUploadDepotChunks\": 5807, // obsolete\n\t\"ClientMDSUploadDepotChunksResponse\": 5808, // obsolete\n\t\"ClientMDSInitDepotBuildRequest\": 5809, // obsolete\n\t\"ClientMDSInitDepotBuildResponse\": 5810, // obsolete\n\t\"AMToMDSGetDepotDecryptionKey\": 5812,\n\t\"MDSToAMGetDepotDecryptionKeyResponse\": 5813,\n\t\"MDSGetVersionsForDepot\": 5814, // obsolete\n\t\"MDSGetVersionsForDepotResponse\": 5815, // obsolete\n\t\"MDSSetPublicVersionForDepot\": 5816, // obsolete\n\t\"MDSSetPublicVersionForDepotResponse\": 5817, // obsolete\n\t\"ClientMDSInitWorkshopBuildRequest\": 5816, // obsolete\n\t\"ClientMDSInitWorkshopBuildResponse\": 5817, // obsolete\n\t\"ClientMDSGetDepotManifest\": 5818, // obsolete\n\t\"ClientMDSGetDepotManifestResponse\": 5819, // obsolete\n\t\"ClientMDSGetDepotManifestChunk\": 5820, // obsolete\n\t\"ClientMDSUploadRateTest\": 5823, // obsolete\n\t\"ClientMDSUploadRateTestResponse\": 5824, // obsolete\n\t\"MDSDownloadDepotChunksAck\": 5825, // obsolete\n\t\"MDSContentServerStatsBroadcast\": 5826, // obsolete\n\t\"MDSContentServerConfigRequest\": 5827,\n\t\"MDSContentServerConfig\": 5828,\n\t\"MDSGetDepotManifest\": 5829,\n\t\"MDSGetDepotManifestResponse\": 5830,\n\t\"MDSGetDepotManifestChunk\": 5831,\n\t\"MDSGetDepotChunk\": 5832,\n\t\"MDSGetDepotChunkResponse\": 5833,\n\t\"MDSGetDepotChunkChunk\": 5834,\n\t\"MDSUpdateContentServerConfig\": 5835, // obsolete\n\t\"MDSGetServerListForUser\": 5836,\n\t\"MDSGetServerListForUserResponse\": 5837,\n\t\"ClientMDSRegisterAppBuild\": 5838, // obsolete\n\t\"ClientMDSRegisterAppBuildResponse\": 5839, // obsolete\n\t\"ClientMDSSetAppBuildLive\": 5840, // obsolete\n\t\"ClientMDSSetAppBuildLiveResponse\": 5841, // obsolete\n\t\"ClientMDSGetPrevDepotBuild\": 5842, // obsolete\n\t\"ClientMDSGetPrevDepotBuildResponse\": 5843, // obsolete\n\t\"MDSToCSFlushChunk\": 5844,\n\t\"ClientMDSSignInstallScript\": 5845, // obsolete\n\t\"ClientMDSSignInstallScriptResponse\": 5846, // obsolete\n\t\"MDSMigrateChunk\": 5847,\n\t\"MDSMigrateChunkResponse\": 5848,\n\t\"CSBase\": 6200,\n\t\"CSPing\": 6201,\n\t\"CSPingResponse\": 6202,\n\t\"GMSBase\": 6400,\n\t\"GMSGameServerReplicate\": 6401,\n\t\"ClientGMSServerQuery\": 6403,\n\t\"GMSClientServerQueryResponse\": 6404,\n\t\"AMGMSGameServerUpdate\": 6405,\n\t\"AMGMSGameServerRemove\": 6406,\n\t\"GameServerOutOfDate\": 6407,\n\t\"DeviceAuthorizationBase\": 6500,\n\t\"ClientAuthorizeLocalDeviceRequest\": 6501,\n\t\"ClientAuthorizeLocalDevice\": 6502,\n\t\"ClientDeauthorizeDeviceRequest\": 6503,\n\t\"ClientDeauthorizeDevice\": 6504,\n\t\"ClientUseLocalDeviceAuthorizations\": 6505,\n\t\"ClientGetAuthorizedDevices\": 6506,\n\t\"ClientGetAuthorizedDevicesResponse\": 6507,\n\t\"AMNotifySessionDeviceAuthorized\": 6508,\n\t\"MMSBase\": 6600,\n\t\"ClientMMSCreateLobby\": 6601,\n\t\"ClientMMSCreateLobbyResponse\": 6602,\n\t\"ClientMMSJoinLobby\": 6603,\n\t\"ClientMMSJoinLobbyResponse\": 6604,\n\t\"ClientMMSLeaveLobby\": 6605,\n\t\"ClientMMSLeaveLobbyResponse\": 6606,\n\t\"ClientMMSGetLobbyList\": 6607,\n\t\"ClientMMSGetLobbyListResponse\": 6608,\n\t\"ClientMMSSetLobbyData\": 6609,\n\t\"ClientMMSSetLobbyDataResponse\": 6610,\n\t\"ClientMMSGetLobbyData\": 6611,\n\t\"ClientMMSLobbyData\": 6612,\n\t\"ClientMMSSendLobbyChatMsg\": 6613,\n\t\"ClientMMSLobbyChatMsg\": 6614,\n\t\"ClientMMSSetLobbyOwner\": 6615,\n\t\"ClientMMSSetLobbyOwnerResponse\": 6616,\n\t\"ClientMMSSetLobbyGameServer\": 6617,\n\t\"ClientMMSLobbyGameServerSet\": 6618,\n\t\"ClientMMSUserJoinedLobby\": 6619,\n\t\"ClientMMSUserLeftLobby\": 6620,\n\t\"ClientMMSInviteToLobby\": 6621,\n\t\"ClientMMSFlushFrenemyListCache\": 6622,\n\t\"ClientMMSFlushFrenemyListCacheResponse\": 6623,\n\t\"ClientMMSSetLobbyLinked\": 6624,\n\t\"NonStdMsgBase\": 6800,\n\t\"NonStdMsgMemcached\": 6801,\n\t\"NonStdMsgHTTPServer\": 6802,\n\t\"NonStdMsgHTTPClient\": 6803,\n\t\"NonStdMsgWGResponse\": 6804,\n\t\"NonStdMsgPHPSimulator\": 6805,\n\t\"NonStdMsgChase\": 6806,\n\t\"NonStdMsgDFSTransfer\": 6807,\n\t\"NonStdMsgTests\": 6808,\n\t\"NonStdMsgUMQpipeAAPL\": 6809,\n\t\"NonStdMsgSyslog\": 6810, // obsolete\n\t\"NonStdMsgLogsink\": 6811,\n\t\"NonStdMsgSteam2Emulator\": 6812,\n\t\"NonStdMsgRTMPServer\": 6813,\n\t\"UDSBase\": 7000,\n\t\"ClientUDSP2PSessionStarted\": 7001,\n\t\"ClientUDSP2PSessionEnded\": 7002,\n\t\"UDSRenderUserAuth\": 7003,\n\t\"UDSRenderUserAuthResponse\": 7004,\n\t\"ClientUDSInviteToGame\": 7005,\n\t\"UDSFindSession\": 7006, // obsolete \"renamed to UDSHasSession\"\n\t\"UDSHasSession\": 7006,\n\t\"UDSFindSessionResponse\": 7007, // obsolete \"renamed to UDSHasSessionResponse\"\n\t\"UDSHasSessionResponse\": 7007,\n\t\"MPASBase\": 7100,\n\t\"MPASVacBanReset\": 7101,\n\t\"KGSBase\": 7200,\n\t\"KGSAllocateKeyRange\": 7201, // obsolete\n\t\"KGSAllocateKeyRangeResponse\": 7202, // obsolete\n\t\"KGSGenerateKeys\": 7203, // obsolete\n\t\"KGSGenerateKeysResponse\": 7204, // obsolete\n\t\"KGSRemapKeys\": 7205, // obsolete\n\t\"KGSRemapKeysResponse\": 7206, // obsolete\n\t\"KGSGenerateGameStopWCKeys\": 7207, // obsolete\n\t\"KGSGenerateGameStopWCKeysResponse\": 7208, // obsolete\n\t\"UCMBase\": 7300,\n\t\"ClientUCMAddScreenshot\": 7301,\n\t\"ClientUCMAddScreenshotResponse\": 7302,\n\t\"UCMValidateObjectExists\": 7303, // obsolete\n\t\"UCMValidateObjectExistsResponse\": 7304, // obsolete\n\t\"UCMResetCommunityContent\": 7307,\n\t\"UCMResetCommunityContentResponse\": 7308,\n\t\"ClientUCMDeleteScreenshot\": 7309,\n\t\"ClientUCMDeleteScreenshotResponse\": 7310,\n\t\"ClientUCMPublishFile\": 7311,\n\t\"ClientUCMPublishFileResponse\": 7312,\n\t\"ClientUCMGetPublishedFileDetails\": 7313, // obsolete\n\t\"ClientUCMGetPublishedFileDetailsResponse\": 7314, // obsolete\n\t\"ClientUCMDeletePublishedFile\": 7315,\n\t\"ClientUCMDeletePublishedFileResponse\": 7316,\n\t\"ClientUCMEnumerateUserPublishedFiles\": 7317,\n\t\"ClientUCMEnumerateUserPublishedFilesResponse\": 7318,\n\t\"ClientUCMSubscribePublishedFile\": 7319, // obsolete\n\t\"ClientUCMSubscribePublishedFileResponse\": 7320, // obsolete\n\t\"ClientUCMEnumerateUserSubscribedFiles\": 7321,\n\t\"ClientUCMEnumerateUserSubscribedFilesResponse\": 7322,\n\t\"ClientUCMUnsubscribePublishedFile\": 7323, // obsolete\n\t\"ClientUCMUnsubscribePublishedFileResponse\": 7324, // obsolete\n\t\"ClientUCMUpdatePublishedFile\": 7325,\n\t\"ClientUCMUpdatePublishedFileResponse\": 7326,\n\t\"UCMUpdatePublishedFile\": 7327,\n\t\"UCMUpdatePublishedFileResponse\": 7328,\n\t\"UCMDeletePublishedFile\": 7329,\n\t\"UCMDeletePublishedFileResponse\": 7330,\n\t\"UCMUpdatePublishedFileStat\": 7331,\n\t\"UCMUpdatePublishedFileBan\": 7332,\n\t\"UCMUpdatePublishedFileBanResponse\": 7333,\n\t\"UCMUpdateTaggedScreenshot\": 7334, // obsolete\n\t\"UCMAddTaggedScreenshot\": 7335, // obsolete\n\t\"UCMRemoveTaggedScreenshot\": 7336, // obsolete\n\t\"UCMReloadPublishedFile\": 7337,\n\t\"UCMReloadUserFileListCaches\": 7338,\n\t\"UCMPublishedFileReported\": 7339,\n\t\"UCMUpdatePublishedFileIncompatibleStatus\": 7340,\n\t\"UCMPublishedFilePreviewAdd\": 7341,\n\t\"UCMPublishedFilePreviewAddResponse\": 7342,\n\t\"UCMPublishedFilePreviewRemove\": 7343,\n\t\"UCMPublishedFilePreviewRemoveResponse\": 7344,\n\t\"UCMPublishedFilePreviewChangeSortOrder\": 7345, // obsolete\n\t\"UCMPublishedFilePreviewChangeSortOrderResponse\": 7346, // obsolete\n\t\"ClientUCMPublishedFileSubscribed\": 7347,\n\t\"ClientUCMPublishedFileUnsubscribed\": 7348,\n\t\"UCMPublishedFileSubscribed\": 7349,\n\t\"UCMPublishedFileUnsubscribed\": 7350,\n\t\"UCMPublishFile\": 7351,\n\t\"UCMPublishFileResponse\": 7352,\n\t\"UCMPublishedFileChildAdd\": 7353,\n\t\"UCMPublishedFileChildAddResponse\": 7354,\n\t\"UCMPublishedFileChildRemove\": 7355,\n\t\"UCMPublishedFileChildRemoveResponse\": 7356,\n\t\"UCMPublishedFileChildChangeSortOrder\": 7357, // obsolete\n\t\"UCMPublishedFileChildChangeSortOrderResponse\": 7358, // obsolete\n\t\"UCMPublishedFileParentChanged\": 7359,\n\t\"ClientUCMGetPublishedFilesForUser\": 7360,\n\t\"ClientUCMGetPublishedFilesForUserResponse\": 7361,\n\t\"UCMGetPublishedFilesForUser\": 7362, // obsolete\n\t\"UCMGetPublishedFilesForUserResponse\": 7363, // obsolete\n\t\"ClientUCMSetUserPublishedFileAction\": 7364,\n\t\"ClientUCMSetUserPublishedFileActionResponse\": 7365,\n\t\"ClientUCMEnumeratePublishedFilesByUserAction\": 7366,\n\t\"ClientUCMEnumeratePublishedFilesByUserActionResponse\": 7367,\n\t\"ClientUCMPublishedFileDeleted\": 7368,\n\t\"UCMGetUserSubscribedFiles\": 7369,\n\t\"UCMGetUserSubscribedFilesResponse\": 7370,\n\t\"UCMFixStatsPublishedFile\": 7371,\n\t\"UCMDeleteOldScreenshot\": 7372, // obsolete\n\t\"UCMDeleteOldScreenshotResponse\": 7373, // obsolete\n\t\"UCMDeleteOldVideo\": 7374, // obsolete\n\t\"UCMDeleteOldVideoResponse\": 7375, // obsolete\n\t\"UCMUpdateOldScreenshotPrivacy\": 7376, // obsolete\n\t\"UCMUpdateOldScreenshotPrivacyResponse\": 7377, // obsolete\n\t\"ClientUCMEnumerateUserSubscribedFilesWithUpdates\": 7378,\n\t\"ClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse\": 7379,\n\t\"UCMPublishedFileContentUpdated\": 7380,\n\t\"UCMPublishedFileUpdated\": 7381,\n\t\"ClientWorkshopItemChangesRequest\": 7382,\n\t\"ClientWorkshopItemChangesResponse\": 7383,\n\t\"ClientWorkshopItemInfoRequest\": 7384,\n\t\"ClientWorkshopItemInfoResponse\": 7385,\n\t\"FSBase\": 7500,\n\t\"ClientRichPresenceUpload\": 7501,\n\t\"ClientRichPresenceRequest\": 7502,\n\t\"ClientRichPresenceInfo\": 7503,\n\t\"FSRichPresenceRequest\": 7504,\n\t\"FSRichPresenceResponse\": 7505,\n\t\"FSComputeFrenematrix\": 7506,\n\t\"FSComputeFrenematrixResponse\": 7507,\n\t\"FSPlayStatusNotification\": 7508,\n\t\"FSPublishPersonaStatus\": 7509,\n\t\"FSAddOrRemoveFollower\": 7510,\n\t\"FSAddOrRemoveFollowerResponse\": 7511,\n\t\"FSUpdateFollowingList\": 7512,\n\t\"FSCommentNotification\": 7513,\n\t\"FSCommentNotificationViewed\": 7514,\n\t\"ClientFSGetFollowerCount\": 7515,\n\t\"ClientFSGetFollowerCountResponse\": 7516,\n\t\"ClientFSGetIsFollowing\": 7517,\n\t\"ClientFSGetIsFollowingResponse\": 7518,\n\t\"ClientFSEnumerateFollowingList\": 7519,\n\t\"ClientFSEnumerateFollowingListResponse\": 7520,\n\t\"FSGetPendingNotificationCount\": 7521,\n\t\"FSGetPendingNotificationCountResponse\": 7522,\n\t\"ClientFSOfflineMessageNotification\": 7523,\n\t\"ClientFSRequestOfflineMessageCount\": 7524,\n\t\"ClientFSGetFriendMessageHistory\": 7525,\n\t\"ClientFSGetFriendMessageHistoryResponse\": 7526,\n\t\"ClientFSGetFriendMessageHistoryForOfflineMessages\": 7527,\n\t\"ClientFSGetFriendsSteamLevels\": 7528,\n\t\"ClientFSGetFriendsSteamLevelsResponse\": 7529,\n\t\"FSRequestFriendData\": 7530,\n\t\"DRMRange2\": 7600,\n\t\"CEGVersionSetEnableDisableRequest\": 7600,\n\t\"CEGVersionSetEnableDisableResponse\": 7601,\n\t\"CEGPropStatusDRMSRequest\": 7602,\n\t\"CEGPropStatusDRMSResponse\": 7603,\n\t\"CEGWhackFailureReportRequest\": 7604,\n\t\"CEGWhackFailureReportResponse\": 7605,\n\t\"DRMSFetchVersionSet\": 7606,\n\t\"DRMSFetchVersionSetResponse\": 7607,\n\t\"EconBase\": 7700,\n\t\"EconTrading_InitiateTradeRequest\": 7701,\n\t\"EconTrading_InitiateTradeProposed\": 7702,\n\t\"EconTrading_InitiateTradeResponse\": 7703,\n\t\"EconTrading_InitiateTradeResult\": 7704,\n\t\"EconTrading_StartSession\": 7705,\n\t\"EconTrading_CancelTradeRequest\": 7706,\n\t\"EconFlushInventoryCache\": 7707,\n\t\"EconFlushInventoryCacheResponse\": 7708,\n\t\"EconCDKeyProcessTransaction\": 7711,\n\t\"EconCDKeyProcessTransactionResponse\": 7712,\n\t\"EconGetErrorLogs\": 7713,\n\t\"EconGetErrorLogsResponse\": 7714,\n\t\"RMRange\": 7800,\n\t\"RMTestVerisignOTP\": 7800,\n\t\"RMTestVerisignOTPResponse\": 7801,\n\t\"RMDeleteMemcachedKeys\": 7803,\n\t\"RMRemoteInvoke\": 7804,\n\t\"BadLoginIPList\": 7805,\n\t\"RMMsgTraceAddTrigger\": 7806,\n\t\"RMMsgTraceRemoveTrigger\": 7807,\n\t\"RMMsgTraceEvent\": 7808,\n\t\"UGSBase\": 7900,\n\t\"UGSUpdateGlobalStats\": 7900,\n\t\"ClientUGSGetGlobalStats\": 7901,\n\t\"ClientUGSGetGlobalStatsResponse\": 7902,\n\t\"StoreBase\": 8000,\n\t\"StoreUpdateRecommendationCount\": 8000, // obsolete\n\t\"UMQBase\": 8100,\n\t\"UMQLogonRequest\": 8100,\n\t\"UMQLogonResponse\": 8101,\n\t\"UMQLogoffRequest\": 8102,\n\t\"UMQLogoffResponse\": 8103,\n\t\"UMQSendChatMessage\": 8104,\n\t\"UMQIncomingChatMessage\": 8105,\n\t\"UMQPoll\": 8106,\n\t\"UMQPollResults\": 8107,\n\t\"UMQ2AM_ClientMsgBatch\": 8108,\n\t\"UMQEnqueueMobileSalePromotions\": 8109, // obsolete\n\t\"UMQEnqueueMobileAnnouncements\": 8110, // obsolete\n\t\"WorkshopBase\": 8200,\n\t\"WorkshopAcceptTOSRequest\": 8200, // obsolete\n\t\"WorkshopAcceptTOSResponse\": 8201, // obsolete\n\t\"WebAPIBase\": 8300,\n\t\"WebAPIValidateOAuth2Token\": 8300,\n\t\"WebAPIValidateOAuth2TokenResponse\": 8301,\n\t\"WebAPIInvalidateTokensForAccount\": 8302, // obsolete\n\t\"WebAPIRegisterGCInterfaces\": 8303,\n\t\"WebAPIInvalidateOAuthClientCache\": 8304,\n\t\"WebAPIInvalidateOAuthTokenCache\": 8305,\n\t\"WebAPISetSecrets\": 8306,\n\t\"BackpackBase\": 8400,\n\t\"BackpackAddToCurrency\": 8401,\n\t\"BackpackAddToCurrencyResponse\": 8402,\n\t\"CREBase\": 8500,\n\t\"CRERankByTrend\": 8501, // obsolete\n\t\"CRERankByTrendResponse\": 8502, // obsolete\n\t\"CREItemVoteSummary\": 8503,\n\t\"CREItemVoteSummaryResponse\": 8504,\n\t\"CRERankByVote\": 8505, // obsolete\n\t\"CRERankByVoteResponse\": 8506, // obsolete\n\t\"CREUpdateUserPublishedItemVote\": 8507,\n\t\"CREUpdateUserPublishedItemVoteResponse\": 8508,\n\t\"CREGetUserPublishedItemVoteDetails\": 8509,\n\t\"CREGetUserPublishedItemVoteDetailsResponse\": 8510,\n\t\"CREEnumeratePublishedFiles\": 8511,\n\t\"CREEnumeratePublishedFilesResponse\": 8512,\n\t\"CREPublishedFileVoteAdded\": 8513,\n\t\"SecretsBase\": 8600,\n\t\"SecretsRequestCredentialPair\": 8600,\n\t\"SecretsCredentialPairResponse\": 8601,\n\t\"SecretsRequestServerIdentity\": 8602, // obsolete\n\t\"SecretsServerIdentityResponse\": 8603, // obsolete\n\t\"SecretsUpdateServerIdentities\": 8604, // obsolete\n\t\"BoxMonitorBase\": 8700,\n\t\"BoxMonitorReportRequest\": 8700,\n\t\"BoxMonitorReportResponse\": 8701,\n\t\"LogsinkBase\": 8800,\n\t\"LogsinkWriteReport\": 8800,\n\t\"PICSBase\": 8900,\n\t\"ClientPICSChangesSinceRequest\": 8901,\n\t\"ClientPICSChangesSinceResponse\": 8902,\n\t\"ClientPICSProductInfoRequest\": 8903,\n\t\"ClientPICSProductInfoResponse\": 8904,\n\t\"ClientPICSAccessTokenRequest\": 8905,\n\t\"ClientPICSAccessTokenResponse\": 8906,\n\t\"WorkerProcess\": 9000,\n\t\"WorkerProcessPingRequest\": 9000,\n\t\"WorkerProcessPingResponse\": 9001,\n\t\"WorkerProcessShutdown\": 9002,\n\t\"DRMWorkerProcess\": 9100,\n\t\"DRMWorkerProcessDRMAndSign\": 9100,\n\t\"DRMWorkerProcessDRMAndSignResponse\": 9101,\n\t\"DRMWorkerProcessSteamworksInfoRequest\": 9102,\n\t\"DRMWorkerProcessSteamworksInfoResponse\": 9103,\n\t\"DRMWorkerProcessInstallDRMDLLRequest\": 9104,\n\t\"DRMWorkerProcessInstallDRMDLLResponse\": 9105,\n\t\"DRMWorkerProcessSecretIdStringRequest\": 9106,\n\t\"DRMWorkerProcessSecretIdStringResponse\": 9107,\n\t\"DRMWorkerProcessGetDRMGuidsFromFileRequest\": 9108, // obsolete\n\t\"DRMWorkerProcessGetDRMGuidsFromFileResponse\": 9109, // obsolete\n\t\"DRMWorkerProcessInstallProcessedFilesRequest\": 9110,\n\t\"DRMWorkerProcessInstallProcessedFilesResponse\": 9111,\n\t\"DRMWorkerProcessExamineBlobRequest\": 9112,\n\t\"DRMWorkerProcessExamineBlobResponse\": 9113,\n\t\"DRMWorkerProcessDescribeSecretRequest\": 9114,\n\t\"DRMWorkerProcessDescribeSecretResponse\": 9115,\n\t\"DRMWorkerProcessBackfillOriginalRequest\": 9116,\n\t\"DRMWorkerProcessBackfillOriginalResponse\": 9117,\n\t\"DRMWorkerProcessValidateDRMDLLRequest\": 9118,\n\t\"DRMWorkerProcessValidateDRMDLLResponse\": 9119,\n\t\"DRMWorkerProcessValidateFileRequest\": 9120,\n\t\"DRMWorkerProcessValidateFileResponse\": 9121,\n\t\"DRMWorkerProcessSplitAndInstallRequest\": 9122,\n\t\"DRMWorkerProcessSplitAndInstallResponse\": 9123,\n\t\"DRMWorkerProcessGetBlobRequest\": 9124,\n\t\"DRMWorkerProcessGetBlobResponse\": 9125,\n\t\"DRMWorkerProcessEvaluateCrashRequest\": 9126,\n\t\"DRMWorkerProcessEvaluateCrashResponse\": 9127,\n\t\"DRMWorkerProcessAnalyzeFileRequest\": 9128,\n\t\"DRMWorkerProcessAnalyzeFileResponse\": 9129,\n\t\"DRMWorkerProcessUnpackBlobRequest\": 9130,\n\t\"DRMWorkerProcessUnpackBlobResponse\": 9131,\n\t\"DRMWorkerProcessInstallAllRequest\": 9132,\n\t\"DRMWorkerProcessInstallAllResponse\": 9133,\n\t\"TestWorkerProcess\": 9200,\n\t\"TestWorkerProcessLoadUnloadModuleRequest\": 9200,\n\t\"TestWorkerProcessLoadUnloadModuleResponse\": 9201,\n\t\"TestWorkerProcessServiceModuleCallRequest\": 9202,\n\t\"TestWorkerProcessServiceModuleCallResponse\": 9203,\n\t\"QuestServerBase\": 9300,\n\t\"ClientGetEmoticonList\": 9330,\n\t\"ClientEmoticonList\": 9331,\n\t\"ClientSharedLibraryBase\": 9400, // obsolete \"renamed to SLCBase\"\n\t\"SLCBase\": 9400,\n\t\"SLCUserSessionStatus\": 9400,\n\t\"SLCRequestUserSessionStatus\": 9401,\n\t\"SLCSharedLicensesLockStatus\": 9402,\n\t\"ClientSharedLicensesLockStatus\": 9403, // obsolete\n\t\"ClientSharedLicensesStopPlaying\": 9404, // obsolete\n\t\"ClientSharedLibraryLockStatus\": 9405,\n\t\"ClientSharedLibraryStopPlaying\": 9406,\n\t\"SLCOwnerLibraryChanged\": 9407,\n\t\"SLCSharedLibraryChanged\": 9408,\n\t\"RemoteClientBase\": 9500,\n\t\"RemoteClientAuth\": 9500,\n\t\"RemoteClientAuthResponse\": 9501,\n\t\"RemoteClientAppStatus\": 9502,\n\t\"RemoteClientStartStream\": 9503,\n\t\"RemoteClientStartStreamResponse\": 9504,\n\t\"RemoteClientPing\": 9505,\n\t\"RemoteClientPingResponse\": 9506,\n\t\"ClientUnlockStreaming\": 9507,\n\t\"ClientUnlockStreamingResponse\": 9508,\n\t\"RemoteClientAcceptEULA\": 9509,\n\t\"RemoteClientGetControllerConfig\": 9510,\n\t\"RemoteClientGetControllerConfigResposne\": 9511,\n\t\"RemoteClientStreamingEnabled\": 9512,\n\t\"ClientConcurrentSessionsBase\": 9600,\n\t\"ClientPlayingSessionState\": 9600,\n\t\"ClientKickPlayingSession\": 9601,\n\t\"ClientBroadcastBase\": 9700,\n\t\"ClientBroadcastInit\": 9700,\n\t\"ClientBroadcastFrames\": 9701,\n\t\"ClientBroadcastDisconnect\": 9702,\n\t\"ClientBroadcastScreenshot\": 9703,\n\t\"ClientBroadcastUploadConfig\": 9704,\n\t\"BaseClient3\": 9800,\n\t\"ClientVoiceCallPreAuthorize\": 9800,\n\t\"ClientVoiceCallPreAuthorizeResponse\": 9801,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"Invalid\",\n\t\"1\": \"Multi\",\n\t\"2\": \"ProtobufWrapped\",\n\t\"100\": \"GenericReply\",\n\t\"113\": \"DestJobFailed\",\n\t\"115\": \"Alert\",\n\t\"120\": \"SCIDRequest\",\n\t\"121\": \"SCIDResponse\",\n\t\"123\": \"JobHeartbeat\",\n\t\"124\": \"HubConnect\",\n\t\"126\": \"Subscribe\",\n\t\"127\": \"RouteMessage\",\n\t\"128\": \"RemoteSysID\",\n\t\"129\": \"AMCreateAccountResponse\",\n\t\"130\": \"WGRequest\",\n\t\"131\": \"WGResponse\",\n\t\"132\": \"KeepAlive\",\n\t\"133\": \"WebAPIJobRequest\",\n\t\"134\": \"WebAPIJobResponse\",\n\t\"135\": \"ClientSessionStart\",\n\t\"136\": \"ClientSessionEnd\",\n\t\"137\": \"ClientSessionUpdate\",\n\t\"138\": \"StatsDeprecated\",\n\t\"139\": \"Ping\",\n\t\"140\": \"PingResponse\",\n\t\"141\": \"Stats\",\n\t\"142\": \"RequestFullStatsBlock\",\n\t\"143\": \"LoadDBOCacheItem\",\n\t\"144\": \"LoadDBOCacheItemResponse\",\n\t\"145\": \"InvalidateDBOCacheItems\",\n\t\"146\": \"ServiceMethod\",\n\t\"147\": \"ServiceMethodResponse\",\n\t\"148\": \"ClientPackageVersions\",\n\t\"149\": \"TimestampRequest\",\n\t\"150\": \"TimestampResponse\",\n\t\"200\": \"AssignSysID\",\n\t\"201\": \"Exit\",\n\t\"202\": \"DirRequest\",\n\t\"203\": \"DirResponse\",\n\t\"204\": \"ZipRequest\",\n\t\"205\": \"ZipResponse\",\n\t\"215\": \"UpdateRecordResponse\",\n\t\"221\": \"UpdateCreditCardRequest\",\n\t\"225\": \"UpdateUserBanResponse\",\n\t\"226\": \"PrepareToExit\",\n\t\"227\": \"ContentDescriptionUpdate\",\n\t\"228\": \"TestResetServer\",\n\t\"229\": \"UniverseChanged\",\n\t\"230\": \"ShellConfigInfoUpdate\",\n\t\"233\": \"RequestWindowsEventLogEntries\",\n\t\"234\": \"ProvideWindowsEventLogEntries\",\n\t\"235\": \"ShellSearchLogs\",\n\t\"236\": \"ShellSearchLogsResponse\",\n\t\"237\": \"ShellCheckWindowsUpdates\",\n\t\"238\": \"ShellCheckWindowsUpdatesResponse\",\n\t\"239\": \"ShellFlushUserLicenseCache\",\n\t\"300\": \"Heartbeat\",\n\t\"301\": \"ShellFailed\",\n\t\"307\": \"ExitShells\",\n\t\"308\": \"ExitShell\",\n\t\"309\": \"GracefulExitShell\",\n\t\"314\": \"NotifyWatchdog\",\n\t\"316\": \"LicenseProcessingComplete\",\n\t\"317\": \"SetTestFlag\",\n\t\"318\": \"QueuedEmailsComplete\",\n\t\"319\": \"GMReportPHPError\",\n\t\"320\": \"GMDRMSync\",\n\t\"321\": \"PhysicalBoxInventory\",\n\t\"322\": \"UpdateConfigFile\",\n\t\"323\": \"TestInitDB\",\n\t\"324\": \"GMWriteConfigToSQL\",\n\t\"325\": \"GMLoadActivationCodes\",\n\t\"326\": \"GMQueueForFBS\",\n\t\"327\": \"GMSchemaConversionResults\",\n\t\"328\": \"GMSchemaConversionResultsResponse\",\n\t\"329\": \"GMWriteShellFailureToSQL\",\n\t\"330\": \"GMWriteStatsToSOS\",\n\t\"331\": \"GMGetServiceMethodRouting\",\n\t\"332\": \"GMGetServiceMethodRoutingResponse\",\n\t\"333\": \"GMConvertUserWallets\",\n\t\"400\": \"BaseAIS\",\n\t\"401\": \"AISRefreshContentDescription\",\n\t\"402\": \"AISRequestContentDescription\",\n\t\"403\": \"AISUpdateAppInfo\",\n\t\"404\": \"AISUpdatePackageCosts\",\n\t\"405\": \"AISGetPackageChangeNumber\",\n\t\"406\": \"AISGetPackageChangeNumberResponse\",\n\t\"407\": \"AISAppInfoTableChanged\",\n\t\"408\": \"AISUpdatePackageCostsResponse\",\n\t\"409\": \"AISCreateMarketingMessage\",\n\t\"410\": \"AISCreateMarketingMessageResponse\",\n\t\"411\": \"AISGetMarketingMessage\",\n\t\"412\": \"AISGetMarketingMessageResponse\",\n\t\"413\": \"AISUpdateMarketingMessage\",\n\t\"414\": \"AISUpdateMarketingMessageResponse\",\n\t\"415\": \"AISRequestMarketingMessageUpdate\",\n\t\"416\": \"AISDeleteMarketingMessage\",\n\t\"419\": \"AISGetMarketingTreatments\",\n\t\"420\": \"AISGetMarketingTreatmentsResponse\",\n\t\"421\": \"AISRequestMarketingTreatmentUpdate\",\n\t\"422\": \"AISTestAddPackage\",\n\t\"423\": \"AIGetAppGCFlags\",\n\t\"424\": \"AIGetAppGCFlagsResponse\",\n\t\"425\": \"AIGetAppList\",\n\t\"426\": \"AIGetAppListResponse\",\n\t\"427\": \"AIGetAppInfo\",\n\t\"428\": \"AIGetAppInfoResponse\",\n\t\"429\": \"AISGetCouponDefinition\",\n\t\"430\": \"AISGetCouponDefinitionResponse\",\n\t\"431\": \"AISUpdateSlaveContentDescription\",\n\t\"432\": \"AISUpdateSlaveContentDescriptionResponse\",\n\t\"433\": \"AISTestEnableGC\",\n\t\"500\": \"BaseAM\",\n\t\"504\": \"AMUpdateUserBanRequest\",\n\t\"505\": \"AMAddLicense\",\n\t\"507\": \"AMBeginProcessingLicenses\",\n\t\"508\": \"AMSendSystemIMToUser\",\n\t\"509\": \"AMExtendLicense\",\n\t\"510\": \"AMAddMinutesToLicense\",\n\t\"511\": \"AMCancelLicense\",\n\t\"512\": \"AMInitPurchase\",\n\t\"513\": \"AMPurchaseResponse\",\n\t\"514\": \"AMGetFinalPrice\",\n\t\"515\": \"AMGetFinalPriceResponse\",\n\t\"516\": \"AMGetLegacyGameKey\",\n\t\"517\": \"AMGetLegacyGameKeyResponse\",\n\t\"518\": \"AMFindHungTransactions\",\n\t\"519\": \"AMSetAccountTrustedRequest\",\n\t\"521\": \"AMCompletePurchase\",\n\t\"522\": \"AMCancelPurchase\",\n\t\"523\": \"AMNewChallenge\",\n\t\"524\": \"AMLoadOEMTickets\",\n\t\"525\": \"AMFixPendingPurchase\",\n\t\"526\": \"AMFixPendingPurchaseResponse\",\n\t\"527\": \"AMIsUserBanned\",\n\t\"528\": \"AMRegisterKey\",\n\t\"529\": \"AMLoadActivationCodes\",\n\t\"530\": \"AMLoadActivationCodesResponse\",\n\t\"531\": \"AMLookupKeyResponse\",\n\t\"532\": \"AMLookupKey\",\n\t\"533\": \"AMChatCleanup\",\n\t\"534\": \"AMClanCleanup\",\n\t\"535\": \"AMFixPendingRefund\",\n\t\"536\": \"AMReverseChargeback\",\n\t\"537\": \"AMReverseChargebackResponse\",\n\t\"538\": \"AMClanCleanupList\",\n\t\"539\": \"AMGetLicenses\",\n\t\"540\": \"AMGetLicensesResponse\",\n\t\"550\": \"AllowUserToPlayQuery\",\n\t\"551\": \"AllowUserToPlayResponse\",\n\t\"552\": \"AMVerfiyUser\",\n\t\"553\": \"AMClientNotPlaying\",\n\t\"554\": \"ClientRequestFriendship\",\n\t\"555\": \"AMRelayPublishStatus\",\n\t\"556\": \"AMResetCommunityContent\",\n\t\"557\": \"AMPrimePersonaStateCache\",\n\t\"558\": \"AMAllowUserContentQuery\",\n\t\"559\": \"AMAllowUserContentResponse\",\n\t\"560\": \"AMInitPurchaseResponse\",\n\t\"561\": \"AMRevokePurchaseResponse\",\n\t\"562\": \"AMLockProfile\",\n\t\"563\": \"AMRefreshGuestPasses\",\n\t\"564\": \"AMInviteUserToClan\",\n\t\"565\": \"AMAcknowledgeClanInvite\",\n\t\"566\": \"AMGrantGuestPasses\",\n\t\"567\": \"AMClanDataUpdated\",\n\t\"568\": \"AMReloadAccount\",\n\t\"569\": \"AMClientChatMsgRelay\",\n\t\"570\": \"AMChatMulti\",\n\t\"571\": \"AMClientChatInviteRelay\",\n\t\"572\": \"AMChatInvite\",\n\t\"573\": \"AMClientJoinChatRelay\",\n\t\"574\": \"AMClientChatMemberInfoRelay\",\n\t\"575\": \"AMPublishChatMemberInfo\",\n\t\"576\": \"AMClientAcceptFriendInvite\",\n\t\"577\": \"AMChatEnter\",\n\t\"578\": \"AMClientPublishRemovalFromSource\",\n\t\"579\": \"AMChatActionResult\",\n\t\"580\": \"AMFindAccounts\",\n\t\"581\": \"AMFindAccountsResponse\",\n\t\"582\": \"AMRequestAccountData\",\n\t\"583\": \"AMRequestAccountDataResponse\",\n\t\"584\": \"AMSetAccountFlags\",\n\t\"586\": \"AMCreateClan\",\n\t\"587\": \"AMCreateClanResponse\",\n\t\"588\": \"AMGetClanDetails\",\n\t\"589\": \"AMGetClanDetailsResponse\",\n\t\"590\": \"AMSetPersonaName\",\n\t\"591\": \"AMSetAvatar\",\n\t\"592\": \"AMAuthenticateUser\",\n\t\"593\": \"AMAuthenticateUserResponse\",\n\t\"594\": \"AMGetAccountFriendsCount\",\n\t\"595\": \"AMGetAccountFriendsCountResponse\",\n\t\"596\": \"AMP2PIntroducerMessage\",\n\t\"597\": \"ClientChatAction\",\n\t\"598\": \"AMClientChatActionRelay\",\n\t\"600\": \"ReqChallenge\",\n\t\"601\": \"VACResponse\",\n\t\"602\": \"ReqChallengeTest\",\n\t\"604\": \"VSMarkCheat\",\n\t\"605\": \"VSAddCheat\",\n\t\"606\": \"VSPurgeCodeModDB\",\n\t\"607\": \"VSGetChallengeResults\",\n\t\"608\": \"VSChallengeResultText\",\n\t\"609\": \"VSReportLingerer\",\n\t\"610\": \"VSRequestManagedChallenge\",\n\t\"611\": \"VSLoadDBFinished\",\n\t\"625\": \"BaseDRMS\",\n\t\"628\": \"DRMBuildBlobRequest\",\n\t\"629\": \"DRMBuildBlobResponse\",\n\t\"630\": \"DRMResolveGuidRequest\",\n\t\"631\": \"DRMResolveGuidResponse\",\n\t\"633\": \"DRMVariabilityReport\",\n\t\"634\": \"DRMVariabilityReportResponse\",\n\t\"635\": \"DRMStabilityReport\",\n\t\"636\": \"DRMStabilityReportResponse\",\n\t\"637\": \"DRMDetailsReportRequest\",\n\t\"638\": \"DRMDetailsReportResponse\",\n\t\"639\": \"DRMProcessFile\",\n\t\"640\": \"DRMAdminUpdate\",\n\t\"641\": \"DRMAdminUpdateResponse\",\n\t\"642\": \"DRMSync\",\n\t\"643\": \"DRMSyncResponse\",\n\t\"644\": \"DRMProcessFileResponse\",\n\t\"645\": \"DRMEmptyGuidCache\",\n\t\"646\": \"DRMEmptyGuidCacheResponse\",\n\t\"650\": \"BaseCS\",\n\t\"652\": \"CSUserContentRequest\",\n\t\"700\": \"BaseClient\",\n\t\"701\": \"ClientLogOn_Deprecated\",\n\t\"702\": \"ClientAnonLogOn_Deprecated\",\n\t\"703\": \"ClientHeartBeat\",\n\t\"704\": \"ClientVACResponse\",\n\t\"705\": \"ClientGamesPlayed_obsolete\",\n\t\"706\": \"ClientLogOff\",\n\t\"707\": \"ClientNoUDPConnectivity\",\n\t\"708\": \"ClientInformOfCreateAccount\",\n\t\"709\": \"ClientAckVACBan\",\n\t\"710\": \"ClientConnectionStats\",\n\t\"711\": \"ClientInitPurchase\",\n\t\"712\": \"ClientPingResponse\",\n\t\"714\": \"ClientRemoveFriend\",\n\t\"715\": \"ClientGamesPlayedNoDataBlob\",\n\t\"716\": \"ClientChangeStatus\",\n\t\"717\": \"ClientVacStatusResponse\",\n\t\"718\": \"ClientFriendMsg\",\n\t\"719\": \"ClientGameConnect_obsolete\",\n\t\"720\": \"ClientGamesPlayed2_obsolete\",\n\t\"721\": \"ClientGameEnded_obsolete\",\n\t\"722\": \"ClientGetFinalPrice\",\n\t\"726\": \"ClientSystemIM\",\n\t\"727\": \"ClientSystemIMAck\",\n\t\"728\": \"ClientGetLicenses\",\n\t\"729\": \"ClientCancelLicense\",\n\t\"730\": \"ClientGetLegacyGameKey\",\n\t\"731\": \"ClientContentServerLogOn_Deprecated\",\n\t\"732\": \"ClientAckVACBan2\",\n\t\"735\": \"ClientAckMessageByGID\",\n\t\"736\": \"ClientGetPurchaseReceipts\",\n\t\"737\": \"ClientAckPurchaseReceipt\",\n\t\"738\": \"ClientGamesPlayed3_obsolete\",\n\t\"739\": \"ClientSendGuestPass\",\n\t\"740\": \"ClientAckGuestPass\",\n\t\"741\": \"ClientRedeemGuestPass\",\n\t\"742\": \"ClientGamesPlayed\",\n\t\"743\": \"ClientRegisterKey\",\n\t\"744\": \"ClientInviteUserToClan\",\n\t\"745\": \"ClientAcknowledgeClanInvite\",\n\t\"746\": \"ClientPurchaseWithMachineID\",\n\t\"747\": \"ClientAppUsageEvent\",\n\t\"748\": \"ClientGetGiftTargetList\",\n\t\"749\": \"ClientGetGiftTargetListResponse\",\n\t\"751\": \"ClientLogOnResponse\",\n\t\"753\": \"ClientVACChallenge\",\n\t\"755\": \"ClientSetHeartbeatRate\",\n\t\"756\": \"ClientNotLoggedOnDeprecated\",\n\t\"757\": \"ClientLoggedOff\",\n\t\"758\": \"GSApprove\",\n\t\"759\": \"GSDeny\",\n\t\"760\": \"GSKick\",\n\t\"761\": \"ClientCreateAcctResponse\",\n\t\"763\": \"ClientPurchaseResponse\",\n\t\"764\": \"ClientPing\",\n\t\"765\": \"ClientNOP\",\n\t\"766\": \"ClientPersonaState\",\n\t\"767\": \"ClientFriendsList\",\n\t\"768\": \"ClientAccountInfo\",\n\t\"770\": \"ClientVacStatusQuery\",\n\t\"771\": \"ClientNewsUpdate\",\n\t\"773\": \"ClientGameConnectDeny\",\n\t\"774\": \"GSStatusReply\",\n\t\"775\": \"ClientGetFinalPriceResponse\",\n\t\"779\": \"ClientGameConnectTokens\",\n\t\"780\": \"ClientLicenseList\",\n\t\"781\": \"ClientCancelLicenseResponse\",\n\t\"782\": \"ClientVACBanStatus\",\n\t\"783\": \"ClientCMList\",\n\t\"784\": \"ClientEncryptPct\",\n\t\"785\": \"ClientGetLegacyGameKeyResponse\",\n\t\"786\": \"ClientFavoritesList\",\n\t\"787\": \"CSUserContentApprove\",\n\t\"788\": \"CSUserContentDeny\",\n\t\"789\": \"ClientInitPurchaseResponse\",\n\t\"791\": \"ClientAddFriend\",\n\t\"792\": \"ClientAddFriendResponse\",\n\t\"793\": \"ClientInviteFriend\",\n\t\"794\": \"ClientInviteFriendResponse\",\n\t\"795\": \"ClientSendGuestPassResponse\",\n\t\"796\": \"ClientAckGuestPassResponse\",\n\t\"797\": \"ClientRedeemGuestPassResponse\",\n\t\"798\": \"ClientUpdateGuestPassesList\",\n\t\"799\": \"ClientChatMsg\",\n\t\"800\": \"ClientChatInvite\",\n\t\"801\": \"ClientJoinChat\",\n\t\"802\": \"ClientChatMemberInfo\",\n\t\"803\": \"ClientLogOnWithCredentials_Deprecated\",\n\t\"805\": \"ClientPasswordChangeResponse\",\n\t\"807\": \"ClientChatEnter\",\n\t\"808\": \"ClientFriendRemovedFromSource\",\n\t\"809\": \"ClientCreateChat\",\n\t\"810\": \"ClientCreateChatResponse\",\n\t\"811\": \"ClientUpdateChatMetadata\",\n\t\"813\": \"ClientP2PIntroducerMessage\",\n\t\"814\": \"ClientChatActionResult\",\n\t\"815\": \"ClientRequestFriendData\",\n\t\"818\": \"ClientGetUserStats\",\n\t\"819\": \"ClientGetUserStatsResponse\",\n\t\"820\": \"ClientStoreUserStats\",\n\t\"821\": \"ClientStoreUserStatsResponse\",\n\t\"822\": \"ClientClanState\",\n\t\"830\": \"ClientServiceModule\",\n\t\"831\": \"ClientServiceCall\",\n\t\"832\": \"ClientServiceCallResponse\",\n\t\"833\": \"ClientPackageInfoRequest\",\n\t\"834\": \"ClientPackageInfoResponse\",\n\t\"839\": \"ClientNatTraversalStatEvent\",\n\t\"840\": \"ClientAppInfoRequest\",\n\t\"841\": \"ClientAppInfoResponse\",\n\t\"842\": \"ClientSteamUsageEvent\",\n\t\"845\": \"ClientCheckPassword\",\n\t\"846\": \"ClientResetPassword\",\n\t\"848\": \"ClientCheckPasswordResponse\",\n\t\"849\": \"ClientResetPasswordResponse\",\n\t\"850\": \"ClientSessionToken\",\n\t\"851\": \"ClientDRMProblemReport\",\n\t\"855\": \"ClientSetIgnoreFriend\",\n\t\"856\": \"ClientSetIgnoreFriendResponse\",\n\t\"857\": \"ClientGetAppOwnershipTicket\",\n\t\"858\": \"ClientGetAppOwnershipTicketResponse\",\n\t\"860\": \"ClientGetLobbyListResponse\",\n\t\"861\": \"ClientGetLobbyMetadata\",\n\t\"862\": \"ClientGetLobbyMetadataResponse\",\n\t\"863\": \"ClientVTTCert\",\n\t\"866\": \"ClientAppInfoUpdate\",\n\t\"867\": \"ClientAppInfoChanges\",\n\t\"880\": \"ClientServerList\",\n\t\"891\": \"ClientEmailChangeResponse\",\n\t\"892\": \"ClientSecretQAChangeResponse\",\n\t\"896\": \"ClientDRMBlobRequest\",\n\t\"897\": \"ClientDRMBlobResponse\",\n\t\"898\": \"ClientLookupKey\",\n\t\"899\": \"ClientLookupKeyResponse\",\n\t\"900\": \"BaseGameServer\",\n\t\"901\": \"GSDisconnectNotice\",\n\t\"903\": \"GSStatus\",\n\t\"905\": \"GSUserPlaying\",\n\t\"906\": \"GSStatus2\",\n\t\"907\": \"GSStatusUpdate_Unused\",\n\t\"908\": \"GSServerType\",\n\t\"909\": \"GSPlayerList\",\n\t\"910\": \"GSGetUserAchievementStatus\",\n\t\"911\": \"GSGetUserAchievementStatusResponse\",\n\t\"918\": \"GSGetPlayStats\",\n\t\"919\": \"GSGetPlayStatsResponse\",\n\t\"920\": \"GSGetUserGroupStatus\",\n\t\"921\": \"AMGetUserGroupStatus\",\n\t\"922\": \"AMGetUserGroupStatusResponse\",\n\t\"923\": \"GSGetUserGroupStatusResponse\",\n\t\"936\": \"GSGetReputation\",\n\t\"937\": \"GSGetReputationResponse\",\n\t\"938\": \"GSAssociateWithClan\",\n\t\"939\": \"GSAssociateWithClanResponse\",\n\t\"940\": \"GSComputeNewPlayerCompatibility\",\n\t\"941\": \"GSComputeNewPlayerCompatibilityResponse\",\n\t\"1000\": \"AdminCmd\",\n\t\"1004\": \"AdminCmdResponse\",\n\t\"1005\": \"AdminLogListenRequest\",\n\t\"1006\": \"AdminLogEvent\",\n\t\"1007\": \"LogSearchRequest\",\n\t\"1008\": \"LogSearchResponse\",\n\t\"1009\": \"LogSearchCancel\",\n\t\"1010\": \"UniverseData\",\n\t\"1014\": \"RequestStatHistory\",\n\t\"1015\": \"StatHistory\",\n\t\"1017\": \"AdminPwLogon\",\n\t\"1018\": \"AdminPwLogonResponse\",\n\t\"1019\": \"AdminSpew\",\n\t\"1020\": \"AdminConsoleTitle\",\n\t\"1023\": \"AdminGCSpew\",\n\t\"1024\": \"AdminGCCommand\",\n\t\"1025\": \"AdminGCGetCommandList\",\n\t\"1026\": \"AdminGCGetCommandListResponse\",\n\t\"1027\": \"FBSConnectionData\",\n\t\"1028\": \"AdminMsgSpew\",\n\t\"1100\": \"FBSReqVersion\",\n\t\"1101\": \"FBSVersionInfo\",\n\t\"1102\": \"FBSForceRefresh\",\n\t\"1103\": \"FBSForceBounce\",\n\t\"1104\": \"FBSDeployPackage\",\n\t\"1105\": \"FBSDeployResponse\",\n\t\"1106\": \"FBSUpdateBootstrapper\",\n\t\"1107\": \"FBSSetState\",\n\t\"1108\": \"FBSApplyOSUpdates\",\n\t\"1109\": \"FBSRunCMDScript\",\n\t\"1110\": \"FBSRebootBox\",\n\t\"1111\": \"FBSSetBigBrotherMode\",\n\t\"1112\": \"FBSMinidumpServer\",\n\t\"1113\": \"FBSSetShellCount_obsolete\",\n\t\"1114\": \"FBSDeployHotFixPackage\",\n\t\"1115\": \"FBSDeployHotFixResponse\",\n\t\"1116\": \"FBSDownloadHotFix\",\n\t\"1117\": \"FBSDownloadHotFixResponse\",\n\t\"1118\": \"FBSUpdateTargetConfigFile\",\n\t\"1119\": \"FBSApplyAccountCred\",\n\t\"1120\": \"FBSApplyAccountCredResponse\",\n\t\"1121\": \"FBSSetShellCount\",\n\t\"1122\": \"FBSTerminateShell\",\n\t\"1123\": \"FBSQueryGMForRequest\",\n\t\"1124\": \"FBSQueryGMResponse\",\n\t\"1125\": \"FBSTerminateZombies\",\n\t\"1126\": \"FBSInfoFromBootstrapper\",\n\t\"1127\": \"FBSRebootBoxResponse\",\n\t\"1128\": \"FBSBootstrapperPackageRequest\",\n\t\"1129\": \"FBSBootstrapperPackageResponse\",\n\t\"1130\": \"FBSBootstrapperGetPackageChunk\",\n\t\"1131\": \"FBSBootstrapperGetPackageChunkResponse\",\n\t\"1132\": \"FBSBootstrapperPackageTransferProgress\",\n\t\"1133\": \"FBSRestartBootstrapper\",\n\t\"1200\": \"FileXferRequest\",\n\t\"1201\": \"FileXferResponse\",\n\t\"1202\": \"FileXferData\",\n\t\"1203\": \"FileXferEnd\",\n\t\"1204\": \"FileXferDataAck\",\n\t\"1300\": \"ChannelAuthChallenge\",\n\t\"1301\": \"ChannelAuthResponse\",\n\t\"1302\": \"ChannelAuthResult\",\n\t\"1303\": \"ChannelEncryptRequest\",\n\t\"1304\": \"ChannelEncryptResponse\",\n\t\"1305\": \"ChannelEncryptResult\",\n\t\"1400\": \"BaseBS\",\n\t\"1401\": \"BSPurchaseStart\",\n\t\"1402\": \"BSPurchaseResponse\",\n\t\"1404\": \"BSSettleNOVA\",\n\t\"1406\": \"BSSettleComplete\",\n\t\"1407\": \"BSBannedRequest\",\n\t\"1408\": \"BSInitPayPalTxn\",\n\t\"1409\": \"BSInitPayPalTxnResponse\",\n\t\"1410\": \"BSGetPayPalUserInfo\",\n\t\"1411\": \"BSGetPayPalUserInfoResponse\",\n\t\"1413\": \"BSRefundTxn\",\n\t\"1414\": \"BSRefundTxnResponse\",\n\t\"1415\": \"BSGetEvents\",\n\t\"1416\": \"BSChaseRFRRequest\",\n\t\"1417\": \"BSPaymentInstrBan\",\n\t\"1418\": \"BSPaymentInstrBanResponse\",\n\t\"1419\": \"BSProcessGCReports\",\n\t\"1420\": \"BSProcessPPReports\",\n\t\"1421\": \"BSInitGCBankXferTxn\",\n\t\"1422\": \"BSInitGCBankXferTxnResponse\",\n\t\"1423\": \"BSQueryGCBankXferTxn\",\n\t\"1424\": \"BSQueryGCBankXferTxnResponse\",\n\t\"1425\": \"BSCommitGCTxn\",\n\t\"1426\": \"BSQueryTransactionStatus\",\n\t\"1427\": \"BSQueryTransactionStatusResponse\",\n\t\"1428\": \"BSQueryCBOrderStatus\",\n\t\"1429\": \"BSQueryCBOrderStatusResponse\",\n\t\"1430\": \"BSRunRedFlagReport\",\n\t\"1431\": \"BSQueryPaymentInstUsage\",\n\t\"1432\": \"BSQueryPaymentInstResponse\",\n\t\"1433\": \"BSQueryTxnExtendedInfo\",\n\t\"1434\": \"BSQueryTxnExtendedInfoResponse\",\n\t\"1435\": \"BSUpdateConversionRates\",\n\t\"1436\": \"BSProcessUSBankReports\",\n\t\"1437\": \"BSPurchaseRunFraudChecks\",\n\t\"1438\": \"BSPurchaseRunFraudChecksResponse\",\n\t\"1439\": \"BSStartShippingJobs\",\n\t\"1440\": \"BSQueryBankInformation\",\n\t\"1441\": \"BSQueryBankInformationResponse\",\n\t\"1445\": \"BSValidateXsollaSignature\",\n\t\"1446\": \"BSValidateXsollaSignatureResponse\",\n\t\"1448\": \"BSQiwiWalletInvoice\",\n\t\"1449\": \"BSQiwiWalletInvoiceResponse\",\n\t\"1450\": \"BSUpdateInventoryFromProPack\",\n\t\"1451\": \"BSUpdateInventoryFromProPackResponse\",\n\t\"1452\": \"BSSendShippingRequest\",\n\t\"1453\": \"BSSendShippingRequestResponse\",\n\t\"1454\": \"BSGetProPackOrderStatus\",\n\t\"1455\": \"BSGetProPackOrderStatusResponse\",\n\t\"1456\": \"BSCheckJobRunning\",\n\t\"1457\": \"BSCheckJobRunningResponse\",\n\t\"1458\": \"BSResetPackagePurchaseRateLimit\",\n\t\"1459\": \"BSResetPackagePurchaseRateLimitResponse\",\n\t\"1460\": \"BSUpdatePaymentData\",\n\t\"1461\": \"BSUpdatePaymentDataResponse\",\n\t\"1462\": \"BSGetBillingAddress\",\n\t\"1463\": \"BSGetBillingAddressResponse\",\n\t\"1464\": \"BSGetCreditCardInfo\",\n\t\"1465\": \"BSGetCreditCardInfoResponse\",\n\t\"1468\": \"BSRemoveExpiredPaymentData\",\n\t\"1469\": \"BSRemoveExpiredPaymentDataResponse\",\n\t\"1470\": \"BSConvertToCurrentKeys\",\n\t\"1471\": \"BSConvertToCurrentKeysResponse\",\n\t\"1472\": \"BSInitPurchase\",\n\t\"1473\": \"BSInitPurchaseResponse\",\n\t\"1474\": \"BSCompletePurchase\",\n\t\"1475\": \"BSCompletePurchaseResponse\",\n\t\"1476\": \"BSPruneCardUsageStats\",\n\t\"1477\": \"BSPruneCardUsageStatsResponse\",\n\t\"1478\": \"BSStoreBankInformation\",\n\t\"1479\": \"BSStoreBankInformationResponse\",\n\t\"1480\": \"BSVerifyPOSAKey\",\n\t\"1481\": \"BSVerifyPOSAKeyResponse\",\n\t\"1482\": \"BSReverseRedeemPOSAKey\",\n\t\"1483\": \"BSReverseRedeemPOSAKeyResponse\",\n\t\"1484\": \"BSQueryFindCreditCard\",\n\t\"1485\": \"BSQueryFindCreditCardResponse\",\n\t\"1486\": \"BSStatusInquiryPOSAKey\",\n\t\"1487\": \"BSStatusInquiryPOSAKeyResponse\",\n\t\"1488\": \"BSValidateMoPaySignature\",\n\t\"1489\": \"BSValidateMoPaySignatureResponse\",\n\t\"1490\": \"BSMoPayConfirmProductDelivery\",\n\t\"1491\": \"BSMoPayConfirmProductDeliveryResponse\",\n\t\"1492\": \"BSGenerateMoPayMD5\",\n\t\"1493\": \"BSGenerateMoPayMD5Response\",\n\t\"1494\": \"BSBoaCompraConfirmProductDelivery\",\n\t\"1495\": \"BSBoaCompraConfirmProductDeliveryResponse\",\n\t\"1496\": \"BSGenerateBoaCompraMD5\",\n\t\"1497\": \"BSGenerateBoaCompraMD5Response\",\n\t\"1498\": \"BSCommitWPTxn\",\n\t\"1500\": \"BaseATS\",\n\t\"1501\": \"ATSStartStressTest\",\n\t\"1502\": \"ATSStopStressTest\",\n\t\"1503\": \"ATSRunFailServerTest\",\n\t\"1504\": \"ATSUFSPerfTestTask\",\n\t\"1505\": \"ATSUFSPerfTestResponse\",\n\t\"1506\": \"ATSCycleTCM\",\n\t\"1507\": \"ATSInitDRMSStressTest\",\n\t\"1508\": \"ATSCallTest\",\n\t\"1509\": \"ATSCallTestReply\",\n\t\"1510\": \"ATSStartExternalStress\",\n\t\"1511\": \"ATSExternalStressJobStart\",\n\t\"1512\": \"ATSExternalStressJobQueued\",\n\t\"1513\": \"ATSExternalStressJobRunning\",\n\t\"1514\": \"ATSExternalStressJobStopped\",\n\t\"1515\": \"ATSExternalStressJobStopAll\",\n\t\"1516\": \"ATSExternalStressActionResult\",\n\t\"1517\": \"ATSStarted\",\n\t\"1518\": \"ATSCSPerfTestTask\",\n\t\"1519\": \"ATSCSPerfTestResponse\",\n\t\"1600\": \"BaseDP\",\n\t\"1601\": \"DPSetPublishingState\",\n\t\"1602\": \"DPGamePlayedStats\",\n\t\"1603\": \"DPUniquePlayersStat\",\n\t\"1604\": \"DPStreamingUniquePlayersStat\",\n\t\"1605\": \"DPVacInfractionStats\",\n\t\"1606\": \"DPVacBanStats\",\n\t\"1607\": \"DPBlockingStats\",\n\t\"1608\": \"DPNatTraversalStats\",\n\t\"1609\": \"DPSteamUsageEvent\",\n\t\"1610\": \"DPVacCertBanStats\",\n\t\"1611\": \"DPVacCafeBanStats\",\n\t\"1612\": \"DPCloudStats\",\n\t\"1613\": \"DPAchievementStats\",\n\t\"1614\": \"DPAccountCreationStats\",\n\t\"1615\": \"DPGetPlayerCount\",\n\t\"1616\": \"DPGetPlayerCountResponse\",\n\t\"1617\": \"DPGameServersPlayersStats\",\n\t\"1618\": \"DPDownloadRateStatistics\",\n\t\"1619\": \"DPFacebookStatistics\",\n\t\"1620\": \"ClientDPCheckSpecialSurvey\",\n\t\"1621\": \"ClientDPCheckSpecialSurveyResponse\",\n\t\"1622\": \"ClientDPSendSpecialSurveyResponse\",\n\t\"1623\": \"ClientDPSendSpecialSurveyResponseReply\",\n\t\"1624\": \"DPStoreSaleStatistics\",\n\t\"1625\": \"ClientDPUpdateAppJobReport\",\n\t\"1627\": \"ClientDPSteam2AppStarted\",\n\t\"1626\": \"DPUpdateContentEvent\",\n\t\"1628\": \"DPPartnerMicroTxns\",\n\t\"1629\": \"DPPartnerMicroTxnsResponse\",\n\t\"1630\": \"ClientDPContentStatsReport\",\n\t\"1631\": \"DPVRUniquePlayersStat\",\n\t\"1700\": \"BaseCM\",\n\t\"1701\": \"CMSetAllowState\",\n\t\"1702\": \"CMSpewAllowState\",\n\t\"1703\": \"CMAppInfoResponseDeprecated\",\n\t\"1800\": \"BaseDSS\",\n\t\"1801\": \"DSSNewFile\",\n\t\"1802\": \"DSSCurrentFileList\",\n\t\"1803\": \"DSSSynchList\",\n\t\"1804\": \"DSSSynchListResponse\",\n\t\"1805\": \"DSSSynchSubscribe\",\n\t\"1806\": \"DSSSynchUnsubscribe\",\n\t\"1900\": \"BaseEPM\",\n\t\"1901\": \"EPMStartProcess\",\n\t\"1902\": \"EPMStopProcess\",\n\t\"1903\": \"EPMRestartProcess\",\n\t\"2200\": \"GCSendClient\",\n\t\"2201\": \"AMRelayToGC\",\n\t\"2202\": \"GCUpdatePlayedState\",\n\t\"2203\": \"GCCmdRevive\",\n\t\"2204\": \"GCCmdBounce\",\n\t\"2205\": \"GCCmdForceBounce\",\n\t\"2206\": \"GCCmdDown\",\n\t\"2207\": \"GCCmdDeploy\",\n\t\"2208\": \"GCCmdDeployResponse\",\n\t\"2209\": \"GCCmdSwitch\",\n\t\"2210\": \"AMRefreshSessions\",\n\t\"2211\": \"GCUpdateGSState\",\n\t\"2212\": \"GCAchievementAwarded\",\n\t\"2213\": \"GCSystemMessage\",\n\t\"2214\": \"GCValidateSession\",\n\t\"2215\": \"GCValidateSessionResponse\",\n\t\"2216\": \"GCCmdStatus\",\n\t\"2217\": \"GCRegisterWebInterfaces_Deprecated\",\n\t\"2218\": \"GCGetAccountDetails_DEPRECATED\",\n\t\"2219\": \"GCInterAppMessage\",\n\t\"2220\": \"GCGetEmailTemplate\",\n\t\"2221\": \"GCGetEmailTemplateResponse\",\n\t\"2222\": \"GCHRelay\",\n\t\"2223\": \"GCHRelayToClient\",\n\t\"2224\": \"GCHUpdateSession\",\n\t\"2225\": \"GCHRequestUpdateSession\",\n\t\"2226\": \"GCHRequestStatus\",\n\t\"2227\": \"GCHRequestStatusResponse\",\n\t\"2228\": \"GCHAccountVacStatusChange\",\n\t\"2229\": \"GCHSpawnGC\",\n\t\"2230\": \"GCHSpawnGCResponse\",\n\t\"2231\": \"GCHKillGC\",\n\t\"2232\": \"GCHKillGCResponse\",\n\t\"2233\": \"GCHAccountTradeBanStatusChange\",\n\t\"2234\": \"GCHAccountLockStatusChange\",\n\t\"2235\": \"GCHVacVerificationChange\",\n\t\"2236\": \"GCHAccountPhoneNumberChange\",\n\t\"2237\": \"GCHAccountTwoFactorChange\",\n\t\"2500\": \"BaseP2P\",\n\t\"2502\": \"P2PIntroducerMessage\",\n\t\"2900\": \"BaseSM\",\n\t\"2902\": \"SMExpensiveReport\",\n\t\"2903\": \"SMHourlyReport\",\n\t\"2904\": \"SMFishingReport\",\n\t\"2905\": \"SMPartitionRenames\",\n\t\"2906\": \"SMMonitorSpace\",\n\t\"2907\": \"SMGetSchemaConversionResults\",\n\t\"2908\": \"SMGetSchemaConversionResultsResponse\",\n\t\"3000\": \"FailServer\",\n\t\"3001\": \"JobHeartbeatTest\",\n\t\"3002\": \"JobHeartbeatTestResponse\",\n\t\"3100\": \"BaseFTSRange\",\n\t\"3101\": \"FTSGetBrowseCounts\",\n\t\"3102\": \"FTSGetBrowseCountsResponse\",\n\t\"3103\": \"FTSBrowseClans\",\n\t\"3104\": \"FTSBrowseClansResponse\",\n\t\"3105\": \"FTSSearchClansByLocation\",\n\t\"3106\": \"FTSSearchClansByLocationResponse\",\n\t\"3107\": \"FTSSearchPlayersByLocation\",\n\t\"3108\": \"FTSSearchPlayersByLocationResponse\",\n\t\"3109\": \"FTSClanDeleted\",\n\t\"3110\": \"FTSSearch\",\n\t\"3111\": \"FTSSearchResponse\",\n\t\"3112\": \"FTSSearchStatus\",\n\t\"3113\": \"FTSSearchStatusResponse\",\n\t\"3114\": \"FTSGetGSPlayStats\",\n\t\"3115\": \"FTSGetGSPlayStatsResponse\",\n\t\"3116\": \"FTSGetGSPlayStatsForServer\",\n\t\"3117\": \"FTSGetGSPlayStatsForServerResponse\",\n\t\"3118\": \"FTSReportIPUpdates\",\n\t\"3150\": \"BaseCCSRange\",\n\t\"3151\": \"CCSGetComments\",\n\t\"3152\": \"CCSGetCommentsResponse\",\n\t\"3153\": \"CCSAddComment\",\n\t\"3154\": \"CCSAddCommentResponse\",\n\t\"3155\": \"CCSDeleteComment\",\n\t\"3156\": \"CCSDeleteCommentResponse\",\n\t\"3157\": \"CCSPreloadComments\",\n\t\"3158\": \"CCSNotifyCommentCount\",\n\t\"3159\": \"CCSGetCommentsForNews\",\n\t\"3160\": \"CCSGetCommentsForNewsResponse\",\n\t\"3161\": \"CCSDeleteAllCommentsByAuthor\",\n\t\"3162\": \"CCSDeleteAllCommentsByAuthorResponse\",\n\t\"3200\": \"BaseLBSRange\",\n\t\"3201\": \"LBSSetScore\",\n\t\"3202\": \"LBSSetScoreResponse\",\n\t\"3203\": \"LBSFindOrCreateLB\",\n\t\"3204\": \"LBSFindOrCreateLBResponse\",\n\t\"3205\": \"LBSGetLBEntries\",\n\t\"3206\": \"LBSGetLBEntriesResponse\",\n\t\"3207\": \"LBSGetLBList\",\n\t\"3208\": \"LBSGetLBListResponse\",\n\t\"3209\": \"LBSSetLBDetails\",\n\t\"3210\": \"LBSDeleteLB\",\n\t\"3211\": \"LBSDeleteLBEntry\",\n\t\"3212\": \"LBSResetLB\",\n\t\"3213\": \"LBSResetLBResponse\",\n\t\"3214\": \"LBSDeleteLBResponse\",\n\t\"3400\": \"BaseOGS\",\n\t\"3401\": \"OGSBeginSession\",\n\t\"3402\": \"OGSBeginSessionResponse\",\n\t\"3403\": \"OGSEndSession\",\n\t\"3404\": \"OGSEndSessionResponse\",\n\t\"3406\": \"OGSWriteAppSessionRow\",\n\t\"3600\": \"BaseBRP\",\n\t\"3601\": \"BRPStartShippingJobs\",\n\t\"3602\": \"BRPProcessUSBankReports\",\n\t\"3603\": \"BRPProcessGCReports\",\n\t\"3604\": \"BRPProcessPPReports\",\n\t\"3605\": \"BRPSettleNOVA\",\n\t\"3606\": \"BRPSettleCB\",\n\t\"3607\": \"BRPCommitGC\",\n\t\"3608\": \"BRPCommitGCResponse\",\n\t\"3609\": \"BRPFindHungTransactions\",\n\t\"3610\": \"BRPCheckFinanceCloseOutDate\",\n\t\"3611\": \"BRPProcessLicenses\",\n\t\"3612\": \"BRPProcessLicensesResponse\",\n\t\"3613\": \"BRPRemoveExpiredPaymentData\",\n\t\"3614\": \"BRPRemoveExpiredPaymentDataResponse\",\n\t\"3615\": \"BRPConvertToCurrentKeys\",\n\t\"3616\": \"BRPConvertToCurrentKeysResponse\",\n\t\"3617\": \"BRPPruneCardUsageStats\",\n\t\"3618\": \"BRPPruneCardUsageStatsResponse\",\n\t\"3619\": \"BRPCheckActivationCodes\",\n\t\"3620\": \"BRPCheckActivationCodesResponse\",\n\t\"3621\": \"BRPCommitWP\",\n\t\"3622\": \"BRPCommitWPResponse\",\n\t\"3623\": \"BRPProcessWPReports\",\n\t\"3624\": \"BRPProcessPaymentRules\",\n\t\"3625\": \"BRPProcessPartnerPayments\",\n\t\"3626\": \"BRPCheckSettlementReports\",\n\t\"3628\": \"BRPPostTaxToAvalara\",\n\t\"3629\": \"BRPPostTransactionTax\",\n\t\"3630\": \"BRPPostTransactionTaxResponse\",\n\t\"3631\": \"BRPProcessIMReports\",\n\t\"4000\": \"BaseAMRange2\",\n\t\"4001\": \"AMCreateChat\",\n\t\"4002\": \"AMCreateChatResponse\",\n\t\"4003\": \"AMUpdateChatMetadata\",\n\t\"4004\": \"AMPublishChatMetadata\",\n\t\"4005\": \"AMSetProfileURL\",\n\t\"4006\": \"AMGetAccountEmailAddress\",\n\t\"4007\": \"AMGetAccountEmailAddressResponse\",\n\t\"4008\": \"AMRequestClanData\",\n\t\"4009\": \"AMRouteToClients\",\n\t\"4010\": \"AMLeaveClan\",\n\t\"4011\": \"AMClanPermissions\",\n\t\"4012\": \"AMClanPermissionsResponse\",\n\t\"4013\": \"AMCreateClanEvent\",\n\t\"4014\": \"AMCreateClanEventResponse\",\n\t\"4015\": \"AMUpdateClanEvent\",\n\t\"4016\": \"AMUpdateClanEventResponse\",\n\t\"4017\": \"AMGetClanEvents\",\n\t\"4018\": \"AMGetClanEventsResponse\",\n\t\"4019\": \"AMDeleteClanEvent\",\n\t\"4020\": \"AMDeleteClanEventResponse\",\n\t\"4021\": \"AMSetClanPermissionSettings\",\n\t\"4022\": \"AMSetClanPermissionSettingsResponse\",\n\t\"4023\": \"AMGetClanPermissionSettings\",\n\t\"4024\": \"AMGetClanPermissionSettingsResponse\",\n\t\"4025\": \"AMPublishChatRoomInfo\",\n\t\"4026\": \"ClientChatRoomInfo\",\n\t\"4027\": \"AMCreateClanAnnouncement\",\n\t\"4028\": \"AMCreateClanAnnouncementResponse\",\n\t\"4029\": \"AMUpdateClanAnnouncement\",\n\t\"4030\": \"AMUpdateClanAnnouncementResponse\",\n\t\"4031\": \"AMGetClanAnnouncementsCount\",\n\t\"4032\": \"AMGetClanAnnouncementsCountResponse\",\n\t\"4033\": \"AMGetClanAnnouncements\",\n\t\"4034\": \"AMGetClanAnnouncementsResponse\",\n\t\"4035\": \"AMDeleteClanAnnouncement\",\n\t\"4036\": \"AMDeleteClanAnnouncementResponse\",\n\t\"4037\": \"AMGetSingleClanAnnouncement\",\n\t\"4038\": \"AMGetSingleClanAnnouncementResponse\",\n\t\"4039\": \"AMGetClanHistory\",\n\t\"4040\": \"AMGetClanHistoryResponse\",\n\t\"4041\": \"AMGetClanPermissionBits\",\n\t\"4042\": \"AMGetClanPermissionBitsResponse\",\n\t\"4043\": \"AMSetClanPermissionBits\",\n\t\"4044\": \"AMSetClanPermissionBitsResponse\",\n\t\"4045\": \"AMSessionInfoRequest\",\n\t\"4046\": \"AMSessionInfoResponse\",\n\t\"4047\": \"AMValidateWGToken\",\n\t\"4048\": \"AMGetSingleClanEvent\",\n\t\"4049\": \"AMGetSingleClanEventResponse\",\n\t\"4050\": \"AMGetClanRank\",\n\t\"4051\": \"AMGetClanRankResponse\",\n\t\"4052\": \"AMSetClanRank\",\n\t\"4053\": \"AMSetClanRankResponse\",\n\t\"4054\": \"AMGetClanPOTW\",\n\t\"4055\": \"AMGetClanPOTWResponse\",\n\t\"4056\": \"AMSetClanPOTW\",\n\t\"4057\": \"AMSetClanPOTWResponse\",\n\t\"4058\": \"AMRequestChatMetadata\",\n\t\"4059\": \"AMDumpUser\",\n\t\"4060\": \"AMKickUserFromClan\",\n\t\"4061\": \"AMAddFounderToClan\",\n\t\"4062\": \"AMValidateWGTokenResponse\",\n\t\"4063\": \"AMSetCommunityState\",\n\t\"4064\": \"AMSetAccountDetails\",\n\t\"4065\": \"AMGetChatBanList\",\n\t\"4066\": \"AMGetChatBanListResponse\",\n\t\"4067\": \"AMUnBanFromChat\",\n\t\"4068\": \"AMSetClanDetails\",\n\t\"4069\": \"AMGetAccountLinks\",\n\t\"4070\": \"AMGetAccountLinksResponse\",\n\t\"4071\": \"AMSetAccountLinks\",\n\t\"4072\": \"AMSetAccountLinksResponse\",\n\t\"4073\": \"AMGetUserGameStats\",\n\t\"4074\": \"AMGetUserGameStatsResponse\",\n\t\"4075\": \"AMCheckClanMembership\",\n\t\"4076\": \"AMGetClanMembers\",\n\t\"4077\": \"AMGetClanMembersResponse\",\n\t\"4078\": \"AMJoinPublicClan\",\n\t\"4079\": \"AMNotifyChatOfClanChange\",\n\t\"4080\": \"AMResubmitPurchase\",\n\t\"4081\": \"AMAddFriend\",\n\t\"4082\": \"AMAddFriendResponse\",\n\t\"4083\": \"AMRemoveFriend\",\n\t\"4084\": \"AMDumpClan\",\n\t\"4085\": \"AMChangeClanOwner\",\n\t\"4086\": \"AMCancelEasyCollect\",\n\t\"4087\": \"AMCancelEasyCollectResponse\",\n\t\"4088\": \"AMGetClanMembershipList\",\n\t\"4089\": \"AMGetClanMembershipListResponse\",\n\t\"4090\": \"AMClansInCommon\",\n\t\"4091\": \"AMClansInCommonResponse\",\n\t\"4092\": \"AMIsValidAccountID\",\n\t\"4093\": \"AMConvertClan\",\n\t\"4094\": \"AMGetGiftTargetListRelay\",\n\t\"4095\": \"AMWipeFriendsList\",\n\t\"4096\": \"AMSetIgnored\",\n\t\"4097\": \"AMClansInCommonCountResponse\",\n\t\"4098\": \"AMFriendsList\",\n\t\"4099\": \"AMFriendsListResponse\",\n\t\"4100\": \"AMFriendsInCommon\",\n\t\"4101\": \"AMFriendsInCommonResponse\",\n\t\"4102\": \"AMFriendsInCommonCountResponse\",\n\t\"4103\": \"AMClansInCommonCount\",\n\t\"4104\": \"AMChallengeVerdict\",\n\t\"4105\": \"AMChallengeNotification\",\n\t\"4106\": \"AMFindGSByIP\",\n\t\"4107\": \"AMFoundGSByIP\",\n\t\"4108\": \"AMGiftRevoked\",\n\t\"4109\": \"AMCreateAccountRecord\",\n\t\"4110\": \"AMUserClanList\",\n\t\"4111\": \"AMUserClanListResponse\",\n\t\"4112\": \"AMGetAccountDetails2\",\n\t\"4113\": \"AMGetAccountDetailsResponse2\",\n\t\"4114\": \"AMSetCommunityProfileSettings\",\n\t\"4115\": \"AMSetCommunityProfileSettingsResponse\",\n\t\"4116\": \"AMGetCommunityPrivacyState\",\n\t\"4117\": \"AMGetCommunityPrivacyStateResponse\",\n\t\"4118\": \"AMCheckClanInviteRateLimiting\",\n\t\"4119\": \"AMGetUserAchievementStatus\",\n\t\"4120\": \"AMGetIgnored\",\n\t\"4121\": \"AMGetIgnoredResponse\",\n\t\"4122\": \"AMSetIgnoredResponse\",\n\t\"4123\": \"AMSetFriendRelationshipNone\",\n\t\"4124\": \"AMGetFriendRelationship\",\n\t\"4125\": \"AMGetFriendRelationshipResponse\",\n\t\"4126\": \"AMServiceModulesCache\",\n\t\"4127\": \"AMServiceModulesCall\",\n\t\"4128\": \"AMServiceModulesCallResponse\",\n\t\"4129\": \"AMGetCaptchaDataForIP\",\n\t\"4130\": \"AMGetCaptchaDataForIPResponse\",\n\t\"4131\": \"AMValidateCaptchaDataForIP\",\n\t\"4132\": \"AMValidateCaptchaDataForIPResponse\",\n\t\"4133\": \"AMTrackFailedAuthByIP\",\n\t\"4134\": \"AMGetCaptchaDataByGID\",\n\t\"4135\": \"AMGetCaptchaDataByGIDResponse\",\n\t\"4136\": \"AMGetLobbyList\",\n\t\"4137\": \"AMGetLobbyListResponse\",\n\t\"4138\": \"AMGetLobbyMetadata\",\n\t\"4139\": \"AMGetLobbyMetadataResponse\",\n\t\"4140\": \"CommunityAddFriendNews\",\n\t\"4141\": \"AMAddClanNews\",\n\t\"4142\": \"AMWriteNews\",\n\t\"4143\": \"AMFindClanUser\",\n\t\"4144\": \"AMFindClanUserResponse\",\n\t\"4145\": \"AMBanFromChat\",\n\t\"4146\": \"AMGetUserHistoryResponse\",\n\t\"4147\": \"AMGetUserNewsSubscriptions\",\n\t\"4148\": \"AMGetUserNewsSubscriptionsResponse\",\n\t\"4149\": \"AMSetUserNewsSubscriptions\",\n\t\"4150\": \"AMGetUserNews\",\n\t\"4151\": \"AMGetUserNewsResponse\",\n\t\"4152\": \"AMSendQueuedEmails\",\n\t\"4153\": \"AMSetLicenseFlags\",\n\t\"4154\": \"AMGetUserHistory\",\n\t\"4155\": \"CommunityDeleteUserNews\",\n\t\"4156\": \"AMAllowUserFilesRequest\",\n\t\"4157\": \"AMAllowUserFilesResponse\",\n\t\"4158\": \"AMGetAccountStatus\",\n\t\"4159\": \"AMGetAccountStatusResponse\",\n\t\"4160\": \"AMEditBanReason\",\n\t\"4161\": \"AMCheckClanMembershipResponse\",\n\t\"4162\": \"AMProbeClanMembershipList\",\n\t\"4163\": \"AMProbeClanMembershipListResponse\",\n\t\"4165\": \"AMGetFriendsLobbies\",\n\t\"4166\": \"AMGetFriendsLobbiesResponse\",\n\t\"4172\": \"AMGetUserFriendNewsResponse\",\n\t\"4173\": \"CommunityGetUserFriendNews\",\n\t\"4174\": \"AMGetUserClansNewsResponse\",\n\t\"4175\": \"AMGetUserClansNews\",\n\t\"4176\": \"AMStoreInitPurchase\",\n\t\"4177\": \"AMStoreInitPurchaseResponse\",\n\t\"4178\": \"AMStoreGetFinalPrice\",\n\t\"4179\": \"AMStoreGetFinalPriceResponse\",\n\t\"4180\": \"AMStoreCompletePurchase\",\n\t\"4181\": \"AMStoreCancelPurchase\",\n\t\"4182\": \"AMStorePurchaseResponse\",\n\t\"4183\": \"AMCreateAccountRecordInSteam3\",\n\t\"4184\": \"AMGetPreviousCBAccount\",\n\t\"4185\": \"AMGetPreviousCBAccountResponse\",\n\t\"4186\": \"AMUpdateBillingAddress\",\n\t\"4187\": \"AMUpdateBillingAddressResponse\",\n\t\"4188\": \"AMGetBillingAddress\",\n\t\"4189\": \"AMGetBillingAddressResponse\",\n\t\"4190\": \"AMGetUserLicenseHistory\",\n\t\"4191\": \"AMGetUserLicenseHistoryResponse\",\n\t\"4194\": \"AMSupportChangePassword\",\n\t\"4195\": \"AMSupportChangeEmail\",\n\t\"4196\": \"AMSupportChangeSecretQA\",\n\t\"4197\": \"AMResetUserVerificationGSByIP\",\n\t\"4198\": \"AMUpdateGSPlayStats\",\n\t\"4199\": \"AMSupportEnableOrDisable\",\n\t\"4200\": \"AMGetComments\",\n\t\"4201\": \"AMGetCommentsResponse\",\n\t\"4202\": \"AMAddComment\",\n\t\"4203\": \"AMAddCommentResponse\",\n\t\"4204\": \"AMDeleteComment\",\n\t\"4205\": \"AMDeleteCommentResponse\",\n\t\"4206\": \"AMGetPurchaseStatus\",\n\t\"4209\": \"AMSupportIsAccountEnabled\",\n\t\"4210\": \"AMSupportIsAccountEnabledResponse\",\n\t\"4211\": \"AMGetUserStats\",\n\t\"4212\": \"AMSupportKickSession\",\n\t\"4213\": \"AMGSSearch\",\n\t\"4216\": \"MarketingMessageUpdate\",\n\t\"4219\": \"AMRouteFriendMsg\",\n\t\"4220\": \"AMTicketAuthRequestOrResponse\",\n\t\"4222\": \"AMVerifyDepotManagementRights\",\n\t\"4223\": \"AMVerifyDepotManagementRightsResponse\",\n\t\"4224\": \"AMAddFreeLicense\",\n\t\"4225\": \"AMGetUserFriendsMinutesPlayed\",\n\t\"4226\": \"AMGetUserFriendsMinutesPlayedResponse\",\n\t\"4227\": \"AMGetUserMinutesPlayed\",\n\t\"4228\": \"AMGetUserMinutesPlayedResponse\",\n\t\"4231\": \"AMValidateEmailLink\",\n\t\"4232\": \"AMValidateEmailLinkResponse\",\n\t\"4234\": \"AMAddUsersToMarketingTreatment\",\n\t\"4236\": \"AMStoreUserStats\",\n\t\"4237\": \"AMGetUserGameplayInfo\",\n\t\"4238\": \"AMGetUserGameplayInfoResponse\",\n\t\"4239\": \"AMGetCardList\",\n\t\"4240\": \"AMGetCardListResponse\",\n\t\"4241\": \"AMDeleteStoredCard\",\n\t\"4242\": \"AMRevokeLegacyGameKeys\",\n\t\"4244\": \"AMGetWalletDetails\",\n\t\"4245\": \"AMGetWalletDetailsResponse\",\n\t\"4246\": \"AMDeleteStoredPaymentInfo\",\n\t\"4247\": \"AMGetStoredPaymentSummary\",\n\t\"4248\": \"AMGetStoredPaymentSummaryResponse\",\n\t\"4249\": \"AMGetWalletConversionRate\",\n\t\"4250\": \"AMGetWalletConversionRateResponse\",\n\t\"4251\": \"AMConvertWallet\",\n\t\"4252\": \"AMConvertWalletResponse\",\n\t\"4253\": \"AMRelayGetFriendsWhoPlayGame\",\n\t\"4254\": \"AMRelayGetFriendsWhoPlayGameResponse\",\n\t\"4255\": \"AMSetPreApproval\",\n\t\"4256\": \"AMSetPreApprovalResponse\",\n\t\"4257\": \"AMMarketingTreatmentUpdate\",\n\t\"4258\": \"AMCreateRefund\",\n\t\"4259\": \"AMCreateRefundResponse\",\n\t\"4260\": \"AMCreateChargeback\",\n\t\"4261\": \"AMCreateChargebackResponse\",\n\t\"4262\": \"AMCreateDispute\",\n\t\"4263\": \"AMCreateDisputeResponse\",\n\t\"4264\": \"AMClearDispute\",\n\t\"4265\": \"AMClearDisputeResponse\",\n\t\"4266\": \"AMPlayerNicknameList\",\n\t\"4267\": \"AMPlayerNicknameListResponse\",\n\t\"4268\": \"AMSetDRMTestConfig\",\n\t\"4269\": \"AMGetUserCurrentGameInfo\",\n\t\"4270\": \"AMGetUserCurrentGameInfoResponse\",\n\t\"4271\": \"AMGetGSPlayerList\",\n\t\"4272\": \"AMGetGSPlayerListResponse\",\n\t\"4275\": \"AMUpdatePersonaStateCache\",\n\t\"4276\": \"AMGetGameMembers\",\n\t\"4277\": \"AMGetGameMembersResponse\",\n\t\"4278\": \"AMGetSteamIDForMicroTxn\",\n\t\"4279\": \"AMGetSteamIDForMicroTxnResponse\",\n\t\"4280\": \"AMAddPublisherUser\",\n\t\"4281\": \"AMRemovePublisherUser\",\n\t\"4282\": \"AMGetUserLicenseList\",\n\t\"4283\": \"AMGetUserLicenseListResponse\",\n\t\"4284\": \"AMReloadGameGroupPolicy\",\n\t\"4285\": \"AMAddFreeLicenseResponse\",\n\t\"4286\": \"AMVACStatusUpdate\",\n\t\"4287\": \"AMGetAccountDetails\",\n\t\"4288\": \"AMGetAccountDetailsResponse\",\n\t\"4289\": \"AMGetPlayerLinkDetails\",\n\t\"4290\": \"AMGetPlayerLinkDetailsResponse\",\n\t\"4291\": \"AMSubscribeToPersonaFeed\",\n\t\"4292\": \"AMGetUserVacBanList\",\n\t\"4293\": \"AMGetUserVacBanListResponse\",\n\t\"4294\": \"AMGetAccountFlagsForWGSpoofing\",\n\t\"4295\": \"AMGetAccountFlagsForWGSpoofingResponse\",\n\t\"4296\": \"AMGetFriendsWishlistInfo\",\n\t\"4297\": \"AMGetFriendsWishlistInfoResponse\",\n\t\"4298\": \"AMGetClanOfficers\",\n\t\"4299\": \"AMGetClanOfficersResponse\",\n\t\"4300\": \"AMNameChange\",\n\t\"4301\": \"AMGetNameHistory\",\n\t\"4302\": \"AMGetNameHistoryResponse\",\n\t\"4305\": \"AMUpdateProviderStatus\",\n\t\"4306\": \"AMClearPersonaMetadataBlob\",\n\t\"4307\": \"AMSupportRemoveAccountSecurity\",\n\t\"4308\": \"AMIsAccountInCaptchaGracePeriod\",\n\t\"4309\": \"AMIsAccountInCaptchaGracePeriodResponse\",\n\t\"4310\": \"AMAccountPS3Unlink\",\n\t\"4311\": \"AMAccountPS3UnlinkResponse\",\n\t\"4312\": \"AMStoreUserStatsResponse\",\n\t\"4313\": \"AMGetAccountPSNInfo\",\n\t\"4314\": \"AMGetAccountPSNInfoResponse\",\n\t\"4315\": \"AMAuthenticatedPlayerList\",\n\t\"4316\": \"AMGetUserGifts\",\n\t\"4317\": \"AMGetUserGiftsResponse\",\n\t\"4320\": \"AMTransferLockedGifts\",\n\t\"4321\": \"AMTransferLockedGiftsResponse\",\n\t\"4322\": \"AMPlayerHostedOnGameServer\",\n\t\"4323\": \"AMGetAccountBanInfo\",\n\t\"4324\": \"AMGetAccountBanInfoResponse\",\n\t\"4325\": \"AMRecordBanEnforcement\",\n\t\"4326\": \"AMRollbackGiftTransfer\",\n\t\"4327\": \"AMRollbackGiftTransferResponse\",\n\t\"4328\": \"AMHandlePendingTransaction\",\n\t\"4329\": \"AMRequestClanDetails\",\n\t\"4330\": \"AMDeleteStoredPaypalAgreement\",\n\t\"4331\": \"AMGameServerUpdate\",\n\t\"4332\": \"AMGameServerRemove\",\n\t\"4333\": \"AMGetPaypalAgreements\",\n\t\"4334\": \"AMGetPaypalAgreementsResponse\",\n\t\"4335\": \"AMGameServerPlayerCompatibilityCheck\",\n\t\"4336\": \"AMGameServerPlayerCompatibilityCheckResponse\",\n\t\"4337\": \"AMRenewLicense\",\n\t\"4338\": \"AMGetAccountCommunityBanInfo\",\n\t\"4339\": \"AMGetAccountCommunityBanInfoResponse\",\n\t\"4340\": \"AMGameServerAccountChangePassword\",\n\t\"4341\": \"AMGameServerAccountDeleteAccount\",\n\t\"4342\": \"AMRenewAgreement\",\n\t\"4343\": \"AMSendEmail\",\n\t\"4344\": \"AMXsollaPayment\",\n\t\"4345\": \"AMXsollaPaymentResponse\",\n\t\"4346\": \"AMAcctAllowedToPurchase\",\n\t\"4347\": \"AMAcctAllowedToPurchaseResponse\",\n\t\"4348\": \"AMSwapKioskDeposit\",\n\t\"4349\": \"AMSwapKioskDepositResponse\",\n\t\"4350\": \"AMSetUserGiftUnowned\",\n\t\"4351\": \"AMSetUserGiftUnownedResponse\",\n\t\"4352\": \"AMClaimUnownedUserGift\",\n\t\"4353\": \"AMClaimUnownedUserGiftResponse\",\n\t\"4354\": \"AMSetClanName\",\n\t\"4355\": \"AMSetClanNameResponse\",\n\t\"4356\": \"AMGrantCoupon\",\n\t\"4357\": \"AMGrantCouponResponse\",\n\t\"4358\": \"AMIsPackageRestrictedInUserCountry\",\n\t\"4359\": \"AMIsPackageRestrictedInUserCountryResponse\",\n\t\"4360\": \"AMHandlePendingTransactionResponse\",\n\t\"4361\": \"AMGrantGuestPasses2\",\n\t\"4362\": \"AMGrantGuestPasses2Response\",\n\t\"4363\": \"AMSessionQuery\",\n\t\"4364\": \"AMSessionQueryResponse\",\n\t\"4365\": \"AMGetPlayerBanDetails\",\n\t\"4366\": \"AMGetPlayerBanDetailsResponse\",\n\t\"4367\": \"AMFinalizePurchase\",\n\t\"4368\": \"AMFinalizePurchaseResponse\",\n\t\"4372\": \"AMPersonaChangeResponse\",\n\t\"4373\": \"AMGetClanDetailsForForumCreation\",\n\t\"4374\": \"AMGetClanDetailsForForumCreationResponse\",\n\t\"4375\": \"AMGetPendingNotificationCount\",\n\t\"4376\": \"AMGetPendingNotificationCountResponse\",\n\t\"4377\": \"AMPasswordHashUpgrade\",\n\t\"4378\": \"AMMoPayPayment\",\n\t\"4379\": \"AMMoPayPaymentResponse\",\n\t\"4380\": \"AMBoaCompraPayment\",\n\t\"4381\": \"AMBoaCompraPaymentResponse\",\n\t\"4382\": \"AMExpireCaptchaByGID\",\n\t\"4383\": \"AMCompleteExternalPurchase\",\n\t\"4384\": \"AMCompleteExternalPurchaseResponse\",\n\t\"4385\": \"AMResolveNegativeWalletCredits\",\n\t\"4386\": \"AMResolveNegativeWalletCreditsResponse\",\n\t\"4387\": \"AMPayelpPayment\",\n\t\"4388\": \"AMPayelpPaymentResponse\",\n\t\"4389\": \"AMPlayerGetClanBasicDetails\",\n\t\"4390\": \"AMPlayerGetClanBasicDetailsResponse\",\n\t\"4391\": \"AMMOLPayment\",\n\t\"4392\": \"AMMOLPaymentResponse\",\n\t\"4393\": \"GetUserIPCountry\",\n\t\"4394\": \"GetUserIPCountryResponse\",\n\t\"4395\": \"NotificationOfSuspiciousActivity\",\n\t\"4396\": \"AMDegicaPayment\",\n\t\"4397\": \"AMDegicaPaymentResponse\",\n\t\"4398\": \"AMEClubPayment\",\n\t\"4399\": \"AMEClubPaymentResponse\",\n\t\"4400\": \"AMPayPalPaymentsHubPayment\",\n\t\"4401\": \"AMPayPalPaymentsHubPaymentResponse\",\n\t\"4402\": \"AMTwoFactorRecoverAuthenticatorRequest\",\n\t\"4403\": \"AMTwoFactorRecoverAuthenticatorResponse\",\n\t\"4404\": \"AMSmart2PayPayment\",\n\t\"4405\": \"AMSmart2PayPaymentResponse\",\n\t\"4406\": \"AMValidatePasswordResetCodeAndSendSmsRequest\",\n\t\"4407\": \"AMValidatePasswordResetCodeAndSendSmsResponse\",\n\t\"4408\": \"AMGetAccountResetDetailsRequest\",\n\t\"4409\": \"AMGetAccountResetDetailsResponse\",\n\t\"4410\": \"AMBitPayPayment\",\n\t\"4411\": \"AMBitPayPaymentResponse\",\n\t\"4412\": \"AMSendAccountInfoUpdate\",\n\t\"5000\": \"BasePSRange\",\n\t\"5001\": \"PSCreateShoppingCart\",\n\t\"5002\": \"PSCreateShoppingCartResponse\",\n\t\"5003\": \"PSIsValidShoppingCart\",\n\t\"5004\": \"PSIsValidShoppingCartResponse\",\n\t\"5005\": \"PSAddPackageToShoppingCart\",\n\t\"5006\": \"PSAddPackageToShoppingCartResponse\",\n\t\"5007\": \"PSRemoveLineItemFromShoppingCart\",\n\t\"5008\": \"PSRemoveLineItemFromShoppingCartResponse\",\n\t\"5009\": \"PSGetShoppingCartContents\",\n\t\"5010\": \"PSGetShoppingCartContentsResponse\",\n\t\"5011\": \"PSAddWalletCreditToShoppingCart\",\n\t\"5012\": \"PSAddWalletCreditToShoppingCartResponse\",\n\t\"5200\": \"BaseUFSRange\",\n\t\"5202\": \"ClientUFSUploadFileRequest\",\n\t\"5203\": \"ClientUFSUploadFileResponse\",\n\t\"5204\": \"ClientUFSUploadFileChunk\",\n\t\"5205\": \"ClientUFSUploadFileFinished\",\n\t\"5206\": \"ClientUFSGetFileListForApp\",\n\t\"5207\": \"ClientUFSGetFileListForAppResponse\",\n\t\"5210\": \"ClientUFSDownloadRequest\",\n\t\"5211\": \"ClientUFSDownloadResponse\",\n\t\"5212\": \"ClientUFSDownloadChunk\",\n\t\"5213\": \"ClientUFSLoginRequest\",\n\t\"5214\": \"ClientUFSLoginResponse\",\n\t\"5215\": \"UFSReloadPartitionInfo\",\n\t\"5216\": \"ClientUFSTransferHeartbeat\",\n\t\"5217\": \"UFSSynchronizeFile\",\n\t\"5218\": \"UFSSynchronizeFileResponse\",\n\t\"5219\": \"ClientUFSDeleteFileRequest\",\n\t\"5220\": \"ClientUFSDeleteFileResponse\",\n\t\"5221\": \"UFSDownloadRequest\",\n\t\"5222\": \"UFSDownloadResponse\",\n\t\"5223\": \"UFSDownloadChunk\",\n\t\"5226\": \"ClientUFSGetUGCDetails\",\n\t\"5227\": \"ClientUFSGetUGCDetailsResponse\",\n\t\"5228\": \"UFSUpdateFileFlags\",\n\t\"5229\": \"UFSUpdateFileFlagsResponse\",\n\t\"5230\": \"ClientUFSGetSingleFileInfo\",\n\t\"5231\": \"ClientUFSGetSingleFileInfoResponse\",\n\t\"5232\": \"ClientUFSShareFile\",\n\t\"5233\": \"ClientUFSShareFileResponse\",\n\t\"5234\": \"UFSReloadAccount\",\n\t\"5235\": \"UFSReloadAccountResponse\",\n\t\"5236\": \"UFSUpdateRecordBatched\",\n\t\"5237\": \"UFSUpdateRecordBatchedResponse\",\n\t\"5238\": \"UFSMigrateFile\",\n\t\"5239\": \"UFSMigrateFileResponse\",\n\t\"5240\": \"UFSGetUGCURLs\",\n\t\"5241\": \"UFSGetUGCURLsResponse\",\n\t\"5242\": \"UFSHttpUploadFileFinishRequest\",\n\t\"5243\": \"UFSHttpUploadFileFinishResponse\",\n\t\"5244\": \"UFSDownloadStartRequest\",\n\t\"5245\": \"UFSDownloadStartResponse\",\n\t\"5246\": \"UFSDownloadChunkRequest\",\n\t\"5247\": \"UFSDownloadChunkResponse\",\n\t\"5248\": \"UFSDownloadFinishRequest\",\n\t\"5249\": \"UFSDownloadFinishResponse\",\n\t\"5250\": \"UFSFlushURLCache\",\n\t\"5251\": \"UFSUploadCommit\",\n\t\"5252\": \"UFSUploadCommitResponse\",\n\t\"5253\": \"UFSMigrateFileAppID\",\n\t\"5254\": \"UFSMigrateFileAppIDResponse\",\n\t\"5400\": \"BaseClient2\",\n\t\"5401\": \"ClientRequestForgottenPasswordEmail\",\n\t\"5402\": \"ClientRequestForgottenPasswordEmailResponse\",\n\t\"5403\": \"ClientCreateAccountResponse\",\n\t\"5404\": \"ClientResetForgottenPassword\",\n\t\"5405\": \"ClientResetForgottenPasswordResponse\",\n\t\"5406\": \"ClientCreateAccount2\",\n\t\"5407\": \"ClientInformOfResetForgottenPassword\",\n\t\"5408\": \"ClientInformOfResetForgottenPasswordResponse\",\n\t\"5409\": \"ClientAnonUserLogOn_Deprecated\",\n\t\"5410\": \"ClientGamesPlayedWithDataBlob\",\n\t\"5411\": \"ClientUpdateUserGameInfo\",\n\t\"5412\": \"ClientFileToDownload\",\n\t\"5413\": \"ClientFileToDownloadResponse\",\n\t\"5414\": \"ClientLBSSetScore\",\n\t\"5415\": \"ClientLBSSetScoreResponse\",\n\t\"5416\": \"ClientLBSFindOrCreateLB\",\n\t\"5417\": \"ClientLBSFindOrCreateLBResponse\",\n\t\"5418\": \"ClientLBSGetLBEntries\",\n\t\"5419\": \"ClientLBSGetLBEntriesResponse\",\n\t\"5420\": \"ClientMarketingMessageUpdate\",\n\t\"5426\": \"ClientChatDeclined\",\n\t\"5427\": \"ClientFriendMsgIncoming\",\n\t\"5428\": \"ClientAuthList_Deprecated\",\n\t\"5429\": \"ClientTicketAuthComplete\",\n\t\"5430\": \"ClientIsLimitedAccount\",\n\t\"5431\": \"ClientRequestAuthList\",\n\t\"5432\": \"ClientAuthList\",\n\t\"5433\": \"ClientStat\",\n\t\"5434\": \"ClientP2PConnectionInfo\",\n\t\"5435\": \"ClientP2PConnectionFailInfo\",\n\t\"5436\": \"ClientGetNumberOfCurrentPlayers\",\n\t\"5437\": \"ClientGetNumberOfCurrentPlayersResponse\",\n\t\"5438\": \"ClientGetDepotDecryptionKey\",\n\t\"5439\": \"ClientGetDepotDecryptionKeyResponse\",\n\t\"5440\": \"GSPerformHardwareSurvey\",\n\t\"5441\": \"ClientGetAppBetaPasswords\",\n\t\"5442\": \"ClientGetAppBetaPasswordsResponse\",\n\t\"5443\": \"ClientEnableTestLicense\",\n\t\"5444\": \"ClientEnableTestLicenseResponse\",\n\t\"5445\": \"ClientDisableTestLicense\",\n\t\"5446\": \"ClientDisableTestLicenseResponse\",\n\t\"5448\": \"ClientRequestValidationMail\",\n\t\"5449\": \"ClientRequestValidationMailResponse\",\n\t\"5450\": \"ClientCheckAppBetaPassword\",\n\t\"5451\": \"ClientCheckAppBetaPasswordResponse\",\n\t\"5452\": \"ClientToGC\",\n\t\"5453\": \"ClientFromGC\",\n\t\"5454\": \"ClientRequestChangeMail\",\n\t\"5455\": \"ClientRequestChangeMailResponse\",\n\t\"5456\": \"ClientEmailAddrInfo\",\n\t\"5457\": \"ClientPasswordChange3\",\n\t\"5458\": \"ClientEmailChange3\",\n\t\"5459\": \"ClientPersonalQAChange3\",\n\t\"5460\": \"ClientResetForgottenPassword3\",\n\t\"5461\": \"ClientRequestForgottenPasswordEmail3\",\n\t\"5462\": \"ClientCreateAccount3\",\n\t\"5463\": \"ClientNewLoginKey\",\n\t\"5464\": \"ClientNewLoginKeyAccepted\",\n\t\"5465\": \"ClientLogOnWithHash_Deprecated\",\n\t\"5466\": \"ClientStoreUserStats2\",\n\t\"5467\": \"ClientStatsUpdated\",\n\t\"5468\": \"ClientActivateOEMLicense\",\n\t\"5469\": \"ClientRegisterOEMMachine\",\n\t\"5470\": \"ClientRegisterOEMMachineResponse\",\n\t\"5480\": \"ClientRequestedClientStats\",\n\t\"5481\": \"ClientStat2Int32\",\n\t\"5482\": \"ClientStat2\",\n\t\"5483\": \"ClientVerifyPassword\",\n\t\"5484\": \"ClientVerifyPasswordResponse\",\n\t\"5485\": \"ClientDRMDownloadRequest\",\n\t\"5486\": \"ClientDRMDownloadResponse\",\n\t\"5487\": \"ClientDRMFinalResult\",\n\t\"5488\": \"ClientGetFriendsWhoPlayGame\",\n\t\"5489\": \"ClientGetFriendsWhoPlayGameResponse\",\n\t\"5490\": \"ClientOGSBeginSession\",\n\t\"5491\": \"ClientOGSBeginSessionResponse\",\n\t\"5492\": \"ClientOGSEndSession\",\n\t\"5493\": \"ClientOGSEndSessionResponse\",\n\t\"5494\": \"ClientOGSWriteRow\",\n\t\"5495\": \"ClientDRMTest\",\n\t\"5496\": \"ClientDRMTestResult\",\n\t\"5500\": \"ClientServerUnavailable\",\n\t\"5501\": \"ClientServersAvailable\",\n\t\"5502\": \"ClientRegisterAuthTicketWithCM\",\n\t\"5503\": \"ClientGCMsgFailed\",\n\t\"5504\": \"ClientMicroTxnAuthRequest\",\n\t\"5505\": \"ClientMicroTxnAuthorize\",\n\t\"5506\": \"ClientMicroTxnAuthorizeResponse\",\n\t\"5507\": \"ClientAppMinutesPlayedData\",\n\t\"5508\": \"ClientGetMicroTxnInfo\",\n\t\"5509\": \"ClientGetMicroTxnInfoResponse\",\n\t\"5510\": \"ClientMarketingMessageUpdate2\",\n\t\"5511\": \"ClientDeregisterWithServer\",\n\t\"5512\": \"ClientSubscribeToPersonaFeed\",\n\t\"5514\": \"ClientLogon\",\n\t\"5515\": \"ClientGetClientDetails\",\n\t\"5516\": \"ClientGetClientDetailsResponse\",\n\t\"5517\": \"ClientReportOverlayDetourFailure\",\n\t\"5518\": \"ClientGetClientAppList\",\n\t\"5519\": \"ClientGetClientAppListResponse\",\n\t\"5520\": \"ClientInstallClientApp\",\n\t\"5521\": \"ClientInstallClientAppResponse\",\n\t\"5522\": \"ClientUninstallClientApp\",\n\t\"5523\": \"ClientUninstallClientAppResponse\",\n\t\"5524\": \"ClientSetClientAppUpdateState\",\n\t\"5525\": \"ClientSetClientAppUpdateStateResponse\",\n\t\"5526\": \"ClientRequestEncryptedAppTicket\",\n\t\"5527\": \"ClientRequestEncryptedAppTicketResponse\",\n\t\"5528\": \"ClientWalletInfoUpdate\",\n\t\"5529\": \"ClientLBSSetUGC\",\n\t\"5530\": \"ClientLBSSetUGCResponse\",\n\t\"5531\": \"ClientAMGetClanOfficers\",\n\t\"5532\": \"ClientAMGetClanOfficersResponse\",\n\t\"5533\": \"ClientCheckFileSignature\",\n\t\"5534\": \"ClientCheckFileSignatureResponse\",\n\t\"5535\": \"ClientFriendProfileInfo\",\n\t\"5536\": \"ClientFriendProfileInfoResponse\",\n\t\"5537\": \"ClientUpdateMachineAuth\",\n\t\"5538\": \"ClientUpdateMachineAuthResponse\",\n\t\"5539\": \"ClientReadMachineAuth\",\n\t\"5540\": \"ClientReadMachineAuthResponse\",\n\t\"5541\": \"ClientRequestMachineAuth\",\n\t\"5542\": \"ClientRequestMachineAuthResponse\",\n\t\"5543\": \"ClientScreenshotsChanged\",\n\t\"5544\": \"ClientEmailChange4\",\n\t\"5545\": \"ClientEmailChangeResponse4\",\n\t\"5546\": \"ClientGetCDNAuthToken\",\n\t\"5547\": \"ClientGetCDNAuthTokenResponse\",\n\t\"5548\": \"ClientDownloadRateStatistics\",\n\t\"5549\": \"ClientRequestAccountData\",\n\t\"5550\": \"ClientRequestAccountDataResponse\",\n\t\"5551\": \"ClientResetForgottenPassword4\",\n\t\"5552\": \"ClientHideFriend\",\n\t\"5553\": \"ClientFriendsGroupsList\",\n\t\"5554\": \"ClientGetClanActivityCounts\",\n\t\"5555\": \"ClientGetClanActivityCountsResponse\",\n\t\"5556\": \"ClientOGSReportString\",\n\t\"5557\": \"ClientOGSReportBug\",\n\t\"5558\": \"ClientSentLogs\",\n\t\"5559\": \"ClientLogonGameServer\",\n\t\"5560\": \"AMClientCreateFriendsGroup\",\n\t\"5561\": \"AMClientCreateFriendsGroupResponse\",\n\t\"5562\": \"AMClientDeleteFriendsGroup\",\n\t\"5563\": \"AMClientDeleteFriendsGroupResponse\",\n\t\"5564\": \"AMClientRenameFriendsGroup\",\n\t\"5565\": \"AMClientRenameFriendsGroupResponse\",\n\t\"5566\": \"AMClientAddFriendToGroup\",\n\t\"5567\": \"AMClientAddFriendToGroupResponse\",\n\t\"5568\": \"AMClientRemoveFriendFromGroup\",\n\t\"5569\": \"AMClientRemoveFriendFromGroupResponse\",\n\t\"5570\": \"ClientAMGetPersonaNameHistory\",\n\t\"5571\": \"ClientAMGetPersonaNameHistoryResponse\",\n\t\"5572\": \"ClientRequestFreeLicense\",\n\t\"5573\": \"ClientRequestFreeLicenseResponse\",\n\t\"5574\": \"ClientDRMDownloadRequestWithCrashData\",\n\t\"5575\": \"ClientAuthListAck\",\n\t\"5576\": \"ClientItemAnnouncements\",\n\t\"5577\": \"ClientRequestItemAnnouncements\",\n\t\"5578\": \"ClientFriendMsgEchoToSender\",\n\t\"5579\": \"ClientChangeSteamGuardOptions\",\n\t\"5580\": \"ClientChangeSteamGuardOptionsResponse\",\n\t\"5581\": \"ClientOGSGameServerPingSample\",\n\t\"5582\": \"ClientCommentNotifications\",\n\t\"5583\": \"ClientRequestCommentNotifications\",\n\t\"5584\": \"ClientPersonaChangeResponse\",\n\t\"5585\": \"ClientRequestWebAPIAuthenticateUserNonce\",\n\t\"5586\": \"ClientRequestWebAPIAuthenticateUserNonceResponse\",\n\t\"5587\": \"ClientPlayerNicknameList\",\n\t\"5588\": \"AMClientSetPlayerNickname\",\n\t\"5589\": \"AMClientSetPlayerNicknameResponse\",\n\t\"5590\": \"ClientCreateAccountProto\",\n\t\"5591\": \"ClientCreateAccountProtoResponse\",\n\t\"5592\": \"ClientGetNumberOfCurrentPlayersDP\",\n\t\"5593\": \"ClientGetNumberOfCurrentPlayersDPResponse\",\n\t\"5594\": \"ClientServiceMethod\",\n\t\"5595\": \"ClientServiceMethodResponse\",\n\t\"5596\": \"ClientFriendUserStatusPublished\",\n\t\"5597\": \"ClientCurrentUIMode\",\n\t\"5598\": \"ClientVanityURLChangedNotification\",\n\t\"5599\": \"ClientUserNotifications\",\n\t\"5600\": \"BaseDFS\",\n\t\"5601\": \"DFSGetFile\",\n\t\"5602\": \"DFSInstallLocalFile\",\n\t\"5603\": \"DFSConnection\",\n\t\"5604\": \"DFSConnectionReply\",\n\t\"5605\": \"ClientDFSAuthenticateRequest\",\n\t\"5606\": \"ClientDFSAuthenticateResponse\",\n\t\"5607\": \"ClientDFSEndSession\",\n\t\"5608\": \"DFSPurgeFile\",\n\t\"5609\": \"DFSRouteFile\",\n\t\"5610\": \"DFSGetFileFromServer\",\n\t\"5611\": \"DFSAcceptedResponse\",\n\t\"5612\": \"DFSRequestPingback\",\n\t\"5613\": \"DFSRecvTransmitFile\",\n\t\"5614\": \"DFSSendTransmitFile\",\n\t\"5615\": \"DFSRequestPingback2\",\n\t\"5616\": \"DFSResponsePingback2\",\n\t\"5617\": \"ClientDFSDownloadStatus\",\n\t\"5618\": \"DFSStartTransfer\",\n\t\"5619\": \"DFSTransferComplete\",\n\t\"5620\": \"DFSRouteFileResponse\",\n\t\"5800\": \"BaseMDS\",\n\t\"5801\": \"ClientMDSLoginRequest\",\n\t\"5802\": \"ClientMDSLoginResponse\",\n\t\"5803\": \"ClientMDSUploadManifestRequest\",\n\t\"5804\": \"ClientMDSUploadManifestResponse\",\n\t\"5805\": \"ClientMDSTransmitManifestDataChunk\",\n\t\"5806\": \"ClientMDSHeartbeat\",\n\t\"5807\": \"ClientMDSUploadDepotChunks\",\n\t\"5808\": \"ClientMDSUploadDepotChunksResponse\",\n\t\"5809\": \"ClientMDSInitDepotBuildRequest\",\n\t\"5810\": \"ClientMDSInitDepotBuildResponse\",\n\t\"5812\": \"AMToMDSGetDepotDecryptionKey\",\n\t\"5813\": \"MDSToAMGetDepotDecryptionKeyResponse\",\n\t\"5814\": \"MDSGetVersionsForDepot\",\n\t\"5815\": \"MDSGetVersionsForDepotResponse\",\n\t\"5816\": \"ClientMDSInitWorkshopBuildRequest\",\n\t\"5817\": \"ClientMDSInitWorkshopBuildResponse\",\n\t\"5818\": \"ClientMDSGetDepotManifest\",\n\t\"5819\": \"ClientMDSGetDepotManifestResponse\",\n\t\"5820\": \"ClientMDSGetDepotManifestChunk\",\n\t\"5823\": \"ClientMDSUploadRateTest\",\n\t\"5824\": \"ClientMDSUploadRateTestResponse\",\n\t\"5825\": \"MDSDownloadDepotChunksAck\",\n\t\"5826\": \"MDSContentServerStatsBroadcast\",\n\t\"5827\": \"MDSContentServerConfigRequest\",\n\t\"5828\": \"MDSContentServerConfig\",\n\t\"5829\": \"MDSGetDepotManifest\",\n\t\"5830\": \"MDSGetDepotManifestResponse\",\n\t\"5831\": \"MDSGetDepotManifestChunk\",\n\t\"5832\": \"MDSGetDepotChunk\",\n\t\"5833\": \"MDSGetDepotChunkResponse\",\n\t\"5834\": \"MDSGetDepotChunkChunk\",\n\t\"5835\": \"MDSUpdateContentServerConfig\",\n\t\"5836\": \"MDSGetServerListForUser\",\n\t\"5837\": \"MDSGetServerListForUserResponse\",\n\t\"5838\": \"ClientMDSRegisterAppBuild\",\n\t\"5839\": \"ClientMDSRegisterAppBuildResponse\",\n\t\"5840\": \"ClientMDSSetAppBuildLive\",\n\t\"5841\": \"ClientMDSSetAppBuildLiveResponse\",\n\t\"5842\": \"ClientMDSGetPrevDepotBuild\",\n\t\"5843\": \"ClientMDSGetPrevDepotBuildResponse\",\n\t\"5844\": \"MDSToCSFlushChunk\",\n\t\"5845\": \"ClientMDSSignInstallScript\",\n\t\"5846\": \"ClientMDSSignInstallScriptResponse\",\n\t\"5847\": \"MDSMigrateChunk\",\n\t\"5848\": \"MDSMigrateChunkResponse\",\n\t\"6200\": \"CSBase\",\n\t\"6201\": \"CSPing\",\n\t\"6202\": \"CSPingResponse\",\n\t\"6400\": \"GMSBase\",\n\t\"6401\": \"GMSGameServerReplicate\",\n\t\"6403\": \"ClientGMSServerQuery\",\n\t\"6404\": \"GMSClientServerQueryResponse\",\n\t\"6405\": \"AMGMSGameServerUpdate\",\n\t\"6406\": \"AMGMSGameServerRemove\",\n\t\"6407\": \"GameServerOutOfDate\",\n\t\"6500\": \"DeviceAuthorizationBase\",\n\t\"6501\": \"ClientAuthorizeLocalDeviceRequest\",\n\t\"6502\": \"ClientAuthorizeLocalDevice\",\n\t\"6503\": \"ClientDeauthorizeDeviceRequest\",\n\t\"6504\": \"ClientDeauthorizeDevice\",\n\t\"6505\": \"ClientUseLocalDeviceAuthorizations\",\n\t\"6506\": \"ClientGetAuthorizedDevices\",\n\t\"6507\": \"ClientGetAuthorizedDevicesResponse\",\n\t\"6508\": \"AMNotifySessionDeviceAuthorized\",\n\t\"6600\": \"MMSBase\",\n\t\"6601\": \"ClientMMSCreateLobby\",\n\t\"6602\": \"ClientMMSCreateLobbyResponse\",\n\t\"6603\": \"ClientMMSJoinLobby\",\n\t\"6604\": \"ClientMMSJoinLobbyResponse\",\n\t\"6605\": \"ClientMMSLeaveLobby\",\n\t\"6606\": \"ClientMMSLeaveLobbyResponse\",\n\t\"6607\": \"ClientMMSGetLobbyList\",\n\t\"6608\": \"ClientMMSGetLobbyListResponse\",\n\t\"6609\": \"ClientMMSSetLobbyData\",\n\t\"6610\": \"ClientMMSSetLobbyDataResponse\",\n\t\"6611\": \"ClientMMSGetLobbyData\",\n\t\"6612\": \"ClientMMSLobbyData\",\n\t\"6613\": \"ClientMMSSendLobbyChatMsg\",\n\t\"6614\": \"ClientMMSLobbyChatMsg\",\n\t\"6615\": \"ClientMMSSetLobbyOwner\",\n\t\"6616\": \"ClientMMSSetLobbyOwnerResponse\",\n\t\"6617\": \"ClientMMSSetLobbyGameServer\",\n\t\"6618\": \"ClientMMSLobbyGameServerSet\",\n\t\"6619\": \"ClientMMSUserJoinedLobby\",\n\t\"6620\": \"ClientMMSUserLeftLobby\",\n\t\"6621\": \"ClientMMSInviteToLobby\",\n\t\"6622\": \"ClientMMSFlushFrenemyListCache\",\n\t\"6623\": \"ClientMMSFlushFrenemyListCacheResponse\",\n\t\"6624\": \"ClientMMSSetLobbyLinked\",\n\t\"6800\": \"NonStdMsgBase\",\n\t\"6801\": \"NonStdMsgMemcached\",\n\t\"6802\": \"NonStdMsgHTTPServer\",\n\t\"6803\": \"NonStdMsgHTTPClient\",\n\t\"6804\": \"NonStdMsgWGResponse\",\n\t\"6805\": \"NonStdMsgPHPSimulator\",\n\t\"6806\": \"NonStdMsgChase\",\n\t\"6807\": \"NonStdMsgDFSTransfer\",\n\t\"6808\": \"NonStdMsgTests\",\n\t\"6809\": \"NonStdMsgUMQpipeAAPL\",\n\t\"6810\": \"NonStdMsgSyslog\",\n\t\"6811\": \"NonStdMsgLogsink\",\n\t\"6812\": \"NonStdMsgSteam2Emulator\",\n\t\"6813\": \"NonStdMsgRTMPServer\",\n\t\"7000\": \"UDSBase\",\n\t\"7001\": \"ClientUDSP2PSessionStarted\",\n\t\"7002\": \"ClientUDSP2PSessionEnded\",\n\t\"7003\": \"UDSRenderUserAuth\",\n\t\"7004\": \"UDSRenderUserAuthResponse\",\n\t\"7005\": \"ClientUDSInviteToGame\",\n\t\"7006\": \"UDSHasSession\",\n\t\"7007\": \"UDSHasSessionResponse\",\n\t\"7100\": \"MPASBase\",\n\t\"7101\": \"MPASVacBanReset\",\n\t\"7200\": \"KGSBase\",\n\t\"7201\": \"KGSAllocateKeyRange\",\n\t\"7202\": \"KGSAllocateKeyRangeResponse\",\n\t\"7203\": \"KGSGenerateKeys\",\n\t\"7204\": \"KGSGenerateKeysResponse\",\n\t\"7205\": \"KGSRemapKeys\",\n\t\"7206\": \"KGSRemapKeysResponse\",\n\t\"7207\": \"KGSGenerateGameStopWCKeys\",\n\t\"7208\": \"KGSGenerateGameStopWCKeysResponse\",\n\t\"7300\": \"UCMBase\",\n\t\"7301\": \"ClientUCMAddScreenshot\",\n\t\"7302\": \"ClientUCMAddScreenshotResponse\",\n\t\"7303\": \"UCMValidateObjectExists\",\n\t\"7304\": \"UCMValidateObjectExistsResponse\",\n\t\"7307\": \"UCMResetCommunityContent\",\n\t\"7308\": \"UCMResetCommunityContentResponse\",\n\t\"7309\": \"ClientUCMDeleteScreenshot\",\n\t\"7310\": \"ClientUCMDeleteScreenshotResponse\",\n\t\"7311\": \"ClientUCMPublishFile\",\n\t\"7312\": \"ClientUCMPublishFileResponse\",\n\t\"7313\": \"ClientUCMGetPublishedFileDetails\",\n\t\"7314\": \"ClientUCMGetPublishedFileDetailsResponse\",\n\t\"7315\": \"ClientUCMDeletePublishedFile\",\n\t\"7316\": \"ClientUCMDeletePublishedFileResponse\",\n\t\"7317\": \"ClientUCMEnumerateUserPublishedFiles\",\n\t\"7318\": \"ClientUCMEnumerateUserPublishedFilesResponse\",\n\t\"7319\": \"ClientUCMSubscribePublishedFile\",\n\t\"7320\": \"ClientUCMSubscribePublishedFileResponse\",\n\t\"7321\": \"ClientUCMEnumerateUserSubscribedFiles\",\n\t\"7322\": \"ClientUCMEnumerateUserSubscribedFilesResponse\",\n\t\"7323\": \"ClientUCMUnsubscribePublishedFile\",\n\t\"7324\": \"ClientUCMUnsubscribePublishedFileResponse\",\n\t\"7325\": \"ClientUCMUpdatePublishedFile\",\n\t\"7326\": \"ClientUCMUpdatePublishedFileResponse\",\n\t\"7327\": \"UCMUpdatePublishedFile\",\n\t\"7328\": \"UCMUpdatePublishedFileResponse\",\n\t\"7329\": \"UCMDeletePublishedFile\",\n\t\"7330\": \"UCMDeletePublishedFileResponse\",\n\t\"7331\": \"UCMUpdatePublishedFileStat\",\n\t\"7332\": \"UCMUpdatePublishedFileBan\",\n\t\"7333\": \"UCMUpdatePublishedFileBanResponse\",\n\t\"7334\": \"UCMUpdateTaggedScreenshot\",\n\t\"7335\": \"UCMAddTaggedScreenshot\",\n\t\"7336\": \"UCMRemoveTaggedScreenshot\",\n\t\"7337\": \"UCMReloadPublishedFile\",\n\t\"7338\": \"UCMReloadUserFileListCaches\",\n\t\"7339\": \"UCMPublishedFileReported\",\n\t\"7340\": \"UCMUpdatePublishedFileIncompatibleStatus\",\n\t\"7341\": \"UCMPublishedFilePreviewAdd\",\n\t\"7342\": \"UCMPublishedFilePreviewAddResponse\",\n\t\"7343\": \"UCMPublishedFilePreviewRemove\",\n\t\"7344\": \"UCMPublishedFilePreviewRemoveResponse\",\n\t\"7345\": \"UCMPublishedFilePreviewChangeSortOrder\",\n\t\"7346\": \"UCMPublishedFilePreviewChangeSortOrderResponse\",\n\t\"7347\": \"ClientUCMPublishedFileSubscribed\",\n\t\"7348\": \"ClientUCMPublishedFileUnsubscribed\",\n\t\"7349\": \"UCMPublishedFileSubscribed\",\n\t\"7350\": \"UCMPublishedFileUnsubscribed\",\n\t\"7351\": \"UCMPublishFile\",\n\t\"7352\": \"UCMPublishFileResponse\",\n\t\"7353\": \"UCMPublishedFileChildAdd\",\n\t\"7354\": \"UCMPublishedFileChildAddResponse\",\n\t\"7355\": \"UCMPublishedFileChildRemove\",\n\t\"7356\": \"UCMPublishedFileChildRemoveResponse\",\n\t\"7357\": \"UCMPublishedFileChildChangeSortOrder\",\n\t\"7358\": \"UCMPublishedFileChildChangeSortOrderResponse\",\n\t\"7359\": \"UCMPublishedFileParentChanged\",\n\t\"7360\": \"ClientUCMGetPublishedFilesForUser\",\n\t\"7361\": \"ClientUCMGetPublishedFilesForUserResponse\",\n\t\"7362\": \"UCMGetPublishedFilesForUser\",\n\t\"7363\": \"UCMGetPublishedFilesForUserResponse\",\n\t\"7364\": \"ClientUCMSetUserPublishedFileAction\",\n\t\"7365\": \"ClientUCMSetUserPublishedFileActionResponse\",\n\t\"7366\": \"ClientUCMEnumeratePublishedFilesByUserAction\",\n\t\"7367\": \"ClientUCMEnumeratePublishedFilesByUserActionResponse\",\n\t\"7368\": \"ClientUCMPublishedFileDeleted\",\n\t\"7369\": \"UCMGetUserSubscribedFiles\",\n\t\"7370\": \"UCMGetUserSubscribedFilesResponse\",\n\t\"7371\": \"UCMFixStatsPublishedFile\",\n\t\"7372\": \"UCMDeleteOldScreenshot\",\n\t\"7373\": \"UCMDeleteOldScreenshotResponse\",\n\t\"7374\": \"UCMDeleteOldVideo\",\n\t\"7375\": \"UCMDeleteOldVideoResponse\",\n\t\"7376\": \"UCMUpdateOldScreenshotPrivacy\",\n\t\"7377\": \"UCMUpdateOldScreenshotPrivacyResponse\",\n\t\"7378\": \"ClientUCMEnumerateUserSubscribedFilesWithUpdates\",\n\t\"7379\": \"ClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse\",\n\t\"7380\": \"UCMPublishedFileContentUpdated\",\n\t\"7381\": \"UCMPublishedFileUpdated\",\n\t\"7382\": \"ClientWorkshopItemChangesRequest\",\n\t\"7383\": \"ClientWorkshopItemChangesResponse\",\n\t\"7384\": \"ClientWorkshopItemInfoRequest\",\n\t\"7385\": \"ClientWorkshopItemInfoResponse\",\n\t\"7500\": \"FSBase\",\n\t\"7501\": \"ClientRichPresenceUpload\",\n\t\"7502\": \"ClientRichPresenceRequest\",\n\t\"7503\": \"ClientRichPresenceInfo\",\n\t\"7504\": \"FSRichPresenceRequest\",\n\t\"7505\": \"FSRichPresenceResponse\",\n\t\"7506\": \"FSComputeFrenematrix\",\n\t\"7507\": \"FSComputeFrenematrixResponse\",\n\t\"7508\": \"FSPlayStatusNotification\",\n\t\"7509\": \"FSPublishPersonaStatus\",\n\t\"7510\": \"FSAddOrRemoveFollower\",\n\t\"7511\": \"FSAddOrRemoveFollowerResponse\",\n\t\"7512\": \"FSUpdateFollowingList\",\n\t\"7513\": \"FSCommentNotification\",\n\t\"7514\": \"FSCommentNotificationViewed\",\n\t\"7515\": \"ClientFSGetFollowerCount\",\n\t\"7516\": \"ClientFSGetFollowerCountResponse\",\n\t\"7517\": \"ClientFSGetIsFollowing\",\n\t\"7518\": \"ClientFSGetIsFollowingResponse\",\n\t\"7519\": \"ClientFSEnumerateFollowingList\",\n\t\"7520\": \"ClientFSEnumerateFollowingListResponse\",\n\t\"7521\": \"FSGetPendingNotificationCount\",\n\t\"7522\": \"FSGetPendingNotificationCountResponse\",\n\t\"7523\": \"ClientFSOfflineMessageNotification\",\n\t\"7524\": \"ClientFSRequestOfflineMessageCount\",\n\t\"7525\": \"ClientFSGetFriendMessageHistory\",\n\t\"7526\": \"ClientFSGetFriendMessageHistoryResponse\",\n\t\"7527\": \"ClientFSGetFriendMessageHistoryForOfflineMessages\",\n\t\"7528\": \"ClientFSGetFriendsSteamLevels\",\n\t\"7529\": \"ClientFSGetFriendsSteamLevelsResponse\",\n\t\"7530\": \"FSRequestFriendData\",\n\t\"7600\": \"CEGVersionSetEnableDisableRequest\",\n\t\"7601\": \"CEGVersionSetEnableDisableResponse\",\n\t\"7602\": \"CEGPropStatusDRMSRequest\",\n\t\"7603\": \"CEGPropStatusDRMSResponse\",\n\t\"7604\": \"CEGWhackFailureReportRequest\",\n\t\"7605\": \"CEGWhackFailureReportResponse\",\n\t\"7606\": \"DRMSFetchVersionSet\",\n\t\"7607\": \"DRMSFetchVersionSetResponse\",\n\t\"7700\": \"EconBase\",\n\t\"7701\": \"EconTrading_InitiateTradeRequest\",\n\t\"7702\": \"EconTrading_InitiateTradeProposed\",\n\t\"7703\": \"EconTrading_InitiateTradeResponse\",\n\t\"7704\": \"EconTrading_InitiateTradeResult\",\n\t\"7705\": \"EconTrading_StartSession\",\n\t\"7706\": \"EconTrading_CancelTradeRequest\",\n\t\"7707\": \"EconFlushInventoryCache\",\n\t\"7708\": \"EconFlushInventoryCacheResponse\",\n\t\"7711\": \"EconCDKeyProcessTransaction\",\n\t\"7712\": \"EconCDKeyProcessTransactionResponse\",\n\t\"7713\": \"EconGetErrorLogs\",\n\t\"7714\": \"EconGetErrorLogsResponse\",\n\t\"7800\": \"RMTestVerisignOTP\",\n\t\"7801\": \"RMTestVerisignOTPResponse\",\n\t\"7803\": \"RMDeleteMemcachedKeys\",\n\t\"7804\": \"RMRemoteInvoke\",\n\t\"7805\": \"BadLoginIPList\",\n\t\"7806\": \"RMMsgTraceAddTrigger\",\n\t\"7807\": \"RMMsgTraceRemoveTrigger\",\n\t\"7808\": \"RMMsgTraceEvent\",\n\t\"7900\": \"UGSUpdateGlobalStats\",\n\t\"7901\": \"ClientUGSGetGlobalStats\",\n\t\"7902\": \"ClientUGSGetGlobalStatsResponse\",\n\t\"8000\": \"StoreUpdateRecommendationCount\",\n\t\"8100\": \"UMQLogonRequest\",\n\t\"8101\": \"UMQLogonResponse\",\n\t\"8102\": \"UMQLogoffRequest\",\n\t\"8103\": \"UMQLogoffResponse\",\n\t\"8104\": \"UMQSendChatMessage\",\n\t\"8105\": \"UMQIncomingChatMessage\",\n\t\"8106\": \"UMQPoll\",\n\t\"8107\": \"UMQPollResults\",\n\t\"8108\": \"UMQ2AM_ClientMsgBatch\",\n\t\"8109\": \"UMQEnqueueMobileSalePromotions\",\n\t\"8110\": \"UMQEnqueueMobileAnnouncements\",\n\t\"8200\": \"WorkshopAcceptTOSRequest\",\n\t\"8201\": \"WorkshopAcceptTOSResponse\",\n\t\"8300\": \"WebAPIValidateOAuth2Token\",\n\t\"8301\": \"WebAPIValidateOAuth2TokenResponse\",\n\t\"8302\": \"WebAPIInvalidateTokensForAccount\",\n\t\"8303\": \"WebAPIRegisterGCInterfaces\",\n\t\"8304\": \"WebAPIInvalidateOAuthClientCache\",\n\t\"8305\": \"WebAPIInvalidateOAuthTokenCache\",\n\t\"8306\": \"WebAPISetSecrets\",\n\t\"8400\": \"BackpackBase\",\n\t\"8401\": \"BackpackAddToCurrency\",\n\t\"8402\": \"BackpackAddToCurrencyResponse\",\n\t\"8500\": \"CREBase\",\n\t\"8501\": \"CRERankByTrend\",\n\t\"8502\": \"CRERankByTrendResponse\",\n\t\"8503\": \"CREItemVoteSummary\",\n\t\"8504\": \"CREItemVoteSummaryResponse\",\n\t\"8505\": \"CRERankByVote\",\n\t\"8506\": \"CRERankByVoteResponse\",\n\t\"8507\": \"CREUpdateUserPublishedItemVote\",\n\t\"8508\": \"CREUpdateUserPublishedItemVoteResponse\",\n\t\"8509\": \"CREGetUserPublishedItemVoteDetails\",\n\t\"8510\": \"CREGetUserPublishedItemVoteDetailsResponse\",\n\t\"8511\": \"CREEnumeratePublishedFiles\",\n\t\"8512\": \"CREEnumeratePublishedFilesResponse\",\n\t\"8513\": \"CREPublishedFileVoteAdded\",\n\t\"8600\": \"SecretsRequestCredentialPair\",\n\t\"8601\": \"SecretsCredentialPairResponse\",\n\t\"8602\": \"SecretsRequestServerIdentity\",\n\t\"8603\": \"SecretsServerIdentityResponse\",\n\t\"8604\": \"SecretsUpdateServerIdentities\",\n\t\"8700\": \"BoxMonitorReportRequest\",\n\t\"8701\": \"BoxMonitorReportResponse\",\n\t\"8800\": \"LogsinkWriteReport\",\n\t\"8900\": \"PICSBase\",\n\t\"8901\": \"ClientPICSChangesSinceRequest\",\n\t\"8902\": \"ClientPICSChangesSinceResponse\",\n\t\"8903\": \"ClientPICSProductInfoRequest\",\n\t\"8904\": \"ClientPICSProductInfoResponse\",\n\t\"8905\": \"ClientPICSAccessTokenRequest\",\n\t\"8906\": \"ClientPICSAccessTokenResponse\",\n\t\"9000\": \"WorkerProcessPingRequest\",\n\t\"9001\": \"WorkerProcessPingResponse\",\n\t\"9002\": \"WorkerProcessShutdown\",\n\t\"9100\": \"DRMWorkerProcessDRMAndSign\",\n\t\"9101\": \"DRMWorkerProcessDRMAndSignResponse\",\n\t\"9102\": \"DRMWorkerProcessSteamworksInfoRequest\",\n\t\"9103\": \"DRMWorkerProcessSteamworksInfoResponse\",\n\t\"9104\": \"DRMWorkerProcessInstallDRMDLLRequest\",\n\t\"9105\": \"DRMWorkerProcessInstallDRMDLLResponse\",\n\t\"9106\": \"DRMWorkerProcessSecretIdStringRequest\",\n\t\"9107\": \"DRMWorkerProcessSecretIdStringResponse\",\n\t\"9108\": \"DRMWorkerProcessGetDRMGuidsFromFileRequest\",\n\t\"9109\": \"DRMWorkerProcessGetDRMGuidsFromFileResponse\",\n\t\"9110\": \"DRMWorkerProcessInstallProcessedFilesRequest\",\n\t\"9111\": \"DRMWorkerProcessInstallProcessedFilesResponse\",\n\t\"9112\": \"DRMWorkerProcessExamineBlobRequest\",\n\t\"9113\": \"DRMWorkerProcessExamineBlobResponse\",\n\t\"9114\": \"DRMWorkerProcessDescribeSecretRequest\",\n\t\"9115\": \"DRMWorkerProcessDescribeSecretResponse\",\n\t\"9116\": \"DRMWorkerProcessBackfillOriginalRequest\",\n\t\"9117\": \"DRMWorkerProcessBackfillOriginalResponse\",\n\t\"9118\": \"DRMWorkerProcessValidateDRMDLLRequest\",\n\t\"9119\": \"DRMWorkerProcessValidateDRMDLLResponse\",\n\t\"9120\": \"DRMWorkerProcessValidateFileRequest\",\n\t\"9121\": \"DRMWorkerProcessValidateFileResponse\",\n\t\"9122\": \"DRMWorkerProcessSplitAndInstallRequest\",\n\t\"9123\": \"DRMWorkerProcessSplitAndInstallResponse\",\n\t\"9124\": \"DRMWorkerProcessGetBlobRequest\",\n\t\"9125\": \"DRMWorkerProcessGetBlobResponse\",\n\t\"9126\": \"DRMWorkerProcessEvaluateCrashRequest\",\n\t\"9127\": \"DRMWorkerProcessEvaluateCrashResponse\",\n\t\"9128\": \"DRMWorkerProcessAnalyzeFileRequest\",\n\t\"9129\": \"DRMWorkerProcessAnalyzeFileResponse\",\n\t\"9130\": \"DRMWorkerProcessUnpackBlobRequest\",\n\t\"9131\": \"DRMWorkerProcessUnpackBlobResponse\",\n\t\"9132\": \"DRMWorkerProcessInstallAllRequest\",\n\t\"9133\": \"DRMWorkerProcessInstallAllResponse\",\n\t\"9200\": \"TestWorkerProcessLoadUnloadModuleRequest\",\n\t\"9201\": \"TestWorkerProcessLoadUnloadModuleResponse\",\n\t\"9202\": \"TestWorkerProcessServiceModuleCallRequest\",\n\t\"9203\": \"TestWorkerProcessServiceModuleCallResponse\",\n\t\"9300\": \"QuestServerBase\",\n\t\"9330\": \"ClientGetEmoticonList\",\n\t\"9331\": \"ClientEmoticonList\",\n\t\"9400\": \"SLCUserSessionStatus\",\n\t\"9401\": \"SLCRequestUserSessionStatus\",\n\t\"9402\": \"SLCSharedLicensesLockStatus\",\n\t\"9403\": \"ClientSharedLicensesLockStatus\",\n\t\"9404\": \"ClientSharedLicensesStopPlaying\",\n\t\"9405\": \"ClientSharedLibraryLockStatus\",\n\t\"9406\": \"ClientSharedLibraryStopPlaying\",\n\t\"9407\": \"SLCOwnerLibraryChanged\",\n\t\"9408\": \"SLCSharedLibraryChanged\",\n\t\"9500\": \"RemoteClientAuth\",\n\t\"9501\": \"RemoteClientAuthResponse\",\n\t\"9502\": \"RemoteClientAppStatus\",\n\t\"9503\": \"RemoteClientStartStream\",\n\t\"9504\": \"RemoteClientStartStreamResponse\",\n\t\"9505\": \"RemoteClientPing\",\n\t\"9506\": \"RemoteClientPingResponse\",\n\t\"9507\": \"ClientUnlockStreaming\",\n\t\"9508\": \"ClientUnlockStreamingResponse\",\n\t\"9509\": \"RemoteClientAcceptEULA\",\n\t\"9510\": \"RemoteClientGetControllerConfig\",\n\t\"9511\": \"RemoteClientGetControllerConfigResposne\",\n\t\"9512\": \"RemoteClientStreamingEnabled\",\n\t\"9600\": \"ClientPlayingSessionState\",\n\t\"9601\": \"ClientKickPlayingSession\",\n\t\"9700\": \"ClientBroadcastInit\",\n\t\"9701\": \"ClientBroadcastFrames\",\n\t\"9702\": \"ClientBroadcastDisconnect\",\n\t\"9703\": \"ClientBroadcastScreenshot\",\n\t\"9704\": \"ClientBroadcastUploadConfig\",\n\t\"9800\": \"ClientVoiceCallPreAuthorize\",\n\t\"9801\": \"ClientVoiceCallPreAuthorizeResponse\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/ENewsUpdateType.js":"/**\n * @enum ENewsUpdateType\n */\nmodule.exports = {\n\t\"AppNews\": 0,\n\t\"SteamAds\": 1,\n\t\"SteamNews\": 2,\n\t\"CDDBUpdate\": 3,\n\t\"ClientUpdate\": 4,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"AppNews\",\n\t\"1\": \"SteamAds\",\n\t\"2\": \"SteamNews\",\n\t\"3\": \"CDDBUpdate\",\n\t\"4\": \"ClientUpdate\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EPaymentMethod.js":"/**\n * @enum EPaymentMethod\n */\nmodule.exports = {\n\t\"None\": 0,\n\t\"ActivationCode\": 1,\n\t\"CreditCard\": 2,\n\t\"Giropay\": 3,\n\t\"PayPal\": 4,\n\t\"Ideal\": 5,\n\t\"PaySafeCard\": 6,\n\t\"Sofort\": 7,\n\t\"GuestPass\": 8,\n\t\"WebMoney\": 9,\n\t\"MoneyBookers\": 10,\n\t\"AliPay\": 11,\n\t\"Yandex\": 12,\n\t\"Kiosk\": 13,\n\t\"Qiwi\": 14,\n\t\"GameStop\": 15,\n\t\"HardwarePromo\": 16,\n\t\"MoPay\": 17,\n\t\"BoletoBancario\": 18,\n\t\"BoaCompraGold\": 19,\n\t\"BancoDoBrasilOnline\": 20,\n\t\"ItauOnline\": 21,\n\t\"BradescoOnline\": 22,\n\t\"Pagseguro\": 23,\n\t\"VisaBrazil\": 24,\n\t\"AmexBrazil\": 25,\n\t\"Aura\": 26,\n\t\"Hipercard\": 27,\n\t\"MastercardBrazil\": 28,\n\t\"DinersCardBrazil\": 29,\n\t\"AuthorizedDevice\": 30,\n\t\"MOLPoints\": 31,\n\t\"ClickAndBuy\": 32,\n\t\"Beeline\": 33,\n\t\"Konbini\": 34,\n\t\"EClubPoints\": 35,\n\t\"CreditCardJapan\": 36,\n\t\"BankTransferJapan\": 37,\n\t\"PayEasyJapan\": 38, // obsolete \"renamed to PayEasy\"\n\t\"PayEasy\": 38,\n\t\"Zong\": 39,\n\t\"CultureVoucher\": 40,\n\t\"BookVoucher\": 41,\n\t\"HappymoneyVoucher\": 42,\n\t\"ConvenientStoreVoucher\": 43,\n\t\"GameVoucher\": 44,\n\t\"Multibanco\": 45,\n\t\"Payshop\": 46,\n\t\"Maestro\": 47, // obsolete \"renamed to MaestroBoaCompra\"\n\t\"MaestroBoaCompra\": 47,\n\t\"OXXO\": 48,\n\t\"ToditoCash\": 49,\n\t\"Carnet\": 50,\n\t\"SPEI\": 51,\n\t\"ThreePay\": 52,\n\t\"IsBank\": 53,\n\t\"Garanti\": 54,\n\t\"Akbank\": 55,\n\t\"YapiKredi\": 56,\n\t\"Halkbank\": 57,\n\t\"BankAsya\": 58,\n\t\"Finansbank\": 59,\n\t\"DenizBank\": 60,\n\t\"PTT\": 61,\n\t\"CashU\": 62,\n\t\"AutoGrant\": 64,\n\t\"WebMoneyJapan\": 65,\n\t\"OneCard\": 66,\n\t\"PSE\": 67,\n\t\"Exito\": 68,\n\t\"Efecty\": 69,\n\t\"Paloto\": 70,\n\t\"PinValidda\": 71,\n\t\"MangirKart\": 72,\n\t\"BancoCreditoDePeru\": 73,\n\t\"BBVAContinental\": 74,\n\t\"SafetyPay\": 75,\n\t\"PagoEfectivo\": 76,\n\t\"Trustly\": 77,\n\t\"UnionPay\": 78,\n\t\"BitCoin\": 79,\n\t\"Wallet\": 128,\n\t\"Valve\": 129,\n\t\"SteamPressMaster\": 130, // obsolete \"renamed to MasterComp\"\n\t\"MasterComp\": 130,\n\t\"StorePromotion\": 131, // obsolete \"renamed to Promotional\"\n\t\"Promotional\": 131,\n\t\"OEMTicket\": 256,\n\t\"Split\": 512,\n\t\"Complimentary\": 1024,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"None\",\n\t\"1\": \"ActivationCode\",\n\t\"2\": \"CreditCard\",\n\t\"3\": \"Giropay\",\n\t\"4\": \"PayPal\",\n\t\"5\": \"Ideal\",\n\t\"6\": \"PaySafeCard\",\n\t\"7\": \"Sofort\",\n\t\"8\": \"GuestPass\",\n\t\"9\": \"WebMoney\",\n\t\"10\": \"MoneyBookers\",\n\t\"11\": \"AliPay\",\n\t\"12\": \"Yandex\",\n\t\"13\": \"Kiosk\",\n\t\"14\": \"Qiwi\",\n\t\"15\": \"GameStop\",\n\t\"16\": \"HardwarePromo\",\n\t\"17\": \"MoPay\",\n\t\"18\": \"BoletoBancario\",\n\t\"19\": \"BoaCompraGold\",\n\t\"20\": \"BancoDoBrasilOnline\",\n\t\"21\": \"ItauOnline\",\n\t\"22\": \"BradescoOnline\",\n\t\"23\": \"Pagseguro\",\n\t\"24\": \"VisaBrazil\",\n\t\"25\": \"AmexBrazil\",\n\t\"26\": \"Aura\",\n\t\"27\": \"Hipercard\",\n\t\"28\": \"MastercardBrazil\",\n\t\"29\": \"DinersCardBrazil\",\n\t\"30\": \"AuthorizedDevice\",\n\t\"31\": \"MOLPoints\",\n\t\"32\": \"ClickAndBuy\",\n\t\"33\": \"Beeline\",\n\t\"34\": \"Konbini\",\n\t\"35\": \"EClubPoints\",\n\t\"36\": \"CreditCardJapan\",\n\t\"37\": \"BankTransferJapan\",\n\t\"38\": \"PayEasy\",\n\t\"39\": \"Zong\",\n\t\"40\": \"CultureVoucher\",\n\t\"41\": \"BookVoucher\",\n\t\"42\": \"HappymoneyVoucher\",\n\t\"43\": \"ConvenientStoreVoucher\",\n\t\"44\": \"GameVoucher\",\n\t\"45\": \"Multibanco\",\n\t\"46\": \"Payshop\",\n\t\"47\": \"MaestroBoaCompra\",\n\t\"48\": \"OXXO\",\n\t\"49\": \"ToditoCash\",\n\t\"50\": \"Carnet\",\n\t\"51\": \"SPEI\",\n\t\"52\": \"ThreePay\",\n\t\"53\": \"IsBank\",\n\t\"54\": \"Garanti\",\n\t\"55\": \"Akbank\",\n\t\"56\": \"YapiKredi\",\n\t\"57\": \"Halkbank\",\n\t\"58\": \"BankAsya\",\n\t\"59\": \"Finansbank\",\n\t\"60\": \"DenizBank\",\n\t\"61\": \"PTT\",\n\t\"62\": \"CashU\",\n\t\"64\": \"AutoGrant\",\n\t\"65\": \"WebMoneyJapan\",\n\t\"66\": \"OneCard\",\n\t\"67\": \"PSE\",\n\t\"68\": \"Exito\",\n\t\"69\": \"Efecty\",\n\t\"70\": \"Paloto\",\n\t\"71\": \"PinValidda\",\n\t\"72\": \"MangirKart\",\n\t\"73\": \"BancoCreditoDePeru\",\n\t\"74\": \"BBVAContinental\",\n\t\"75\": \"SafetyPay\",\n\t\"76\": \"PagoEfectivo\",\n\t\"77\": \"Trustly\",\n\t\"78\": \"UnionPay\",\n\t\"79\": \"BitCoin\",\n\t\"128\": \"Wallet\",\n\t\"129\": \"Valve\",\n\t\"130\": \"MasterComp\",\n\t\"131\": \"Promotional\",\n\t\"256\": \"OEMTicket\",\n\t\"512\": \"Split\",\n\t\"1024\": \"Complimentary\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EPersonaStateFlag.js":"/**\n * @enum EPersonaStateFlag\n */\nmodule.exports = {\n\t\"HasRichPresence\": 1,\n\t\"InJoinableGame\": 2,\n\t\"Golden\": 4, // obsolete \"no longer has any effect\"\n\t\"OnlineUsingWeb\": 256, // obsolete \"renamed to ClientTypeWeb\"\n\t\"ClientTypeWeb\": 256,\n\t\"OnlineUsingMobile\": 512, // obsolete \"renamed to ClientTypeMobile\"\n\t\"ClientTypeMobile\": 512,\n\t\"OnlineUsingBigPicture\": 1024, // obsolete \"renamed to ClientTypeTenfoot\"\n\t\"ClientTypeTenfoot\": 1024,\n\t\"OnlineUsingVR\": 2048, // obsolete \"renamed to ClientTypeVR\"\n\t\"ClientTypeVR\": 2048,\n\t\"LaunchTypeGamepad\": 4096,\n\n\t// Value-to-name mapping for convenience\n\t\"1\": \"HasRichPresence\",\n\t\"2\": \"InJoinableGame\",\n\t\"4\": \"Golden\",\n\t\"256\": \"ClientTypeWeb\",\n\t\"512\": \"ClientTypeMobile\",\n\t\"1024\": \"ClientTypeTenfoot\",\n\t\"2048\": \"ClientTypeVR\",\n\t\"4096\": \"LaunchTypeGamepad\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EPersonaState.js":"/**\n * @enum EPersonaState\n */\nmodule.exports = {\n\t\"Offline\": 0,\n\t\"Online\": 1,\n\t\"Busy\": 2,\n\t\"Away\": 3,\n\t\"Snooze\": 4,\n\t\"LookingToTrade\": 5,\n\t\"LookingToPlay\": 6,\n\t\"Max\": 7,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"Offline\",\n\t\"1\": \"Online\",\n\t\"2\": \"Busy\",\n\t\"3\": \"Away\",\n\t\"4\": \"Snooze\",\n\t\"5\": \"LookingToTrade\",\n\t\"6\": \"LookingToPlay\",\n\t\"7\": \"Max\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EPlatformType.js":"/**\n * @enum EPlatformType\n */\nmodule.exports = {\n\t\"Unknown\": 0,\n\t\"Win32\": 1,\n\t\"Win64\": 2,\n\t\"Linux\": 3, // obsolete \"split to Linux64 and Linux32\"\n\t\"Linux64\": 3,\n\t\"OSX\": 4,\n\t\"PS3\": 5,\n\t\"Linux32\": 6,\n\t\"Max\": 6,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"Unknown\",\n\t\"1\": \"Win32\",\n\t\"2\": \"Win64\",\n\t\"3\": \"Linux64\",\n\t\"4\": \"OSX\",\n\t\"5\": \"PS3\",\n\t\"6\": \"Max\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EPublishedFileVisibility.js":"/**\n * @enum EPublishedFileVisibility\n */\nmodule.exports = {\n\t\"Public\": 0,\n\t\"FriendsOnly\": 1,\n\t\"Private\": 2,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"Public\",\n\t\"1\": \"FriendsOnly\",\n\t\"2\": \"Private\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EPurchaseResultDetail.js":"/**\n * @enum EPurchaseResultDetail\n */\nmodule.exports = {\n\t\"NoDetail\": 0,\n\t\"AVSFailure\": 1,\n\t\"InsufficientFunds\": 2,\n\t\"ContactSupport\": 3,\n\t\"Timeout\": 4,\n\t\"InvalidPackage\": 5,\n\t\"InvalidPaymentMethod\": 6,\n\t\"InvalidData\": 7,\n\t\"OthersInProgress\": 8,\n\t\"AlreadyPurchased\": 9,\n\t\"WrongPrice\": 10,\n\t\"FraudCheckFailed\": 11,\n\t\"CancelledByUser\": 12,\n\t\"RestrictedCountry\": 13,\n\t\"BadActivationCode\": 14,\n\t\"DuplicateActivationCode\": 15,\n\t\"UseOtherPaymentMethod\": 16,\n\t\"UseOtherFunctionSource\": 17,\n\t\"InvalidShippingAddress\": 18,\n\t\"RegionNotSupported\": 19,\n\t\"AcctIsBlocked\": 20,\n\t\"AcctNotVerified\": 21,\n\t\"InvalidAccount\": 22,\n\t\"StoreBillingCountryMismatch\": 23,\n\t\"DoesNotOwnRequiredApp\": 24,\n\t\"CanceledByNewTransaction\": 25,\n\t\"ForceCanceledPending\": 26,\n\t\"FailCurrencyTransProvider\": 27,\n\t\"FailedCyberCafe\": 28,\n\t\"NeedsPreApproval\": 29,\n\t\"PreApprovalDenied\": 30,\n\t\"WalletCurrencyMismatch\": 31,\n\t\"EmailNotValidated\": 32,\n\t\"ExpiredCard\": 33,\n\t\"TransactionExpired\": 34,\n\t\"WouldExceedMaxWallet\": 35,\n\t\"MustLoginPS3AppForPurchase\": 36,\n\t\"CannotShipToPOBox\": 37,\n\t\"InsufficientInventory\": 38,\n\t\"CannotGiftShippedGoods\": 39,\n\t\"CannotShipInternationally\": 40,\n\t\"BillingAgreementCancelled\": 41,\n\t\"InvalidCoupon\": 42,\n\t\"ExpiredCoupon\": 43,\n\t\"AccountLocked\": 44,\n\t\"OtherAbortableInProgress\": 45,\n\t\"ExceededSteamLimit\": 46,\n\t\"OverlappingPackagesInCart\": 47,\n\t\"NoWallet\": 48,\n\t\"NoCachedPaymentMethod\": 49,\n\t\"CannotRedeemCodeFromClient\": 50,\n\t\"PurchaseAmountNoSupportedByProvider\": 51,\n\t\"OverlappingPackagesInPendingTransaction\": 52,\n\t\"RateLimited\": 53,\n\t\"OwnsExcludedApp\": 54,\n\t\"CreditCardBinMismatchesType\": 55,\n\t\"CartValueTooHigh\": 56,\n\t\"BillingAgreementAlreadyExists\": 57,\n\t\"POSACodeNotActivated\": 58,\n\t\"CannotShipToCountry\": 59,\n\t\"HungTransactionCancelled\": 60,\n\t\"PaypalInternalError\": 61,\n\t\"UnknownGlobalCollectError\": 62,\n\t\"InvalidTaxAddress\": 63,\n\t\"PhysicalProductLimitExceeded\": 64,\n\t\"PurchaseCannotBeReplayed\": 65,\n\t\"DelayedCompletion\": 66,\n\t\"BundleTypeCannotBeGifted\": 67,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"NoDetail\",\n\t\"1\": \"AVSFailure\",\n\t\"2\": \"InsufficientFunds\",\n\t\"3\": \"ContactSupport\",\n\t\"4\": \"Timeout\",\n\t\"5\": \"InvalidPackage\",\n\t\"6\": \"InvalidPaymentMethod\",\n\t\"7\": \"InvalidData\",\n\t\"8\": \"OthersInProgress\",\n\t\"9\": \"AlreadyPurchased\",\n\t\"10\": \"WrongPrice\",\n\t\"11\": \"FraudCheckFailed\",\n\t\"12\": \"CancelledByUser\",\n\t\"13\": \"RestrictedCountry\",\n\t\"14\": \"BadActivationCode\",\n\t\"15\": \"DuplicateActivationCode\",\n\t\"16\": \"UseOtherPaymentMethod\",\n\t\"17\": \"UseOtherFunctionSource\",\n\t\"18\": \"InvalidShippingAddress\",\n\t\"19\": \"RegionNotSupported\",\n\t\"20\": \"AcctIsBlocked\",\n\t\"21\": \"AcctNotVerified\",\n\t\"22\": \"InvalidAccount\",\n\t\"23\": \"StoreBillingCountryMismatch\",\n\t\"24\": \"DoesNotOwnRequiredApp\",\n\t\"25\": \"CanceledByNewTransaction\",\n\t\"26\": \"ForceCanceledPending\",\n\t\"27\": \"FailCurrencyTransProvider\",\n\t\"28\": \"FailedCyberCafe\",\n\t\"29\": \"NeedsPreApproval\",\n\t\"30\": \"PreApprovalDenied\",\n\t\"31\": \"WalletCurrencyMismatch\",\n\t\"32\": \"EmailNotValidated\",\n\t\"33\": \"ExpiredCard\",\n\t\"34\": \"TransactionExpired\",\n\t\"35\": \"WouldExceedMaxWallet\",\n\t\"36\": \"MustLoginPS3AppForPurchase\",\n\t\"37\": \"CannotShipToPOBox\",\n\t\"38\": \"InsufficientInventory\",\n\t\"39\": \"CannotGiftShippedGoods\",\n\t\"40\": \"CannotShipInternationally\",\n\t\"41\": \"BillingAgreementCancelled\",\n\t\"42\": \"InvalidCoupon\",\n\t\"43\": \"ExpiredCoupon\",\n\t\"44\": \"AccountLocked\",\n\t\"45\": \"OtherAbortableInProgress\",\n\t\"46\": \"ExceededSteamLimit\",\n\t\"47\": \"OverlappingPackagesInCart\",\n\t\"48\": \"NoWallet\",\n\t\"49\": \"NoCachedPaymentMethod\",\n\t\"50\": \"CannotRedeemCodeFromClient\",\n\t\"51\": \"PurchaseAmountNoSupportedByProvider\",\n\t\"52\": \"OverlappingPackagesInPendingTransaction\",\n\t\"53\": \"RateLimited\",\n\t\"54\": \"OwnsExcludedApp\",\n\t\"55\": \"CreditCardBinMismatchesType\",\n\t\"56\": \"CartValueTooHigh\",\n\t\"57\": \"BillingAgreementAlreadyExists\",\n\t\"58\": \"POSACodeNotActivated\",\n\t\"59\": \"CannotShipToCountry\",\n\t\"60\": \"HungTransactionCancelled\",\n\t\"61\": \"PaypalInternalError\",\n\t\"62\": \"UnknownGlobalCollectError\",\n\t\"63\": \"InvalidTaxAddress\",\n\t\"64\": \"PhysicalProductLimitExceeded\",\n\t\"65\": \"PurchaseCannotBeReplayed\",\n\t\"66\": \"DelayedCompletion\",\n\t\"67\": \"BundleTypeCannotBeGifted\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/ERegionCode.js":"/**\n * @enum ERegionCode\n */\nmodule.exports = {\n\t\"USEast\": 0,\n\t\"USWest\": 1,\n\t\"SouthAmerica\": 2,\n\t\"Europe\": 3,\n\t\"Asia\": 4,\n\t\"Australia\": 5,\n\t\"MiddleEast\": 6,\n\t\"Africa\": 7,\n\t\"World\": 255,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"USEast\",\n\t\"1\": \"USWest\",\n\t\"2\": \"SouthAmerica\",\n\t\"3\": \"Europe\",\n\t\"4\": \"Asia\",\n\t\"5\": \"Australia\",\n\t\"6\": \"MiddleEast\",\n\t\"7\": \"Africa\",\n\t\"255\": \"World\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/ERemoteStoragePlatform.js":"/**\n * @enum ERemoteStoragePlatform\n */\nmodule.exports = {\n\t\"None\": 0,\n\t\"Windows\": 1,\n\t\"OSX\": 2,\n\t\"PS3\": 4,\n\t\"Linux\": 8,\n\t\"Reserved1\": 8, // obsolete\n\t\"Reserved2\": 16,\n\t\"All\": -1,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"None\",\n\t\"1\": \"Windows\",\n\t\"2\": \"OSX\",\n\t\"4\": \"PS3\",\n\t\"8\": \"Reserved1\",\n\t\"16\": \"Reserved2\",\n\t\"-1\": \"All\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EServerFlags.js":"/**\n * @enum EServerFlags\n */\nmodule.exports = {\n\t\"None\": 0,\n\t\"Active\": 1,\n\t\"Secure\": 2,\n\t\"Dedicated\": 4,\n\t\"Linux\": 8,\n\t\"Passworded\": 16,\n\t\"Private\": 32,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"None\",\n\t\"1\": \"Active\",\n\t\"2\": \"Secure\",\n\t\"4\": \"Dedicated\",\n\t\"8\": \"Linux\",\n\t\"16\": \"Passworded\",\n\t\"32\": \"Private\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EServerType.js":"/**\n * @enum EServerType\n */\nmodule.exports = {\n\t\"Invalid\": -1,\n\t\"First\": 0,\n\t\"Shell\": 0,\n\t\"GM\": 1,\n\t\"BUM\": 2, // obsolete\n\t\"BUMOBOSOLETE\": 2, // obsolete\n\t\"AM\": 3,\n\t\"BS\": 4,\n\t\"VS\": 5,\n\t\"ATS\": 6,\n\t\"CM\": 7,\n\t\"FBS\": 8,\n\t\"FG\": 9, // obsolete \"renamed to BoxMonitor\"\n\t\"BoxMonitor\": 9,\n\t\"SS\": 10,\n\t\"DRMS\": 11,\n\t\"HubOBSOLETE\": 12, // obsolete\n\t\"Console\": 13,\n\t\"ASBOBSOLETE\": 14, // obsolete\n\t\"PICS\": 14,\n\t\"Client\": 15,\n\t\"BootstrapOBSOLETE\": 16, // obsolete;\n\t\"DP\": 17,\n\t\"WG\": 18,\n\t\"SM\": 19,\n\t\"SLC\": 20,\n\t\"UFS\": 21,\n\t\"Util\": 23,\n\t\"DSS\": 24, // obsolete \"renamed to Community\"\n\t\"Community\": 24,\n\t\"P2PRelayOBSOLETE\": 25, // obsolete\n\t\"AppInformation\": 26,\n\t\"Spare\": 27,\n\t\"FTS\": 28,\n\t\"EPM\": 29, // obsolete\n\t\"EPMOBSOLETE\": 29, // obsolete\n\t\"PS\": 30,\n\t\"IS\": 31,\n\t\"CCS\": 32,\n\t\"DFS\": 33,\n\t\"LBS\": 34,\n\t\"MDS\": 35,\n\t\"CS\": 36,\n\t\"GC\": 37,\n\t\"NS\": 38,\n\t\"OGS\": 39,\n\t\"WebAPI\": 40,\n\t\"UDS\": 41,\n\t\"MMS\": 42,\n\t\"GMS\": 43,\n\t\"KGS\": 44,\n\t\"UCM\": 45,\n\t\"RM\": 46,\n\t\"FS\": 47,\n\t\"Econ\": 48,\n\t\"Backpack\": 49,\n\t\"UGS\": 50,\n\t\"Store\": 51, // obsolete \"renamed to StoreFeature\"\n\t\"StoreFeature\": 51,\n\t\"MoneyStats\": 52,\n\t\"CRE\": 53,\n\t\"UMQ\": 54,\n\t\"Workshop\": 55,\n\t\"BRP\": 56,\n\t\"GCH\": 57,\n\t\"MPAS\": 58,\n\t\"Trade\": 59,\n\t\"Secrets\": 60,\n\t\"Logsink\": 61,\n\t\"Market\": 62,\n\t\"Quest\": 63,\n\t\"WDS\": 64,\n\t\"ACS\": 65,\n\t\"PNP\": 66,\n\t\"TaxForm\": 67,\n\t\"ExternalMonitor\": 68,\n\t\"Parental\": 69,\n\t\"PartnerUpload\": 70,\n\t\"Partner\": 71,\n\t\"ES\": 72,\n\t\"DepotWebContent\": 73,\n\t\"ExternalConfig\": 74,\n\t\"GameNotifications\": 75,\n\t\"MarketRepl\": 76,\n\t\"MarketSearch\": 77,\n\t\"Localization\": 78,\n\t\"Steam2Emulator\": 79,\n\t\"PublicTest\": 80,\n\t\"SolrMgr\": 81,\n\t\"BroadcastRelay\": 82,\n\t\"BroadcastDirectory\": 83,\n\t\"VideoManager\": 84,\n\t\"TradeOffer\": 85,\n\t\"BroadcastChat\": 86,\n\t\"Phone\": 87,\n\t\"AccountScore\": 88,\n\t\"Support\": 89,\n\t\"LogRequest\": 90,\n\t\"LogWorker\": 91,\n\t\"EmailDelivery\": 92,\n\t\"InventoryManagement\": 93,\n\t\"Auth\": 94,\n\t\"StoreCatalog\": 95,\n\t\"HLTVRelay\": 96,\n\t\"Max\": 97,\n\n\t// Value-to-name mapping for convenience\n\t\"-1\": \"Invalid\",\n\t\"0\": \"Shell\",\n\t\"1\": \"GM\",\n\t\"2\": \"BUMOBOSOLETE\",\n\t\"3\": \"AM\",\n\t\"4\": \"BS\",\n\t\"5\": \"VS\",\n\t\"6\": \"ATS\",\n\t\"7\": \"CM\",\n\t\"8\": \"FBS\",\n\t\"9\": \"BoxMonitor\",\n\t\"10\": \"SS\",\n\t\"11\": \"DRMS\",\n\t\"12\": \"HubOBSOLETE\",\n\t\"13\": \"Console\",\n\t\"14\": \"PICS\",\n\t\"15\": \"Client\",\n\t\"16\": \"BootstrapOBSOLETE\",\n\t\"17\": \"DP\",\n\t\"18\": \"WG\",\n\t\"19\": \"SM\",\n\t\"20\": \"SLC\",\n\t\"21\": \"UFS\",\n\t\"23\": \"Util\",\n\t\"24\": \"Community\",\n\t\"25\": \"P2PRelayOBSOLETE\",\n\t\"26\": \"AppInformation\",\n\t\"27\": \"Spare\",\n\t\"28\": \"FTS\",\n\t\"29\": \"EPMOBSOLETE\",\n\t\"30\": \"PS\",\n\t\"31\": \"IS\",\n\t\"32\": \"CCS\",\n\t\"33\": \"DFS\",\n\t\"34\": \"LBS\",\n\t\"35\": \"MDS\",\n\t\"36\": \"CS\",\n\t\"37\": \"GC\",\n\t\"38\": \"NS\",\n\t\"39\": \"OGS\",\n\t\"40\": \"WebAPI\",\n\t\"41\": \"UDS\",\n\t\"42\": \"MMS\",\n\t\"43\": \"GMS\",\n\t\"44\": \"KGS\",\n\t\"45\": \"UCM\",\n\t\"46\": \"RM\",\n\t\"47\": \"FS\",\n\t\"48\": \"Econ\",\n\t\"49\": \"Backpack\",\n\t\"50\": \"UGS\",\n\t\"51\": \"StoreFeature\",\n\t\"52\": \"MoneyStats\",\n\t\"53\": \"CRE\",\n\t\"54\": \"UMQ\",\n\t\"55\": \"Workshop\",\n\t\"56\": \"BRP\",\n\t\"57\": \"GCH\",\n\t\"58\": \"MPAS\",\n\t\"59\": \"Trade\",\n\t\"60\": \"Secrets\",\n\t\"61\": \"Logsink\",\n\t\"62\": \"Market\",\n\t\"63\": \"Quest\",\n\t\"64\": \"WDS\",\n\t\"65\": \"ACS\",\n\t\"66\": \"PNP\",\n\t\"67\": \"TaxForm\",\n\t\"68\": \"ExternalMonitor\",\n\t\"69\": \"Parental\",\n\t\"70\": \"PartnerUpload\",\n\t\"71\": \"Partner\",\n\t\"72\": \"ES\",\n\t\"73\": \"DepotWebContent\",\n\t\"74\": \"ExternalConfig\",\n\t\"75\": \"GameNotifications\",\n\t\"76\": \"MarketRepl\",\n\t\"77\": \"MarketSearch\",\n\t\"78\": \"Localization\",\n\t\"79\": \"Steam2Emulator\",\n\t\"80\": \"PublicTest\",\n\t\"81\": \"SolrMgr\",\n\t\"82\": \"BroadcastRelay\",\n\t\"83\": \"BroadcastDirectory\",\n\t\"84\": \"VideoManager\",\n\t\"85\": \"TradeOffer\",\n\t\"86\": \"BroadcastChat\",\n\t\"87\": \"Phone\",\n\t\"88\": \"AccountScore\",\n\t\"89\": \"Support\",\n\t\"90\": \"LogRequest\",\n\t\"91\": \"LogWorker\",\n\t\"92\": \"EmailDelivery\",\n\t\"93\": \"InventoryManagement\",\n\t\"94\": \"Auth\",\n\t\"95\": \"StoreCatalog\",\n\t\"96\": \"HLTVRelay\",\n\t\"97\": \"Max\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/ESystemIMType.js":"/**\n * @enum ESystemIMType\n */\nmodule.exports = {\n\t\"RawText\": 0,\n\t\"InvalidCard\": 1,\n\t\"RecurringPurchaseFailed\": 2,\n\t\"CardWillExpire\": 3,\n\t\"SubscriptionExpired\": 4,\n\t\"GuestPassReceived\": 5,\n\t\"GuestPassGranted\": 6,\n\t\"GiftRevoked\": 7,\n\t\"SupportMessage\": 8,\n\t\"SupportMessageClearAlert\": 9,\n\t\"Max\": 10,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"RawText\",\n\t\"1\": \"InvalidCard\",\n\t\"2\": \"RecurringPurchaseFailed\",\n\t\"3\": \"CardWillExpire\",\n\t\"4\": \"SubscriptionExpired\",\n\t\"5\": \"GuestPassReceived\",\n\t\"6\": \"GuestPassGranted\",\n\t\"7\": \"GiftRevoked\",\n\t\"8\": \"SupportMessage\",\n\t\"9\": \"SupportMessageClearAlert\",\n\t\"10\": \"Max\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EUCMFilePrivacyState.js":"/**\n * @enum EUCMFilePrivacyState\n */\nmodule.exports = {\n\t\"Invalid\": -1,\n\t\"Private\": 2,\n\t\"FriendsOnly\": 4,\n\t\"Public\": 8,\n\n\t// Value-to-name mapping for convenience\n\t\"-1\": \"Invalid\",\n\t\"2\": \"Private\",\n\t\"4\": \"FriendsOnly\",\n\t\"8\": \"Public\",\n};\n\nmodule.exports.All = module.exports.Public | module.exports.FriendsOnly | module.exports.Private;\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EUdpPacketType.js":"/**\n * @enum EUdpPacketType\n */\nmodule.exports = {\n\t\"Invalid\": 0,\n\t\"ChallengeReq\": 1,\n\t\"Challenge\": 2,\n\t\"Connect\": 3,\n\t\"Accept\": 4,\n\t\"Disconnect\": 5,\n\t\"Data\": 6,\n\t\"Datagram\": 7,\n\t\"Max\": 8,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"Invalid\",\n\t\"1\": \"ChallengeReq\",\n\t\"2\": \"Challenge\",\n\t\"3\": \"Connect\",\n\t\"4\": \"Accept\",\n\t\"5\": \"Disconnect\",\n\t\"6\": \"Data\",\n\t\"7\": \"Datagram\",\n\t\"8\": \"Max\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EUniverse.js":"/**\n * @enum EUniverse\n */\nmodule.exports = {\n\t\"Invalid\": 0,\n\t\"Public\": 1,\n\t\"Beta\": 2,\n\t\"Internal\": 3,\n\t\"Dev\": 4,\n\t\"Max\": 5,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"Invalid\",\n\t\"1\": \"Public\",\n\t\"2\": \"Beta\",\n\t\"3\": \"Internal\",\n\t\"4\": \"Dev\",\n\t\"5\": \"Max\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EWorkshopEnumerationType.js":"/**\n * @enum EWorkshopEnumerationType\n */\nmodule.exports = {\n\t\"RankedByVote\": 0,\n\t\"Recent\": 1,\n\t\"Trending\": 2,\n\t\"FavoriteOfFriends\": 3,\n\t\"VotedByFriends\": 4,\n\t\"ContentByFriends\": 5,\n\t\"RecentFromFollowedUsers\": 6,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"RankedByVote\",\n\t\"1\": \"Recent\",\n\t\"2\": \"Trending\",\n\t\"3\": \"FavoriteOfFriends\",\n\t\"4\": \"VotedByFriends\",\n\t\"5\": \"ContentByFriends\",\n\t\"6\": \"RecentFromFollowedUsers\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EWorkshopFileAction.js":"/**\n * @enum EWorkshopFileAction\n */\nmodule.exports = {\n\t\"Played\": 0,\n\t\"Completed\": 1,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"Played\",\n\t\"1\": \"Completed\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/enums/EWorkshopFileType.js":"/**\n * @enum EWorkshopFileType\n */\nmodule.exports = {\n\t\"First\": 0,\n\t\"SteamworksAccessInvite\": 13,\n\t\"SteamVideo\": 14,\n\t\"GameManagedItem\": 15,\n\t\"Max\": 16,\n\n\t// Value-to-name mapping for convenience\n\t\"0\": \"First\",\n\t\"13\": \"SteamworksAccessInvite\",\n\t\"14\": \"SteamVideo\",\n\t\"15\": \"GameManagedItem\",\n\t\"16\": \"Max\",\n};\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/resources/CurrencyData.js":"var ECurrencyCode = require('../enums/ECurrencyCode.js');\r\n\r\nvar CurrencyData = {};\r\nCurrencyData[ECurrencyCode.USD] = {\"prepend\": \"$\"};\r\nCurrencyData[ECurrencyCode.GBP] = {\"prepend\": \"�\"};\r\nCurrencyData[ECurrencyCode.EUR] = {\"append\": \"�\", \"commas\": true};\r\nCurrencyData[ECurrencyCode.CHF] = {\"append\": \" CHF\"};\r\nCurrencyData[ECurrencyCode.RUB] = {\"append\": \" p\\u0443\\u0431.\", \"commas\": true, \"whole\": true};\r\nCurrencyData[ECurrencyCode.PLN] = {\"append\": \" PLN\"};\r\nCurrencyData[ECurrencyCode.BRL] = {\"append\": \" R$\", \"commas\": true};\r\nCurrencyData[ECurrencyCode.JPY] = {\"prepend\": \"� \", \"whole\": true};\r\nCurrencyData[ECurrencyCode.NOK] = {\"append\": \" kr\", \"commas\": true};\r\nCurrencyData[ECurrencyCode.IDR] = {\"prepend\": \"Rp \"};\r\nCurrencyData[ECurrencyCode.MYR] = {\"prepend\": \"RM \"};\r\nCurrencyData[ECurrencyCode.PHP] = {\"prepend\": \"P \"};\r\nCurrencyData[ECurrencyCode.SGD] = {\"prepend\": \"S$ \"};\r\nCurrencyData[ECurrencyCode.THB] = {\"prepend\": \"\\u0e3f \"};\r\nCurrencyData[ECurrencyCode.VND] = {\"append\": \" VND\"};\r\nCurrencyData[ECurrencyCode.KRW] = {\"prepend\": \"\\u20a9\", \"whole\": true};\r\nCurrencyData[ECurrencyCode.TRY] = {\"append\": \" TRY\"};\r\nCurrencyData[ECurrencyCode.UAH] = {\"append\": \" UAH\"};\r\nCurrencyData[ECurrencyCode.MXN] = {\"prepend\": \"Mex$ \"};\r\nCurrencyData[ECurrencyCode.CAD] = {\"prepend\": \"CDN$ \"};\r\nCurrencyData[ECurrencyCode.AUD] = {\"prepend\": \"A$ \"};\r\nCurrencyData[ECurrencyCode.NZD] = {\"prepend\": \"NZ$ \"};\r\nCurrencyData[ECurrencyCode.CNY] = {\"append\": \" CNY\"};\r\nCurrencyData[ECurrencyCode.INR] = {\"append\": \" INR\"};\r\nCurrencyData[ECurrencyCode.CLP] = {\"append\": \" CLP\"};\r\nCurrencyData[ECurrencyCode.PEN] = {\"append\": \" PEN\"};\r\nCurrencyData[ECurrencyCode.COP] = {\"append\": \" COP\"};\r\nCurrencyData[ECurrencyCode.ZAR] = {\"append\": \" ZAR\"};\r\nCurrencyData[ECurrencyCode.HKD] = {\"append\": \" HKD\"};\r\nCurrencyData[ECurrencyCode.TWD] = {\"append\": \" TWD\"};\r\nCurrencyData[ECurrencyCode.SAR] = {\"append\": \" SAR\"};\r\nCurrencyData[ECurrencyCode.AED] = {\"append\": \" AED\"};\r\n\r\nmodule.exports = CurrencyData;\r\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/resources/EClientUIMode.js":"/**\r\n * @enum EClientUIMode\r\n */\r\nmodule.exports = {\r\n\t\"None\": 0,\r\n\t\"BigPicture\": 1,\r\n\t\"Mobile\": 2,\r\n\t\"Web\": 3\r\n\r\n\t// I don't know how to get the VR thing\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/resources/EMachineIDType.js":"/**\r\n * What type of machine ID SteamUser will use to logon to Steam with.\r\n * @readonly\r\n * @enum {number}\r\n * @since 1.7.0\r\n */\r\nmodule.exports = {\r\n\t/** No machine ID will be provided to Steam */\r\n\t\"None\": 1,\r\n\r\n\t/** A randomly-generated machine ID will be created on each logon */\r\n\t\"AlwaysRandom\": 2,\r\n\r\n\t/** A machine ID will be generated from your account's username */\r\n\t\"AccountNameGenerated\": 3,\r\n\r\n\t/** A random machine ID will be generated and saved to the {dataDirectory}, and will be used for future logons */\r\n\t\"PersistentRandom\": 4\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/resources/enums.js":"","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/resources/EPurchaseResult.js":"module.exports = {\r\n\t\"Unknown\": -1,\r\n\t\"OK\": 0,\r\n\t\"AlreadyOwned\": 9,\r\n\t\"RegionLockedKey\": 13,\r\n\t\"InvalidKey\": 14,\r\n\t\"DuplicatedKey\": 15,\r\n\t\"BaseGameRequired\": 24,\r\n\t\"OnCooldown\": 53\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/scripts/generate-enums.js":"// Generate enums\r\nif (!require('fs').existsSync(__dirname + '/../enums')) {\r\n\trequire('fs').mkdirSync(__dirname + '/../enums');\r\n}\r\n\r\nrequire('fs').writeFile(__dirname + '/../resources/enums.js', \"// Auto-generated by generate-enums script on \" + (new Date()).toString() + \"\\n\\nvar SteamUser = require('../index.js');\\n\\n\");\r\n\r\ndownload(\"https://api.github.com/repos/SteamRE/SteamKit/contents/Resources/SteamLanguage\", function(data) {\r\n\tvar json = JSON.parse(data);\r\n\tif (!json.length) {\r\n\t\tthrow new Error(\"Cannot get data from GitHub\");\r\n\t}\r\n\r\n\tvar remainingFiles = 0;\r\n\tjson.forEach(function(file) {\r\n\t\tif (!file.name.match(/\\.steamd$/)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tremainingFiles++;\r\n\t\t// Get the download URL from the github API\r\n\t\tdownload(file.download_url, function(fileContents) {\r\n\t\t\t// This parser isn't terribly robust, but it works as long as SteamRE doesn't change their resource format\r\n\t\t\tvar currentEnum = null;\r\n\t\t\tfileContents.split(\"\\n\").forEach(function(line) {\r\n\t\t\t\tline = line.trim();\r\n\t\t\t\tvar idx = line.indexOf(\"//\");\r\n\t\t\t\tif (idx != -1) {\r\n\t\t\t\t\tline = line.substring(0, idx).trim();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar match;\r\n\t\t\t\tif (!currentEnum) {\r\n\t\t\t\t\t// We're not currently parsing any enum. Is this the opening of one?\r\n\t\t\t\t\tif (match = line.match(/^enum (E[a-zA-Z0-9]+)(<[a-z]+>)?( flags)?/)) {\r\n\t\t\t\t\t\t// Okay, this is an enum assuming the next line is a bracket\r\n\t\t\t\t\t\tcurrentEnum = match[1];\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (typeof currentEnum === 'string') {\r\n\t\t\t\t\tif (line != \"{\") {\r\n\t\t\t\t\t\tthrow new Error(\"Syntax error parsing \" + file.name + \", bad token following \" + currentEnum);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Okay now we're *really* parsing this enum\r\n\t\t\t\t\t\tcurrentEnum = {\r\n\t\t\t\t\t\t\t\"name\": currentEnum,\r\n\t\t\t\t\t\t\t\"values\": [],\r\n\t\t\t\t\t\t\t\"dynamicValues\": []\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (line.match(/^};?$/)) {\r\n\t\t\t\t\t\tconsole.log(\"Generating \" + currentEnum.name + \".js...\");\r\n\t\t\t\t\t\t// We're done parsing this enum, let's go ahead and generate the file\r\n\t\t\t\t\t\tvar file = \"/**\\n * @enum \" + currentEnum.name + \"\\n */\\nmodule.exports = {\\n\";\r\n\r\n\t\t\t\t\t\tcurrentEnum.values.forEach(function(val) {\r\n\t\t\t\t\t\t\tfile += \"\\t\\\"\" + val.name + \"\\\": \" + val.value + \",\" + (val.comment ? \" // \" + val.comment.trim() : \"\") + \"\\n\";\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tfile += \"\\n\\t// Value-to-name mapping for convenience\\n\";\r\n\r\n\t\t\t\t\t\t// Put down the reverse, for simplicity in use\r\n\t\t\t\t\t\tcurrentEnum.values.forEach(function(val, idx) {\r\n\t\t\t\t\t\t\tif (!val.value.match(/^-?[0-9]+/)) {\r\n\t\t\t\t\t\t\t\treturn; // it's dynamic\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Is this the last value in this enum with this value?\r\n\t\t\t\t\t\t\tif (currentEnum.values.some(function(val2, idx2) { return val2.value == val.value && idx2 > idx; })) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tfile += \"\\t\\\"\" + val.value + \"\\\": \\\"\" + val.name + \"\\\",\\n\";\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tfile += \"};\\n\";\r\n\r\n\t\t\t\t\t\tif (currentEnum.dynamicValues.length > 0) {\r\n\t\t\t\t\t\t\tfile += \"\\n\";\r\n\t\t\t\t\t\t\tcurrentEnum.dynamicValues.forEach(function(val) {\r\n\t\t\t\t\t\t\t\tfile += \"module.exports.\" + val.name + \" = \" + val.value + \";\" + (val.comment ? \" // \" + val.comment.trim() : \"\") + \"\\n\";\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\trequire('fs').writeFile(__dirname + '/../enums/' + currentEnum.name + '.js', file);\r\n\t\t\t\t\t\trequire('fs').appendFile(__dirname + '/../resources/enums.js', \"SteamUser.\" + currentEnum.name + \" = require('../enums/\" + currentEnum.name + \".js');\\n\");\r\n\t\t\t\t\t\tcurrentEnum = null;\r\n\t\t\t\t\t} else if (match = line.match(/^([A-Za-z0-9_]+) = ([^;]+);(.*)$/)) {\r\n\t\t\t\t\t\tvar name = match[1];\r\n\t\t\t\t\t\tvar value = match[2];\r\n\t\t\t\t\t\tvar comment = match[3];\r\n\r\n\t\t\t\t\t\tif (value.match(/^0x[0-9A-Fa-f]+$/)) {\r\n\t\t\t\t\t\t\tvalue = parseInt(value.substring(2), 16).toString();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar isDynamic = false;\r\n\r\n\t\t\t\t\t\tvar flags = value.split('|').map(function(flag) {\r\n\t\t\t\t\t\t\tflag = flag.trim();\r\n\r\n\t\t\t\t\t\t\tif (flag.match(/^-?[0-9]+$/)) {\r\n\t\t\t\t\t\t\t\treturn flag;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tisDynamic = true;\r\n\t\t\t\t\t\t\t\treturn 'module.exports.' + flag;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tvalue = flags.join(' | ');\r\n\r\n\t\t\t\t\t\t(isDynamic ? currentEnum.dynamicValues : currentEnum.values).push({\r\n\t\t\t\t\t\t\t\"name\": name,\r\n\t\t\t\t\t\t\t\"value\": value,\r\n\t\t\t\t\t\t\t\"comment\": comment\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t});\r\n});\r\n\r\n// Helper functions\r\nfunction download(url, callback) {\r\n\tvar reqData = require('url').parse(url);\r\n\treqData.servername = reqData.hostname;\r\n\treqData.headers = {\"User-Agent\": \"node-steam-user data parser\"};\r\n\treqData.method = \"GET\";\r\n\r\n\t// This will crash if there's an error. But that's fine.\r\n\trequire('https').request(reqData, function(res) {\r\n\t\tvar data = \"\";\r\n\t\tres.on('data', function(chunk) {\r\n\t\t\tdata += chunk;\r\n\t\t});\r\n\r\n\t\tres.on('end', function() {\r\n\t\t\tcallback(data);\r\n\t\t});\r\n\t}).end();\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-steam-user/node_modules/steam-user/scripts/prepublish.js":"// This file is run by npm prior to the package being published to the registry\r\n\r\n// Update the CM list\r\ndownload(\"https://api.steampowered.com/ISteamDirectory/GetCMList/v1/?format=json&cellid=0\", function(data) {\r\n\tvar json = JSON.parse(data);\r\n\r\n\tif (!json.response || json.response.result != 1) {\r\n\t\tthrow new Error(\"Cannot get CM list\");\r\n\t}\r\n\r\n\tvar servers = json.response.serverlist.map(function(server) {\r\n\t\tvar parts = server.split(':');\r\n\t\treturn {\r\n\t\t\t\"host\": parts[0],\r\n\t\t\t\"port\": parseInt(parts[1], 10)\r\n\t\t};\r\n\t});\r\n\r\n\tconsole.log(\"Got list of \" + servers.length + \" CMs from WebAPI\");\r\n\trequire('fs').writeFileSync(__dirname + '/../resources/servers.json', JSON.stringify(servers, null, \"\\t\"));\r\n});\r\n\r\n\r\n// Helper functions\r\nfunction download(url, callback) {\r\n\tvar reqData = require('url').parse(url);\r\n\treqData.servername = reqData.hostname;\r\n\treqData.headers = {\"User-Agent\": \"node-steam-user data parser\"};\r\n\treqData.method = \"GET\";\r\n\r\n\t// This will crash if there's an error. But that's fine.\r\n\trequire('https').request(reqData, function(res) {\r\n\t\tvar data = \"\";\r\n\t\tres.on('data', function(chunk) {\r\n\t\t\tdata += chunk;\r\n\t\t});\r\n\r\n\t\tres.on('end', function() {\r\n\t\t\tcallback(data);\r\n\t\t});\r\n\t}).end();\r\n}\r\n"}